{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as am5 from '@amcharts/amcharts5';\nimport * as am5xy from '@amcharts/amcharts5/xy';\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\nimport Loader from '@/components/loader/loader.vue';\nexport default {\n  name: 'KetyFacts',\n\n  data() {\n    return {\n      loader: false\n    };\n  },\n\n  computed: { ...mapState({\n      user: state => state.auth.user,\n      uid: state => state.auth.uid\n    })\n  },\n\n  mounted() {\n    let root = am5.Root.new(this.$refs.chartdiv);\n    root.setThemes([am5themes_Animated.new(root)]);\n    let chart = root.container.children.push(am5xy.XYChart.new(root, {\n      panY: false,\n      layout: root.verticalLayout\n    })); // Define data\n\n    let data = [{\n      category: \"Research\",\n      value1: 1000,\n      value2: 588\n    }, {\n      category: \"Marketing\",\n      value1: 1200,\n      value2: 1800\n    }, {\n      category: \"Sales\",\n      value1: 850,\n      value2: 1230\n    }]; // Create Y-axis\n\n    let yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\n      renderer: am5xy.AxisRendererY.new(root, {})\n    })); // Create X-Axis\n\n    let xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {\n      renderer: am5xy.AxisRendererX.new(root, {}),\n      categoryField: \"category\"\n    }));\n    xAxis.data.setAll(data); // Create series\n\n    let series1 = chart.series.push(am5xy.ColumnSeries.new(root, {\n      name: \"Series\",\n      xAxis: xAxis,\n      yAxis: yAxis,\n      valueYField: \"value1\",\n      categoryXField: \"category\"\n    }));\n    series1.data.setAll(data);\n    let series2 = chart.series.push(am5xy.ColumnSeries.new(root, {\n      name: \"Series\",\n      xAxis: xAxis,\n      yAxis: yAxis,\n      valueYField: \"value2\",\n      categoryXField: \"category\"\n    }));\n    series2.data.setAll(data); // Add legend\n\n    let legend = chart.children.push(am5.Legend.new(root, {}));\n    legend.data.setAll(chart.series.values); // Add cursor\n\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\n    this.root = root;\n  },\n\n  beforeDestroy() {\n    if (this.root) {\n      this.root.dispose();\n    }\n  }\n\n};","map":{"version":3,"mappings":";AASA;AACA;AACA;AACA;AAEA;EACAA,iBADA;;EAEAC;IACA;MACAC;IADA;EAGA,CANA;;EAOAC,YACA;MACAC,8BADA;MAEAC;IAFA;EADA,CAPA;;EAaAC;IACA;IAEAC;IAEA,yCACAC;MACAC,WADA;MAEAC;IAFA,EADA,EALA,CAYA;;IACA;MACAC,oBADA;MAEAC,YAFA;MAGAC;IAHA,GAKA;MACAF,qBADA;MAEAC,YAFA;MAGAC;IAHA,CALA,EASA;MACAF,iBADA;MAEAC,WAFA;MAGAC;IAHA,CATA,EAbA,CA6BA;;IACA,6BACAL;MACAM;IADA,EADA,EA9BA,CAoCA;;IACA,6BACAN;MACAM,2CADA;MAEAC;IAFA,EADA;IAMAC,wBA3CA,CA6CA;;IACA,gCACAR;MACAR,cADA;MAEAgB,YAFA;MAGAC,YAHA;MAIAC,qBAJA;MAKAC;IALA,EADA;IASAC;IAEA,gCACAZ;MACAR,cADA;MAEAgB,YAFA;MAGAC,YAHA;MAIAC,qBAJA;MAKAC;IALA,EADA;IASAE,0BAlEA,CAoEA;;IACA;IACAC,wCAtEA,CAwEA;;IACAC;IAEA;EACA,CAzFA;;EA2FAC;IACA;MACA;IACA;EACA;;AA/FA","names":["name","data","loader","computed","user","uid","mounted","root","am5xy","panY","layout","category","value1","value2","renderer","categoryField","xAxis","yAxis","valueYField","categoryXField","series1","series2","legend","chart","beforeDestroy"],"sourceRoot":"src/views","sources":["KeyFacts.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        Loader\r\n        <div class=\"hello\" ref=\"chartdiv\">\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport Loader from '@/components/loader/loader.vue'\r\n\r\nexport default {\r\n    name: 'KetyFacts',\r\n    data() {\r\n        return {\r\n            loader: false,\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.auth.user,\r\n            uid: state => state.auth.uid\r\n        })\r\n    },\r\n    mounted() {\r\n        let root = am5.Root.new(this.$refs.chartdiv);\r\n\r\n        root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n        let chart = root.container.children.push(\r\n            am5xy.XYChart.new(root, {\r\n                panY: false,\r\n                layout: root.verticalLayout\r\n            })\r\n        );\r\n\r\n        // Define data\r\n        let data = [{\r\n            category: \"Research\",\r\n            value1: 1000,\r\n            value2: 588\r\n        },\r\n        {\r\n            category: \"Marketing\",\r\n            value1: 1200,\r\n            value2: 1800\r\n        }, {\r\n            category: \"Sales\",\r\n            value1: 850,\r\n            value2: 1230\r\n        }\r\n        ];\r\n\r\n        // Create Y-axis\r\n        let yAxis = chart.yAxes.push(\r\n            am5xy.ValueAxis.new(root, {\r\n                renderer: am5xy.AxisRendererY.new(root, {})\r\n            })\r\n        );\r\n\r\n        // Create X-Axis\r\n        let xAxis = chart.xAxes.push(\r\n            am5xy.CategoryAxis.new(root, {\r\n                renderer: am5xy.AxisRendererX.new(root, {}),\r\n                categoryField: \"category\"\r\n            })\r\n        );\r\n        xAxis.data.setAll(data);\r\n\r\n        // Create series\r\n        let series1 = chart.series.push(\r\n            am5xy.ColumnSeries.new(root, {\r\n                name: \"Series\",\r\n                xAxis: xAxis,\r\n                yAxis: yAxis,\r\n                valueYField: \"value1\",\r\n                categoryXField: \"category\"\r\n            })\r\n        );\r\n        series1.data.setAll(data);\r\n\r\n        let series2 = chart.series.push(\r\n            am5xy.ColumnSeries.new(root, {\r\n                name: \"Series\",\r\n                xAxis: xAxis,\r\n                yAxis: yAxis,\r\n                valueYField: \"value2\",\r\n                categoryXField: \"category\"\r\n            })\r\n        );\r\n        series2.data.setAll(data);\r\n\r\n        // Add legend\r\n        let legend = chart.children.push(am5.Legend.new(root, {}));\r\n        legend.data.setAll(chart.series.values);\r\n\r\n        // Add cursor\r\n        chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n        this.root = root;\r\n    },\r\n\r\n    beforeDestroy() {\r\n        if (this.root) {\r\n            this.root.dispose();\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.hello {\r\n    width: 100%;\r\n    height: 500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}