{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\n\nvar Container =\n/** @class */\nfunction (_super) {\n  __extends(Container, _super);\n\n  function Container() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    Object.defineProperty(_this, \"_childrenDisplay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    /**\r\n     * List of Container's child elements.\r\n     */\n\n    Object.defineProperty(_this, \"children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Children(_this)\n    });\n    Object.defineProperty(_this, \"_percentageSizeChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_percentagePositionChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_prevWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_prevHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_vsbd0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_vsbd1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Container.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterNew.call(this);\n\n      this._display.addChild(this._childrenDisplay);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      $array.eachReverse(this.allChildren(), function (child) {\n        child.dispose();\n      });\n\n      if (this.getPrivate(\"htmlElement\")) {\n        this._root._removeHTMLContent(this);\n      }\n\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      if (this.isDirty(\"interactiveChildren\")) {\n        this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n      }\n\n      if (this.isDirty(\"layout\")) {\n        this._prevWidth = 0;\n        this._prevHeight = 0;\n        this.markDirtyBounds();\n\n        if (this._prevSettings.layout) {\n          this.children.each(function (child) {\n            child.removePrivate(\"x\");\n            child.removePrivate(\"y\");\n          });\n        }\n      }\n\n      if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n        this.children.each(function (child) {\n          child.markDirtyPosition();\n        });\n      }\n\n      if (this.isDirty(\"maskContent\")) {\n        var childrenDisplay = this._childrenDisplay;\n        var contentMask = this._contentMask;\n\n        if (this.get(\"maskContent\")) {\n          if (!contentMask) {\n            contentMask = Rectangle.new(this._root, {\n              width: this.width(),\n              height: this.height()\n            });\n            this._contentMask = contentMask;\n            childrenDisplay.addChildAt(contentMask._display, 0);\n            childrenDisplay.mask = contentMask._display;\n          }\n        } else {\n          if (contentMask) {\n            childrenDisplay.removeChild(contentMask._display);\n            childrenDisplay.mask = null;\n            contentMask.dispose();\n            this._contentMask = undefined;\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateSize.call(this);\n\n      $array.each(this._percentageSizeChildren, function (child) {\n        child._updateSize();\n      });\n      $array.each(this._percentagePositionChildren, function (child) {\n        child.markDirtyPosition();\n\n        child._updateSize();\n      });\n      this.updateBackground();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"updateBackground\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var background = this.get(\"background\");\n      var bounds = this._localBounds;\n\n      if (bounds && !this.isHidden()) {\n        var x = bounds.left;\n        var y = bounds.top;\n        var w = bounds.right - x;\n        var h = bounds.bottom - y;\n        var maxWidth = this.get(\"maxWidth\");\n        var maxHeight = this.get(\"maxHeight\");\n\n        if (maxHeight) {\n          if (h > maxHeight) {\n            h = maxHeight;\n          }\n        }\n\n        if (maxWidth) {\n          if (w > maxWidth) {\n            w = maxWidth;\n          }\n        }\n\n        var width = this.width();\n        var height = this.height();\n\n        if (background) {\n          background.setAll({\n            width: w,\n            height: h,\n            x: x,\n            y: y\n          });\n\n          if (this._display.interactive) {\n            background._display.interactive = true;\n          }\n        }\n\n        var contentMask = this._contentMask;\n\n        if (contentMask) {\n          contentMask.setAll({\n            width: width,\n            height: height\n          });\n        }\n\n        var verticalScrollbar = this.get(\"verticalScrollbar\");\n\n        if (verticalScrollbar) {\n          verticalScrollbar.set(\"height\", height);\n          verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n          verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n          var bg = verticalScrollbar.get(\"background\");\n\n          if (bg) {\n            bg.setAll({\n              width: verticalScrollbar.width(),\n              height: height\n            });\n          }\n\n          var visible = true;\n\n          if (this._contentHeight <= height) {\n            visible = false;\n          }\n\n          verticalScrollbar.setPrivate(\"visible\", visible);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (_super.prototype._applyThemes.call(this)) {\n        this.eachChildren(function (child) {\n          child._applyThemes();\n        });\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyState\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      _super.prototype._applyState.call(this, name);\n\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.apply(name);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyStateAnimated\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, duration) {\n      _super.prototype._applyStateAnimated.call(this, name, duration);\n\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.applyAnimate(name, duration);\n        });\n      }\n    }\n  });\n  /**\r\n   * Returns container's inner width (width without padding) in pixels.\r\n   *\r\n   * @return Inner width (px)\r\n   */\n\n  Object.defineProperty(Container.prototype, \"innerWidth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n    }\n  });\n  /**\r\n   * Returns container's inner height (height without padding) in pixels.\r\n   *\r\n   * @return Inner height (px)\r\n   */\n\n  Object.defineProperty(Container.prototype, \"innerHeight\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var width = this.get(\"width\");\n      var height = this.get(\"height\");\n      var pWidth = this.getPrivate(\"width\");\n      var pHeight = this.getPrivate(\"height\");\n      var bounds = {\n        left: 0,\n        top: 0,\n        right: this.width(),\n        bottom: this.height()\n      };\n      var layout = this.get(\"layout\");\n      var horizontal = false;\n      var vertical = false;\n\n      if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n        horizontal = true;\n      }\n\n      if (layout instanceof VerticalLayout) {\n        vertical = true;\n      }\n\n      if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {// void\n      } else {\n        var m = Number.MAX_VALUE;\n        var l_1 = m;\n        var r_1 = -m;\n        var t_1 = m;\n        var b_1 = -m;\n        var paddingLeft = this.get(\"paddingLeft\", 0);\n        var paddingTop = this.get(\"paddingTop\", 0);\n        var paddingRight = this.get(\"paddingRight\", 0);\n        var paddingBottom = this.get(\"paddingBottom\", 0);\n        this.children.each(function (child) {\n          if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n            var childBounds = child.adjustedLocalBounds();\n            var childX = child.x();\n            var childY = child.y();\n            var cl = childX + childBounds.left;\n            var cr = childX + childBounds.right;\n            var ct = childY + childBounds.top;\n            var cb = childY + childBounds.bottom;\n\n            if (horizontal) {\n              cl -= child.get(\"marginLeft\", 0);\n              cr += child.get(\"marginRight\", 0);\n            }\n\n            if (vertical) {\n              ct -= child.get(\"marginTop\", 0);\n              cb += child.get(\"marginBottom\", 0);\n            }\n\n            if (cl < l_1) {\n              l_1 = cl;\n            }\n\n            if (cr > r_1) {\n              r_1 = cr;\n            }\n\n            if (ct < t_1) {\n              t_1 = ct;\n            }\n\n            if (cb > b_1) {\n              b_1 = cb;\n            }\n          }\n        });\n\n        if (l_1 == m) {\n          l_1 = 0;\n        }\n\n        if (r_1 == -m) {\n          r_1 = 0;\n        }\n\n        if (t_1 == m) {\n          t_1 = 0;\n        }\n\n        if (b_1 == -m) {\n          b_1 = 0;\n        }\n\n        bounds.left = l_1 - paddingLeft;\n        bounds.top = t_1 - paddingTop;\n        bounds.right = r_1 + paddingRight;\n        bounds.bottom = b_1 + paddingBottom;\n      }\n\n      this._contentWidth = bounds.right - bounds.left;\n      this._contentHeight = bounds.bottom - bounds.top;\n\n      if ($type.isNumber(width)) {\n        bounds.left = 0;\n        bounds.right = width;\n      }\n\n      if ($type.isNumber(pWidth)) {\n        bounds.left = 0;\n        bounds.right = pWidth;\n      }\n\n      if ($type.isNumber(height)) {\n        bounds.top = 0;\n        bounds.bottom = height;\n      }\n\n      if ($type.isNumber(pHeight)) {\n        bounds.top = 0;\n        bounds.bottom = pHeight;\n      }\n\n      this._localBounds = bounds;\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var layout = this.get(\"layout\");\n\n      if (layout) {\n        layout.updateContainer(this);\n      }\n\n      _super.prototype._updateBounds.call(this);\n\n      this.updateBackground();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Container.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.markDirty.call(this);\n\n      this._root._addDirtyParent(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var innerWidth = this.innerWidth();\n      var innerHeight = this.innerHeight();\n\n      if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n        var layout = this.get(\"layout\");\n        var horizontal_1 = false;\n        var vertical_1 = false;\n\n        if (layout) {\n          if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n            horizontal_1 = true;\n          }\n\n          if (layout instanceof VerticalLayout) {\n            vertical_1 = true;\n          }\n        }\n\n        $array.each(this._percentageSizeChildren, function (child) {\n          if (!horizontal_1) {\n            var width = child.get(\"width\");\n\n            if (width instanceof Percent) {\n              child.setPrivate(\"width\", width.value * innerWidth);\n            }\n          }\n\n          if (!vertical_1) {\n            var height = child.get(\"height\");\n\n            if (height instanceof Percent) {\n              child.setPrivate(\"height\", height.value * innerHeight);\n            }\n          }\n        });\n        $array.each(this._percentagePositionChildren, function (child) {\n          child.markDirtyPosition();\n          child.markDirtyBounds();\n        });\n        this._prevWidth = innerWidth;\n        this._prevHeight = innerHeight;\n        this._sizeDirty = true;\n        this.updateBackground();\n      }\n\n      this._handleStates();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      if (this.isDirty(\"html\")) {\n        var html = this.get(\"html\");\n\n        if (html && html !== \"\") {\n          this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\n        } else {\n          this._root._removeHTMLContent(this);\n        }\n\n        this._root._positionHTMLElement(this);\n      }\n\n      if (this.isDirty(\"verticalScrollbar\")) {\n        var verticalScrollbar_1 = this.get(\"verticalScrollbar\");\n\n        if (verticalScrollbar_1) {\n          verticalScrollbar_1._setParent(this);\n\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.startGrip);\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.endGrip);\n          this.set(\"maskContent\", true);\n          this.set(\"paddingRight\", verticalScrollbar_1.width() + verticalScrollbar_1.get(\"marginRight\", 0) + verticalScrollbar_1.get(\"marginLeft\", 0));\n          var background = this.get(\"background\");\n\n          if (!background) {\n            background = this.set(\"background\", Rectangle.new(this._root, {\n              themeTags: [\"background\"],\n              fillOpacity: 0,\n              fill: this._root.interfaceColors.get(\"alternativeBackground\")\n            }));\n          }\n\n          this._vsbd0 = this.events.on(\"wheel\", function (event) {\n            var wheelEvent = event.originalEvent; // Ignore wheel event if it is happening on a non-chart element, e.g. if\n            // some page element is over the chart.\n\n            if ($utils.isLocalEvent(wheelEvent, _this)) {\n              wheelEvent.preventDefault();\n            } else {\n              return;\n            }\n\n            var shiftY = wheelEvent.deltaY / 5000;\n            var start = verticalScrollbar_1.get(\"start\", 0);\n            var end = verticalScrollbar_1.get(\"end\", 1);\n\n            if (start + shiftY > 0 && end + shiftY < 1) {\n              verticalScrollbar_1.set(\"start\", start + shiftY);\n              verticalScrollbar_1.set(\"end\", end + shiftY);\n            }\n          });\n\n          this._disposers.push(this._vsbd0);\n\n          this._vsbd1 = verticalScrollbar_1.events.on(\"rangechanged\", function () {\n            var h = _this._contentHeight;\n            var childrenDisplay = _this._childrenDisplay;\n            var contentMask = _this._contentMask;\n            childrenDisplay.y = -verticalScrollbar_1.get(\"start\") * h;\n            childrenDisplay.markDirtyLayer();\n\n            if (contentMask) {\n              contentMask._display.y = -childrenDisplay.y;\n              childrenDisplay.mask = contentMask._display;\n            }\n          });\n\n          this._disposers.push(this._vsbd1);\n\n          this._display.addChild(verticalScrollbar_1._display);\n        } else {\n          var previous = this._prevSettings.verticalScrollbar;\n\n          if (previous) {\n            this._display.removeChild(previous._display);\n\n            if (this._vsbd0) {\n              this._vsbd0.dispose();\n            }\n\n            if (this._vsbd1) {\n              this._vsbd1.dispose();\n            }\n\n            var childrenDisplay = this._childrenDisplay;\n            childrenDisplay.y = 0;\n            this.setPrivate(\"height\", undefined);\n            this.set(\"maskContent\", false);\n            this.set(\"paddingRight\", undefined);\n          }\n        }\n      }\n\n      if (this.isDirty(\"background\")) {\n        // TODO maybe this should dispose ?\n        var previous = this._prevSettings[\"background\"];\n\n        if (previous) {\n          this._display.removeChild(previous._display);\n        }\n\n        var background = this.get(\"background\");\n\n        if (background instanceof Sprite) {\n          background.set(\"isMeasured\", false);\n\n          background._setParent(this);\n\n          this._display.addChildAt(background._display, 0);\n        }\n      }\n\n      if (this.isDirty(\"mask\")) {\n        var mask = this.get(\"mask\");\n        var previous = this._prevSettings[\"mask\"];\n\n        if (previous) {\n          this._display.removeChild(previous._display);\n\n          if (previous != mask) {\n            previous.dispose();\n          }\n        }\n\n        if (mask) {\n          var parent = mask.parent;\n\n          if (parent) {\n            parent.children.removeValue(mask);\n          }\n\n          mask._setParent(this);\n\n          this._display.addChildAt(mask._display, 0);\n\n          this._childrenDisplay.mask = mask._display;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_processTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._processTemplateField.call(this);\n\n      this.children.each(function (child) {\n        child._processTemplateField();\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Container.prototype, \"walkChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      this.children.each(function (child) {\n        if (child instanceof Container) {\n          child.walkChildren(f);\n        }\n\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"eachChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      var background = this.get(\"background\");\n\n      if (background) {\n        f(background);\n      }\n\n      var verticalScrollbar = this.get(\"verticalScrollbar\");\n\n      if (verticalScrollbar) {\n        f(verticalScrollbar);\n      }\n\n      var mask = this.get(\"mask\");\n\n      if (mask) {\n        f(mask);\n      }\n\n      this.children.values.forEach(function (child) {\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"allChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var output = [];\n      this.eachChildren(function (x) {\n        output.push(x);\n      });\n      return output;\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_setDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var updated = dataItem !== this._dataItem;\n\n      _super.prototype._setDataItem.call(this, dataItem);\n\n      var html = this.get(\"html\", \"\");\n\n      if (html && html !== \"\" && updated) {\n        this._root._setHTMLContent(this, populateString(this, html));\n      }\n    }\n  });\n  Object.defineProperty(Container, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Container\"\n  });\n  Object.defineProperty(Container, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Sprite.classNames.concat([Container.className])\n  });\n  return Container;\n}(Sprite);\n\nexport { Container };","map":{"version":3,"mappings":"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","names":["Children","Percent","Sprite","Rectangle","HorizontalLayout","VerticalLayout","GridLayout","populateString","$array","$type","$utils","__extends","Object","_this","_root","_renderer","makeContainer","_super","_afterNew","call","_display","addChild","_childrenDisplay","eachReverse","allChildren","child","dispose","getPrivate","_removeHTMLContent","_dispose","_changed","isDirty","interactiveChildren","get","_prevWidth","_prevHeight","markDirtyBounds","_prevSettings","layout","children","each","removePrivate","markDirtyPosition","childrenDisplay","contentMask","_contentMask","new","width","height","addChildAt","mask","removeChild","undefined","_updateSize","_percentageSizeChildren","_percentagePositionChildren","updateBackground","background","bounds","_localBounds","isHidden","x","left","y","top","w","right","h","bottom","maxWidth","maxHeight","setAll","interactive","verticalScrollbar","set","_contentHeight","bg","visible","setPrivate","_applyThemes","eachChildren","name","_applyState","states","apply","duration","_applyStateAnimated","applyAnimate","pWidth","pHeight","horizontal","vertical","m","Number","MAX_VALUE","l_1","r_1","t_1","b_1","paddingLeft","paddingTop","paddingRight","paddingBottom","childBounds","adjustedLocalBounds","childX","childY","cl","cr","ct","cb","_contentWidth","isNumber","updateContainer","_updateBounds","markDirty","_addDirtyParent","innerWidth","innerHeight","horizontal_1","vertical_1","value","_sizeDirty","_handleStates","html","_setHTMLContent","_positionHTMLElement","verticalScrollbar_1","_setParent","removeValue","startGrip","endGrip","themeTags","fillOpacity","fill","interfaceColors","_vsbd0","events","on","event","wheelEvent","originalEvent","isLocalEvent","preventDefault","shiftY","deltaY","start","end","_disposers","push","_vsbd1","markDirtyLayer","previous","parent","_processTemplateField","f","Container","walkChildren","values","forEach","output","dataItem","updated","_dataItem","_setDataItem","classNames","concat","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/Container.ts"],"sourcesContent":["import type { Graphics } from \"./Graphics\";\nimport type { Layout } from \"./Layout\";\nimport type { IContainer } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Scrollbar } from \"./Scrollbar\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite, ISpriteSettings, ISpritePrivate, ISpriteEvents } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport type { IDisposer } from \"../util/Disposer\";\n\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n\nexport interface IContainerSettings extends ISpriteSettings {\n\n\t/**\n\t * Left padding in pixels.\n\t */\n\tpaddingLeft?: number;\n\n\t/**\n\t * Right padding in pixels.\n\t */\n\tpaddingRight?: number;\n\n\t/**\n\t * Top padding in pixels.\n\t */\n\tpaddingTop?: number;\n\n\t/**\n\t * Bottom padding in pixels.\n\t */\n\tpaddingBottom?: number;\n\n\t/**\n\t * Background element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Background} for more info\n\t */\n\tbackground?: Graphics;\n\n\t/**\n\t * A method to layout\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Layout} for more info\n\t */\n\tlayout?: Layout | null;\n\n\t/**\n\t * An element to use as a container's mask (clipping region).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Masks} for more info\n\t */\n\tmask?: Graphics | null;\n\n\t/**\n\t * If set to `true` all content going outside the bounds of the container\n\t * will be clipped.\n\t */\n\tmaskContent?: boolean;\n\n\t/**\n\t * If set to `true` all descendants - not just direct children, but every\n\t * element in it - will become \"interactive\".\n\t */\n\tinteractiveChildren?: boolean;\n\n\t/**\n\t * If set to `true`, applying a state on a container will also apply the same\n\t * state on its children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#States} for more info\n\t */\n\tsetStateOnChildren?: boolean;\n\n\t/**\n\t * Setting this to an instance of [[Scrollbar]] will enable vertical\n\t * scrolling of content if it does not fit into the Container.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Scrollbar} for more info\n\t */\n\tverticalScrollbar?: Scrollbar;\n\n\t/**\n\t * If set to `true` its children will be laid out in opposite order.\n\t *\n\t * @since 5.1.1\n\t */\n\treverseChildren?: boolean;\n\n\t/**\n\t * HTML content of the container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/html-content/} for more info\n\t * @since 5.2.11\n\t */\n\thtml?: string;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\nexport interface IContainerPrivate extends ISpritePrivate {\n\n\t/**\n\t * A `<div>` element used for HTML content of the `Container`.\n\t */\n\thtmlElement?: HTMLDivElement;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\n/**\n * A basic element that can have child elements, maintain their layout, and\n * have a background.\n *\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\n * full-fledged charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n * @important\n */\nexport class Container extends Sprite {\n\n\tdeclare public _settings: IContainerSettings;\n\tdeclare public _privateSettings: IContainerPrivate;\n\tdeclare public _events: IContainerEvents;\n\n\tpublic _display: IContainer = this._root._renderer.makeContainer();\n\n\tpublic _childrenDisplay: IContainer = this._root._renderer.makeContainer();\n\n\t/**\n\t * List of Container's child elements.\n\t */\n\tpublic children: Children<Sprite> = new Children(this);\n\n\tpublic _percentageSizeChildren: Array<Sprite> = [];\n\tpublic _percentagePositionChildren: Array<Sprite> = [];\n\n\tpublic static className: string = \"Container\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Container.className]);\n\n\tpublic _prevWidth: number = 0;\n\tpublic _prevHeight: number = 0;\n\n\tprotected _contentWidth: number = 0;\n\tprotected _contentHeight: number = 0;\n\n\tprotected _contentMask: Rectangle | undefined;\n\n\tprotected _vsbd0: IDisposer | undefined;\n\tprotected _vsbd1: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._display.addChild(this._childrenDisplay);\n\t}\n\n\tprotected _dispose() {\n\t\t$array.eachReverse(this.allChildren(), (child) => {\n\t\t\tchild.dispose();\n\t\t});\n\n\t\tif (this.getPrivate(\"htmlElement\")) {\n\t\t\tthis._root._removeHTMLContent(this);\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"interactiveChildren\")) {\n\t\t\tthis._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"layout\")) {\n\t\t\tthis._prevWidth = 0;\n\t\t\tthis._prevHeight = 0;\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this._prevSettings.layout) {\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tchild.removePrivate(\"x\");\n\t\t\t\t\tchild.removePrivate(\"y\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n\t\t\tthis.children.each((child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"maskContent\")) {\n\n\t\t\tconst childrenDisplay = this._childrenDisplay;\n\n\t\t\tlet contentMask = this._contentMask;\n\t\t\tif (this.get(\"maskContent\")) {\n\t\t\t\tif (!contentMask) {\n\t\t\t\t\tcontentMask = Rectangle.new(this._root, {\n\t\t\t\t\t\twidth: this.width(),\n\t\t\t\t\t\theight: this.height()\n\t\t\t\t\t});\n\t\t\t\t\tthis._contentMask = contentMask;\n\t\t\t\t\tchildrenDisplay.addChildAt(contentMask._display, 0);\n\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (contentMask) {\n\t\t\t\t\tchildrenDisplay.removeChild(contentMask._display);\n\t\t\t\t\tchildrenDisplay.mask = null;\t\t\t\t\t\n\t\t\t\t\tcontentMask.dispose();\n\t\t\t\t\tthis._contentMask = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\tchild.markDirtyPosition();\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\tthis.updateBackground();\n\t}\n\n\tprotected updateBackground() {\n\t\tconst background = this.get(\"background\");\n\t\tlet bounds = this._localBounds;\n\n\t\tif (bounds && !this.isHidden()) {\n\t\t\tlet x = bounds.left;\n\t\t\tlet y = bounds.top;\n\t\t\tlet w = bounds.right - x;\n\t\t\tlet h = bounds.bottom - y;\n\n\t\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\t\tlet maxHeight = this.get(\"maxHeight\");\n\n\t\t\tif (maxHeight) {\n\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\th = maxHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (maxWidth) {\n\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\tw = maxWidth;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\n\t\t\tlet width = this.width();\n\t\t\tlet height = this.height();\n\n\t\t\tif (background) {\n\t\t\t\tbackground.setAll({ width: w, height: h, x: x, y: y });\n\t\t\t\tif (this._display.interactive) {\n\t\t\t\t\tbackground._display.interactive = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst contentMask = this._contentMask;\n\t\t\tif (contentMask) {\n\t\t\t\tcontentMask.setAll({ width, height });\n\t\t\t}\n\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar.set(\"height\", height);\n\t\t\t\tverticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n\t\t\t\tverticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n\n\t\t\t\tconst bg = verticalScrollbar.get(\"background\");\n\t\t\t\tif (bg) {\n\t\t\t\t\tbg.setAll({ width: verticalScrollbar.width(), height: height })\n\t\t\t\t}\n\n\t\t\t\tlet visible = true;\n\t\t\t\tif (this._contentHeight <= height) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t\tverticalScrollbar.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tif (super._applyThemes()) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild._applyThemes();\n\t\t\t});\n\n\t\t\treturn true;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic _applyState(name: string): void {\n\t\tsuper._applyState(name);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.apply(name);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _applyStateAnimated(name: string, duration?: number): void {\n\t\tsuper._applyStateAnimated(name, duration);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.applyAnimate(name, duration);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns container's inner width (width without padding) in pixels.\n\t *\n\t * @return Inner width (px)\n\t */\n\tpublic innerWidth(): number {\n\t\treturn this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n\t}\n\n\t/**\n\t * Returns container's inner height (height without padding) in pixels.\n\t *\n\t * @return Inner height (px)\n\t */\n\tpublic innerHeight(): number {\n\t\treturn this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n\t}\n\n\tprotected _getBounds() {\n\n\t\tlet width = this.get(\"width\");\n\t\tlet height = this.get(\"height\");\n\t\tlet pWidth = this.getPrivate(\"width\");\n\t\tlet pHeight = this.getPrivate(\"height\");\n\n\t\tlet bounds: IBounds = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: this.width(),\n\t\t\tbottom: this.height(),\n\t\t};\n\n\t\tlet layout = this.get(\"layout\");\n\t\tlet horizontal = false;\n\t\tlet vertical = false;\n\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\thorizontal = true;\n\t\t}\n\n\t\tif (layout instanceof VerticalLayout) {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n\t\t\t// void\n\t\t}\n\t\telse {\n\t\t\tlet m = Number.MAX_VALUE;\n\n\t\t\tlet l = m;\n\t\t\tlet r = -m;\n\t\t\tlet t = m;\n\t\t\tlet b = -m;\n\n\t\t\tconst paddingLeft = this.get(\"paddingLeft\", 0);\n\t\t\tconst paddingTop = this.get(\"paddingTop\", 0);\n\t\t\tconst paddingRight = this.get(\"paddingRight\", 0);\n\t\t\tconst paddingBottom = this.get(\"paddingBottom\", 0);\n\n\t\t\tthis.children.each((child) => {\n\t\t\t\tif (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n\t\t\t\t\tlet childBounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet childX = child.x();\n\t\t\t\t\tlet childY = child.y();\n\t\t\t\t\tlet cl = childX + childBounds.left;\n\t\t\t\t\tlet cr = childX + childBounds.right;\n\t\t\t\t\tlet ct = childY + childBounds.top;\n\t\t\t\t\tlet cb = childY + childBounds.bottom;\n\n\t\t\t\t\tif (horizontal) {\n\t\t\t\t\t\tcl -= child.get(\"marginLeft\", 0);\n\t\t\t\t\t\tcr += child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\tct -= child.get(\"marginTop\", 0);\n\t\t\t\t\t\tcb += child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cl < l) {\n\t\t\t\t\t\tl = cl;\n\t\t\t\t\t}\n\t\t\t\t\tif (cr > r) {\n\t\t\t\t\t\tr = cr;\n\t\t\t\t\t}\n\t\t\t\t\tif (ct < t) {\n\t\t\t\t\t\tt = ct;\n\t\t\t\t\t}\n\t\t\t\t\tif (cb > b) {\n\t\t\t\t\t\tb = cb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (l == m) {\n\t\t\t\tl = 0;\n\t\t\t}\n\n\t\t\tif (r == -m) {\n\t\t\t\tr = 0;\n\t\t\t}\n\n\t\t\tif (t == m) {\n\t\t\t\tt = 0;\n\t\t\t}\n\n\t\t\tif (b == -m) {\n\t\t\t\tb = 0;\n\t\t\t}\n\n\t\t\tbounds.left = l - paddingLeft;\n\t\t\tbounds.top = t - paddingTop;\n\t\t\tbounds.right = r + paddingRight;\n\t\t\tbounds.bottom = b + paddingBottom;\n\t\t}\n\n\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = width;\n\t\t}\n\n\t\tif ($type.isNumber(pWidth)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = pWidth;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = height;\n\t\t}\n\n\t\tif ($type.isNumber(pHeight)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = pHeight;\n\t\t}\n\n\t\tthis._localBounds = bounds;\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst layout = this.get(\"layout\");\n\n\t\tif (layout) {\n\t\t\tlayout.updateContainer(this);\n\t\t}\n\n\t\tsuper._updateBounds();\n\n\t\tthis.updateBackground();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tsuper.markDirty();\n\t\tthis._root._addDirtyParent(this);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst innerWidth = this.innerWidth();\n\t\tconst innerHeight = this.innerHeight();\n\n\t\tif (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout) {\n\t\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t}\n\t\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\t\tif (!horizontal) {\n\t\t\t\t\tlet width = child.get(\"width\");\n\t\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"width\", width.value * innerWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!vertical) {\n\t\t\t\t\tlet height = child.get(\"height\");\n\t\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"height\", height.value * innerHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t\tchild.markDirtyBounds();\n\t\t\t})\n\n\t\t\tthis._prevWidth = innerWidth;\n\t\t\tthis._prevHeight = innerHeight;\n\n\t\t\tthis._sizeDirty = true;\n\t\t\tthis.updateBackground();\n\t\t}\n\n\t\tthis._handleStates();\n\t}\n\n\tpublic _updateChildren() {\n\n\t\tif(this.isDirty(\"html\")){\n\t\t\tconst html = this.get(\"html\");\n\t\t\tif (html && html !== \"\") {\n\t\t\t\tthis._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._removeHTMLContent(this);\n\t\t\t}\n\t\t\tthis._root._positionHTMLElement(this);\n\t\t}\t\t\n\n\t\tif (this.isDirty(\"verticalScrollbar\")) {\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar._setParent(this);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.startGrip);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.endGrip);\n\n\t\t\t\tthis.set(\"maskContent\", true);\n\t\t\t\tthis.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n\n\t\t\t\tlet background = this.get(\"background\");\n\n\t\t\t\tif (!background) {\n\t\t\t\t\tbackground = this.set(\"background\", Rectangle.new(this._root, {\n\t\t\t\t\t\tthemeTags: [\"background\"],\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfill: this._root.interfaceColors.get(\"alternativeBackground\")\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis._vsbd0 = this.events.on(\"wheel\", (event) => {\n\t\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t\t// some page element is over the chart.\n\t\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst shiftY = wheelEvent.deltaY / 5000;\n\t\t\t\t\tconst start = verticalScrollbar.get(\"start\", 0);\n\t\t\t\t\tconst end = verticalScrollbar.get(\"end\", 1);\n\t\t\t\t\tif (start + shiftY > 0 && end + shiftY < 1) {\n\t\t\t\t\t\tverticalScrollbar.set(\"start\", start + shiftY);\n\t\t\t\t\t\tverticalScrollbar.set(\"end\", end + shiftY);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd0);\n\n\t\t\t\tthis._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\n\t\t\t\t\tlet h = this._contentHeight;\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tconst contentMask = this._contentMask;\n\n\t\t\t\t\tchildrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\n\t\t\t\t\tchildrenDisplay.markDirtyLayer();\n\n\t\t\t\t\tif (contentMask) {\n\t\t\t\t\t\tcontentMask._display.y = -childrenDisplay.y;\n\t\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd1);\n\n\t\t\t\tthis._display.addChild(verticalScrollbar._display);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst previous = this._prevSettings.verticalScrollbar\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\t\tif (this._vsbd0) {\n\t\t\t\t\t\tthis._vsbd0.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._vsbd1) {\n\t\t\t\t\t\tthis._vsbd1.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tchildrenDisplay.y = 0;\n\n\t\t\t\t\tthis.setPrivate(\"height\", undefined);\n\t\t\t\t\tthis.set(\"maskContent\", false);\n\t\t\t\t\tthis.set(\"paddingRight\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"background\")) {\n\t\t\t// TODO maybe this should dispose ?\n\t\t\tconst previous = this._prevSettings[\"background\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t}\n\n\t\t\tconst background = this.get(\"background\");\n\t\t\tif (background instanceof Sprite) {\n\t\t\t\tbackground.set(\"isMeasured\", false);\n\t\t\t\tbackground._setParent(this);\n\t\t\t\tthis._display.addChildAt(background._display, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"mask\")) {\n\n\t\t\tconst mask = this.get(\"mask\");\n\n\t\t\tconst previous = this._prevSettings[\"mask\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\tif (previous != mask) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mask) {\n\t\t\t\tvar parent = mask.parent;\n\t\t\t\tif (parent) {\n\t\t\t\t\tparent.children.removeValue(mask);\n\t\t\t\t}\n\n\t\t\t\tmask._setParent(this);\n\t\t\t\tthis._display.addChildAt(mask._display, 0);\n\t\t\t\tthis._childrenDisplay.mask = mask._display;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tsuper._processTemplateField();\n\t\tthis.children.each((child) => {\n\t\t\tchild._processTemplateField();\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic walkChildren(f: (child: Sprite) => void): void {\n\t\tthis.children.each((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tchild.walkChildren(f);\n\t\t\t}\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic eachChildren(f: (child: Sprite) => void): void {\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tf(background);\n\t\t}\n\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\");\n\t\tif (verticalScrollbar) {\n\t\t\tf(verticalScrollbar);\n\t\t}\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tf(mask);\n\t\t}\n\n\t\tthis.children.values.forEach((child) => {\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic allChildren(): Array<Sprite> {\n\t\tconst output: Array<Sprite> = [];\n\n\t\tthis.eachChildren((x) => {\n\t\t\toutput.push(x);\n\t\t});\n\n\t\treturn output;\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst updated = (dataItem !== this._dataItem);\n\t\tsuper._setDataItem(dataItem);\n\t\tconst html = this.get(\"html\", \"\");\n\t\tif (html && html !== \"\" && updated) {\n\t\t\tthis._root._setHTMLContent(this, populateString(this, html));\n\t\t}\n\t}\n}"]},"metadata":{},"sourceType":"module"}