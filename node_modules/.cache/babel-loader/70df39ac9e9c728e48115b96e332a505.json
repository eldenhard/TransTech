{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as am5 from \"@amcharts/amcharts5\";\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\nimport { mapState } from \"vuex\";\nimport api from \"@/api/wagonPark\";\nexport default {\n  name: 'KeyFacts',\n  // data() {\n  //     return {\n  //         keyfacts: [],\n  //     }\n  // },\n  computed: { ...mapState({\n      user: state => state.auth.user,\n      uid: state => state.auth.uid\n    })\n  },\n\n  mounted() {\n    api.getKeyFacts().then(response => {\n      let keyfacts;\n      keyfacts = response.data.wagons;\n      let data = [];\n\n      for (let key in keyfacts) {\n        if (key == 'Всего') {\n          continue;\n        }\n\n        if (keyfacts[key] == 0) {\n          continue;\n        } else {\n          let amount = keyfacts[key];\n          data.push({\n            'wagon_type': key,\n            'amount': amount\n          });\n        }\n      }\n\n      keyfacts = data;\n      console.log(keyfacts);\n      let root = am5.Root.new(this.$refs.chartdiv); // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n\n      root.setThemes([am5themes_Animated.new(root)]); // Create chart\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/\n\n      let chart = root.container.children.push(am5xy.XYChart.new(root, {\n        panX: true,\n        panY: true,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        pinchZoomX: true\n      })); // Add cursor\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\n\n      let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\n      cursor.lineY.set(\"visible\", false); // Create axes\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n\n      let xRenderer = am5xy.AxisRendererX.new(root, {\n        minGridDistance: 30\n      });\n      xRenderer.labels.template.setAll({\n        rotation: -50,\n        centerY: am5.p50,\n        centerX: am5.p100,\n        paddingRight: 10\n      });\n      let xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {\n        maxDeviation: 0.3,\n        categoryField: \"wagon_type\",\n        renderer: xRenderer,\n        tooltip: am5.Tooltip.new(root, {})\n      }));\n      let yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\n        maxDeviation: 0.3,\n        renderer: am5xy.AxisRendererY.new(root, {})\n      })); // Create series\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n      let series = chart.series.push(am5xy.ColumnSeries.new(root, {\n        name: \"Series 1\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"amount\",\n        sequencedInterpolation: true,\n        categoryXField: \"wagon_type\",\n        tooltip: am5.Tooltip.new(root, {\n          labelText: \"{valueY}\"\n        })\n      }));\n      series.columns.template.setAll({\n        cornerRadiusTL: 5,\n        cornerRadiusTR: 5\n      });\n      series.columns.template.adapters.add(\"fill\", function (fill, target) {\n        return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n      });\n      series.columns.template.adapters.add(\"stroke\", function (stroke, target) {\n        return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n      });\n      xAxis.data.setAll(keyfacts);\n      series.data.setAll(keyfacts); // Make stuff animate on load\n      // https://www.amcharts.com/docs/v5/concepts/animations/\n\n      series.appear(1000);\n      chart.appear(1000, 100);\n    });\n  }\n\n};","map":{"version":3,"mappings":";AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;EACAA,gBADA;EAEA;EACA;EACA;EACA;EACA;EACAC,YACA;MACAC,8BADA;MAEAC;IAFA;EADA,CAPA;;EAaAC;IACAC,kBACAC,IADA,CACAC;MACA;MACAC;MAEA;;MACA;QACA;UACA;QACA;;QAAA;UACA;QACA,CAFA,MAEA;UACA;UACAC;YACA,iBADA;YAEA;UAFA;QAIA;MAGA;;MACAD;MACAE;MAIA,6CAzBA,CA4BA;MACA;;MACAC,gBACAC,4BADA,GA9BA,CAmCA;MACA;;MACA;QACAC,UADA;QAEAC,UAFA;QAGAC,cAHA;QAIAC,eAJA;QAKAC;MALA,IArCA,CA6CA;MACA;;MACA;MACAC,mCAhDA,CAmDA;MACA;;MACA;QAAAC;MAAA;MACAC;QACAC,aADA;QAEAC,gBAFA;QAGAC,iBAHA;QAIAC;MAJA;MAOA;QACAC,iBADA;QAEAC,2BAFA;QAGAC,mBAHA;QAIAC;MAJA;MAOA;QACAH,iBADA;QAEAE;MAFA,IApEA,CA0EA;MACA;;MACA;QACA3B,gBADA;QAEA6B,YAFA;QAGAC,YAHA;QAIAC,qBAJA;QAKAC,4BALA;QAMAC,4BANA;QAOAL;UACAM;QADA;MAPA;MAYAC;QAAAC;QAAAC;MAAA;MACAF;QACA;MACA,CAFA;MAIAA;QACA;MACA,CAFA;MAOAN;MACAM,6BArGA,CAwGA;MACA;;MACAA;MACAG;IACA,CA7GA;EA+GA;;AA7HA","names":["name","computed","user","uid","mounted","api","then","response","keyfacts","data","console","root","am5themes_Animated","panX","panY","wheelX","wheelY","pinchZoomX","cursor","minGridDistance","xRenderer","rotation","centerY","centerX","paddingRight","maxDeviation","categoryField","renderer","tooltip","xAxis","yAxis","valueYField","sequencedInterpolation","categoryXField","labelText","series","cornerRadiusTL","cornerRadiusTR","chart"],"sourceRoot":"src/views","sources":["KeyFacts.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"hello\" ref=\"chartdiv\">\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport { mapState } from \"vuex\";\r\nimport api from \"@/api/wagonPark\"\r\n\r\n\r\nexport default {\r\n    name: 'KeyFacts',\r\n    // data() {\r\n    //     return {\r\n    //         keyfacts: [],\r\n    //     }\r\n    // },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.auth.user,\r\n            uid: state => state.auth.uid\r\n        })\r\n    },\r\n    mounted() {\r\n        api.getKeyFacts()\r\n            .then(response => {\r\n                let keyfacts;\r\n                keyfacts = response.data.wagons\r\n\r\n                let data = []\r\n                for (let key in keyfacts) {\r\n                    if (key == 'Всего') {\r\n                        continue\r\n                    } if( keyfacts[key] == 0){\r\n                        continue\r\n                    } else {\r\n                        let amount = keyfacts[key]\r\n                        data.push({\r\n                            'wagon_type': key,\r\n                            'amount': amount\r\n                        })\r\n                    }\r\n\r\n\r\n                }\r\n                keyfacts = data\r\n                console.log(keyfacts)\r\n\r\n\r\n\r\n                let root = am5.Root.new(this.$refs.chartdiv);\r\n\r\n\r\n                // Set themes\r\n                // https://www.amcharts.com/docs/v5/concepts/themes/\r\n                root.setThemes([\r\n                    am5themes_Animated.new(root)\r\n                ]);\r\n\r\n\r\n                // Create chart\r\n                // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n                let chart = root.container.children.push(am5xy.XYChart.new(root, {\r\n                    panX: true,\r\n                    panY: true,\r\n                    wheelX: \"panX\",\r\n                    wheelY: \"zoomX\",\r\n                    pinchZoomX: true\r\n                }));\r\n\r\n                // Add cursor\r\n                // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n                let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n                cursor.lineY.set(\"visible\", false);\r\n\r\n\r\n                // Create axes\r\n                // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n                let xRenderer = am5xy.AxisRendererX.new(root, { minGridDistance: 30 });\r\n                xRenderer.labels.template.setAll({\r\n                    rotation: -50,\r\n                    centerY: am5.p50,\r\n                    centerX: am5.p100,\r\n                    paddingRight: 10\r\n                });\r\n\r\n                let xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {\r\n                    maxDeviation: 0.3,\r\n                    categoryField: \"wagon_type\",\r\n                    renderer: xRenderer,\r\n                    tooltip: am5.Tooltip.new(root, {})\r\n                }));\r\n\r\n                let yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\r\n                    maxDeviation: 0.3,\r\n                    renderer: am5xy.AxisRendererY.new(root, {})\r\n                }));\r\n\r\n\r\n                // Create series\r\n                // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n                let series = chart.series.push(am5xy.ColumnSeries.new(root, {\r\n                    name: \"Series 1\",\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    valueYField: \"amount\",\r\n                    sequencedInterpolation: true,\r\n                    categoryXField: \"wagon_type\",\r\n                    tooltip: am5.Tooltip.new(root, {\r\n                        labelText: \"{valueY}\"\r\n                    })\r\n                }));\r\n\r\n                series.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5 });\r\n                series.columns.template.adapters.add(\"fill\", function (fill, target) {\r\n                    return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\r\n                });\r\n\r\n                series.columns.template.adapters.add(\"stroke\", function (stroke, target) {\r\n                    return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\r\n                });\r\n\r\n\r\n\r\n\r\n                xAxis.data.setAll(keyfacts);\r\n                series.data.setAll(keyfacts);\r\n\r\n\r\n                // Make stuff animate on load\r\n                // https://www.amcharts.com/docs/v5/concepts/animations/\r\n                series.appear(1000);\r\n                chart.appear(1000, 100);\r\n            })\r\n\r\n    },\r\n\r\n}\r\n</script>\r\n  \r\n\r\n<style scoped>\r\n.hello {\r\n    width: 25%;\r\n    height: 500px;\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}