{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as am5 from \"@amcharts/amcharts5\";\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\nimport { mapState } from \"vuex\";\nimport api from \"@/api/wagonPark\";\nexport default {\n  name: 'KeyFacts',\n  // data() {\n  //     return {\n  //         keyfacts: [],\n  //     }\n  // },\n  computed: { ...mapState({\n      user: state => state.auth.user,\n      uid: state => state.auth.uid\n    })\n  },\n\n  mounted() {\n    api.getKeyFacts().then(response => {\n      let keyfacts;\n      keyfacts = response.data.wagons;\n      let data = [];\n\n      for (let key in keyfacts) {\n        let amount = keyfacts[key];\n        data.push({\n          'wagon_type': key,\n          'amount': amount\n        });\n      }\n\n      keyfacts = data;\n      console.log(keyfacts);\n      let root = am5.Root.new(this.$refs.chartdiv);\n      let chart = root.container.children.push(am5percent.PieChart.new(root, {\n        layout: root.verticalHorizontal\n      })); // Create series\n\n      let series = chart.series.push(am5percent.PieSeries.new(root, {\n        name: \"Series\",\n        valueField: \"amount\",\n        categoryField: \"wagon_type\"\n      }));\n      series.data.setAll(keyfacts); // Add legend\n\n      var legend = chart.children.push(am5.Legend.new(root, {\n        centerX: am5.percent(50),\n        x: am5.percent(50),\n        layout: root.horizontalLayout\n      }));\n      legend.data.setAll(series.dataItems);\n    }); // console.log\n\n    let root = am5.Root.new(\"chartdiv\"); // Set themes\n    // https://www.amcharts.com/docs/v5/concepts/themes/\n\n    root.setThemes([am5themes_Animated.new(root)]); // Create chart\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\n\n    let chart = root.container.children.push(am5xy.XYChart.new(root, {\n      panX: true,\n      panY: true,\n      wheelX: \"panX\",\n      wheelY: \"zoomX\",\n      pinchZoomX: true\n    })); // Add cursor\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\n\n    let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\n    cursor.lineY.set(\"visible\", false); // Create axes\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n\n    let xRenderer = am5xy.AxisRendererX.new(root, {\n      minGridDistance: 30\n    });\n    xRenderer.labels.template.setAll({\n      rotation: -90,\n      centerY: am5.p50,\n      centerX: am5.p100,\n      paddingRight: 15\n    });\n    let xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {\n      maxDeviation: 0.3,\n      categoryField: \"country\",\n      renderer: xRenderer,\n      tooltip: am5.Tooltip.new(root, {})\n    }));\n    let yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\n      maxDeviation: 0.3,\n      renderer: am5xy.AxisRendererY.new(root, {})\n    })); // Create series\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n    let series = chart.series.push(am5xy.ColumnSeries.new(root, {\n      name: \"Series 1\",\n      xAxis: xAxis,\n      yAxis: yAxis,\n      valueYField: \"value\",\n      sequencedInterpolation: true,\n      categoryXField: \"country\",\n      tooltip: am5.Tooltip.new(root, {\n        labelText: \"{valueY}\"\n      })\n    }));\n    series.columns.template.setAll({\n      cornerRadiusTL: 5,\n      cornerRadiusTR: 5\n    });\n    series.columns.template.adapters.add(\"fill\", function (fill, target) {\n      return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n    });\n    series.columns.template.adapters.add(\"stroke\", function (stroke, target) {\n      return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n    }); // Set data\n\n    let data = [{\n      country: \"USA\",\n      value: 2025\n    }, {\n      country: \"China\",\n      value: 1882\n    }, {\n      country: \"Japan\",\n      value: 1809\n    }, {\n      country: \"Germany\",\n      value: 1322\n    }, {\n      country: \"UK\",\n      value: 1122\n    }, {\n      country: \"France\",\n      value: 1114\n    }, {\n      country: \"India\",\n      value: 984\n    }, {\n      country: \"Spain\",\n      value: 711\n    }, {\n      country: \"Netherlands\",\n      value: 665\n    }, {\n      country: \"South Korea\",\n      value: 443\n    }, {\n      country: \"Canada\",\n      value: 441\n    }];\n    xAxis.data.setAll(data);\n    series.data.setAll(data); // Make stuff animate on load\n    // https://www.amcharts.com/docs/v5/concepts/animations/\n\n    series.appear(1000);\n    chart.appear(1000, 100);\n  }\n\n};","map":{"version":3,"mappings":";AAQA;AACA;AACA;AACA;AACA;AAGA;EACAA,gBADA;EAEA;EACA;EACA;EACA;EACA;EACAC,YACA;MACAC,8BADA;MAEAC;IAFA;EADA,CAPA;;EAaAC;IACAC,kBACAC,IADA,CACAC;MACA;MACAC;MAEA;;MACA;QACA;QACAC;UACA,iBADA;UAEA;QAFA;MAKA;;MACAD;MACAE;MACA;MACA,yCACAC;QACAC;MADA,EADA,EAhBA,CAsBA;;MACA,+BACAD;QACAX,cADA;QAEAa,oBAFA;QAGAC;MAHA,EADA;MAOAC,6BA9BA,CAgCA;;MACA;QACAC,wBADA;QAEAC,kBAFA;QAGAL;MAHA;MAMAM;IAEA,CA1CA,EADA,CA4CA;;IAEA,oCA9CA,CAiDA;IACA;;IACAC,gBACAC,4BADA,GAnDA,CAwDA;IACA;;IACA;MACAC,UADA;MAEAC,UAFA;MAGAC,cAHA;MAIAC,eAJA;MAKAC;IALA,IA1DA,CAkEA;IACA;;IACA;IACAC,mCArEA,CAwEA;IACA;;IACA;MAAAC;IAAA;IACAC;MACAC,aADA;MAEAC,gBAFA;MAGAd,iBAHA;MAIAe;IAJA;IAOA;MACAC,iBADA;MAEAlB,wBAFA;MAGAmB,mBAHA;MAIAC;IAJA;IAOA;MACAF,iBADA;MAEAC;IAFA,IAzFA,CA+FA;IACA;;IACA;MACAjC,gBADA;MAEAmC,YAFA;MAGAC,YAHA;MAIAC,oBAJA;MAKAC,4BALA;MAMAC,yBANA;MAOAL;QACAM;MADA;IAPA;IAYAzB;MAAA0B;MAAAC;IAAA;IACA3B;MACA;IACA,CAFA;IAIAA;MACA;IACA,CAFA,EAlHA,CAuHA;;IACA;MACA4B,cADA;MAEAC;IAFA,GAGA;MACAD,gBADA;MAEAC;IAFA,CAHA,EAMA;MACAD,gBADA;MAEAC;IAFA,CANA,EASA;MACAD,kBADA;MAEAC;IAFA,CATA,EAYA;MACAD,aADA;MAEAC;IAFA,CAZA,EAeA;MACAD,iBADA;MAEAC;IAFA,CAfA,EAkBA;MACAD,gBADA;MAEAC;IAFA,CAlBA,EAqBA;MACAD,gBADA;MAEAC;IAFA,CArBA,EAwBA;MACAD,sBADA;MAEAC;IAFA,CAxBA,EA2BA;MACAD,sBADA;MAEAC;IAFA,CA3BA,EA8BA;MACAD,iBADA;MAEAC;IAFA,CA9BA;IAmCAT;IACApB,yBA5JA,CA+JA;IACA;;IACAA;IACA8B;EAGA;;AAlLA","names":["name","computed","user","uid","mounted","api","then","response","keyfacts","data","console","am5percent","layout","valueField","categoryField","series","centerX","x","legend","root","am5themes_Animated","panX","panY","wheelX","wheelY","pinchZoomX","cursor","minGridDistance","xRenderer","rotation","centerY","paddingRight","maxDeviation","renderer","tooltip","xAxis","yAxis","valueYField","sequencedInterpolation","categoryXField","labelText","cornerRadiusTL","cornerRadiusTR","country","value","chart"],"sourceRoot":"src/views","sources":["KeyFacts.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"hello\" ref=\"chartdiv\">\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nimport { mapState } from \"vuex\";\r\nimport api from \"@/api/wagonPark\"\r\n\r\n\r\nexport default {\r\n    name: 'KeyFacts',\r\n    // data() {\r\n    //     return {\r\n    //         keyfacts: [],\r\n    //     }\r\n    // },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.auth.user,\r\n            uid: state => state.auth.uid\r\n        })\r\n    },\r\n    mounted() {\r\n        api.getKeyFacts()\r\n            .then(response => {\r\n                let keyfacts;\r\n                    keyfacts = response.data.wagons\r\n\r\n                let data = []\r\n                for (let key in keyfacts) {\r\n                    let amount = keyfacts[key]\r\n                    data.push({\r\n                        'wagon_type': key,\r\n                        'amount': amount\r\n                    })\r\n\r\n                }\r\n                keyfacts = data\r\n                console.log(keyfacts)\r\n                let root = am5.Root.new(this.$refs.chartdiv);\r\n                let chart = root.container.children.push(\r\n                    am5percent.PieChart.new(root, {\r\n                        layout: root.verticalHorizontal\r\n                    })\r\n                );\r\n\r\n                // Create series\r\n                let series = chart.series.push(\r\n                    am5percent.PieSeries.new(root, {\r\n                        name: \"Series\",\r\n                        valueField: \"amount\",\r\n                        categoryField: \"wagon_type\"\r\n                    })\r\n                );\r\n                series.data.setAll(keyfacts);\r\n\r\n                // Add legend\r\n                var legend = chart.children.push(am5.Legend.new(root, {\r\n                    centerX: am5.percent(50),\r\n                    x: am5.percent(50),\r\n                    layout: root.horizontalLayout\r\n                }));\r\n\r\n                legend.data.setAll(series.dataItems);\r\n\r\n            })\r\n        // console.log\r\n\r\n        let root = am5.Root.new(\"chartdiv\");\r\n\r\n\r\n// Set themes\r\n// https://www.amcharts.com/docs/v5/concepts/themes/\r\nroot.setThemes([\r\n  am5themes_Animated.new(root)\r\n]);\r\n\r\n\r\n// Create chart\r\n// https://www.amcharts.com/docs/v5/charts/xy-chart/\r\nlet chart = root.container.children.push(am5xy.XYChart.new(root, {\r\n  panX: true,\r\n  panY: true,\r\n  wheelX: \"panX\",\r\n  wheelY: \"zoomX\",\r\n  pinchZoomX:true\r\n}));\r\n\r\n// Add cursor\r\n// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\nlet cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\ncursor.lineY.set(\"visible\", false);\r\n\r\n\r\n// Create axes\r\n// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\nlet xRenderer = am5xy.AxisRendererX.new(root, { minGridDistance: 30 });\r\nxRenderer.labels.template.setAll({\r\n  rotation: -90,\r\n  centerY: am5.p50,\r\n  centerX: am5.p100,\r\n  paddingRight: 15\r\n});\r\n\r\nlet xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {\r\n  maxDeviation: 0.3,\r\n  categoryField: \"country\",\r\n  renderer: xRenderer,\r\n  tooltip: am5.Tooltip.new(root, {})\r\n}));\r\n\r\nlet yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\r\n  maxDeviation: 0.3,\r\n  renderer: am5xy.AxisRendererY.new(root, {})\r\n}));\r\n\r\n\r\n// Create series\r\n// https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\nlet series = chart.series.push(am5xy.ColumnSeries.new(root, {\r\n  name: \"Series 1\",\r\n  xAxis: xAxis,\r\n  yAxis: yAxis,\r\n  valueYField: \"value\",\r\n  sequencedInterpolation: true,\r\n  categoryXField: \"country\",\r\n  tooltip: am5.Tooltip.new(root, {\r\n    labelText:\"{valueY}\"\r\n  })\r\n}));\r\n\r\nseries.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5 });\r\nseries.columns.template.adapters.add(\"fill\", function(fill, target) {\r\n  return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\r\n});\r\n\r\nseries.columns.template.adapters.add(\"stroke\", function(stroke, target) {\r\n  return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\r\n});\r\n\r\n\r\n// Set data\r\nlet data = [{\r\n  country: \"USA\",\r\n  value: 2025\r\n}, {\r\n  country: \"China\",\r\n  value: 1882\r\n}, {\r\n  country: \"Japan\",\r\n  value: 1809\r\n}, {\r\n  country: \"Germany\",\r\n  value: 1322\r\n}, {\r\n  country: \"UK\",\r\n  value: 1122\r\n}, {\r\n  country: \"France\",\r\n  value: 1114\r\n}, {\r\n  country: \"India\",\r\n  value: 984\r\n}, {\r\n  country: \"Spain\",\r\n  value: 711\r\n}, {\r\n  country: \"Netherlands\",\r\n  value: 665\r\n}, {\r\n  country: \"South Korea\",\r\n  value: 443\r\n}, {\r\n  country: \"Canada\",\r\n  value: 441\r\n}];\r\n\r\nxAxis.data.setAll(data);\r\nseries.data.setAll(data);\r\n\r\n\r\n// Make stuff animate on load\r\n// https://www.amcharts.com/docs/v5/concepts/animations/\r\nseries.appear(1000);\r\nchart.appear(1000, 100);\r\n\r\n\r\n    },\r\n\r\n}\r\n</script>\r\n  \r\n\r\n<style scoped>\r\n.hello {\r\n    margin-top: 5%;\r\n    width:100%;\r\n    height: 700px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}