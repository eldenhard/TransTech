{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PercentChart } from \"../percent/PercentChart\";\n/**\r\n * Creates a sliced chart for use with [[FunnelSeries]], [[PyramidSeries]], or [[PictorialStackedSeries]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\n\nvar SlicedChart =\n/** @class */\nfunction (_super) {\n  __extends(SlicedChart, _super);\n\n  function SlicedChart() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(SlicedChart.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterNew.call(this);\n\n      this.seriesContainer.setAll({\n        isMeasured: true,\n        layout: this._root.horizontalLayout\n      });\n    }\n  });\n  Object.defineProperty(SlicedChart, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"SlicedChart\"\n  });\n  Object.defineProperty(SlicedChart, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: PercentChart.classNames.concat([SlicedChart.className])\n  });\n  return SlicedChart;\n}(PercentChart);\n\nexport { SlicedChart };","map":{"version":3,"mappings":";AAAA,SAASA,YAAT,QAA0E,yBAA1E;AAUA;;;;;;;AAMA;AAAA;AAAA;EAAiCC;;EAAjC;;EAaC;;;;;;WAZA;MACCC,iBAAMC,SAAN,CAAeC,IAAf,CAAe,IAAf;;MAEA,KAAKC,eAAL,CAAqBC,MAArB,CAA4B;QAAEC,UAAU,EAAC,IAAb;QAAmBC,MAAM,EAAE,KAAKC,KAAL,CAAWC;MAAtC,CAA5B;IACA;;EAEDC;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CX,YAAY,CAACY,UAAb,CAAwBC,MAAxB,CAA+B,CAACC,WAAW,CAACC,SAAb,CAA/B;EAA1C;EAKD;AAAC,CAbD,CAAiCf,YAAjC;;SAAac","names":["PercentChart","__extends","_super","_afterNew","call","seriesContainer","setAll","isMeasured","layout","_root","horizontalLayout","Object","classNames","concat","SlicedChart","className"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/funnel/SlicedChart.ts"],"sourcesContent":["import { PercentChart, IPercentChartPrivate, IPercentChartSettings } from \"../percent/PercentChart\";\nimport type { PercentSeries } from \"../percent/PercentSeries\";\n\n\nexport interface ISlicedChartSettings extends IPercentChartSettings {\n}\n\nexport interface ISlicedChartPrivate extends IPercentChartPrivate {\n}\n\n/**\n * Creates a sliced chart for use with [[FunnelSeries]], [[PyramidSeries]], or [[PictorialStackedSeries]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\n * @important\n */\nexport class SlicedChart extends PercentChart {\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.seriesContainer.setAll({ isMeasured:true, layout: this._root.horizontalLayout });\n\t}\n\n\tpublic static className: string = \"SlicedChart\";\n\tpublic static classNames: Array<string> = PercentChart.classNames.concat([SlicedChart.className]);\n\n\tdeclare public _settings: ISlicedChartSettings;\n\tdeclare public _privateSettings: ISlicedChartPrivate;\n\tdeclare public _seriesType: PercentSeries;\n}\n"]},"metadata":{},"sourceType":"module"}