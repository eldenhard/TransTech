{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as am5 from \"@amcharts/amcharts5\";\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\nimport { mapState } from \"vuex\";\nimport api from \"@/api/wagonPark\";\nexport default {\n  name: 'KeyFacts',\n  // data() {\n  //     return {\n  //         keyfacts: [],\n  //     }\n  // },\n  computed: { ...mapState({\n      user: state => state.auth.user,\n      uid: state => state.auth.uid\n    })\n  },\n\n  mounted() {\n    api.getKeyFacts().then(response => {\n      let keyfacts;\n      keyfacts = response.data.wagons;\n      let data = [];\n\n      for (let key in keyfacts) {\n        if (key == 'Всего') {\n          continue;\n        } else {\n          let amount = keyfacts[key];\n          data.push({\n            'wagon_type': key,\n            'amount': amount\n          });\n        }\n      }\n\n      keyfacts = data;\n      console.log(keyfacts); // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n\n      var root = am5.Root.new(this.$refs.chartdiv); // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n\n      root.setThemes([am5themes_Animated.new(root)]); // Create chart\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/\n\n      var chart = root.container.children.push(am5xy.XYChart.new(root, {\n        panX: false,\n        panY: false,\n        wheelX: \"none\",\n        wheelY: \"none\"\n      })); // Create axes\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n\n      var yRenderer = am5xy.AxisRendererY.new(root, {\n        minGridDistance: 30\n      });\n      var yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {\n        maxDeviation: 0,\n        categoryField: \"wagon_type\",\n        renderer: yRenderer\n      }));\n      var xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {\n        maxDeviation: 0,\n        min: 0,\n        renderer: am5xy.AxisRendererX.new(root, {})\n      })); // Create series\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n      var series = chart.series.push(am5xy.ColumnSeries.new(root, {\n        name: \"Series 1\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueXField: \"amount\",\n        sequencedInterpolation: true,\n        categoryYField: \"wagon_type\"\n      }));\n      var columnTemplate = series.columns.template; // columnTemplate.setAll({\n      //     draggable: true,\n      //     cursorOverStyle: \"pointer\",\n      //     tooltipText: \"drag to rearrange\",\n      //     cornerRadiusBR: 10,\n      //     cornerRadiusTR: 10\n      // });\n\n      columnTemplate.adapters.add(\"fill\", (fill, target) => {\n        return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n      });\n      columnTemplate.adapters.add(\"stroke\", (stroke, target) => {\n        return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n      });\n      columnTemplate.events.on(\"dragstop\", () => {\n        sortCategoryAxis();\n      }); // Get series item by category\n\n      function getSeriesItem(category) {\n        for (var i = 0; i < series.dataItems.length; i++) {\n          var dataItem = series.dataItems[i];\n\n          if (dataItem.get(\"categoryY\") == category) {\n            return dataItem;\n          }\n        }\n      } // Axis sorting\n\n\n      function sortCategoryAxis() {\n        // Sort by value\n        series.dataItems.sort(function (x, y) {\n          return y.get(\"graphics\").y() - x.get(\"graphics\").y();\n        });\n        var easing = am5.ease.out(am5.ease.cubic); // Go through each axis item\n        // Sort axis items by index.\n        // This changes the order instantly, but as dx and dy is set and animated,\n        // they keep in the same places and then animate to true positions.\n\n        yAxis.dataItems.sort(function (x, y) {\n          return x.get(\"index\") - y.get(\"index\");\n        });\n      } // Set data\n\n\n      yAxis.data.setAll(keyfacts);\n      series.data.setAll(keyfacts); // Make stuff animate on load\n      // https://www.amcharts.com/docs/v5/concepts/animations/\n\n      series.appear(1000);\n      chart.appear(1000, 100);\n    });\n  }\n\n};","map":{"version":3,"mappings":";AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;EACAA,gBADA;EAEA;EACA;EACA;EACA;EACA;EACAC,YACA;MACAC,8BADA;MAEAC;IAFA;EADA,CAPA;;EAaAC;IACAC,kBACAC,IADA,CACAC;MACA;MACAC;MAEA;;MACA;QACA;UACA;QACA,CAFA,MAEA;UACA;UAEAC;YACA,iBADA;YAEA;UAFA;QAKA;MAEA;;MACAD;MACAE,sBApBA,CAyBA;MACA;;MACA,6CA3BA,CA8BA;MACA;;MACAC,+CAhCA,CAmCA;MACA;;MACA,yCACAC;QACAC,WADA;QAEAC,WAFA;QAGAC,cAHA;QAIAC;MAJA,EADA,EArCA,CA+CA;MACA;;MACA;QAAAC;MAAA;MAEA,6BACAL;QACAM,eADA;QAEAC,2BAFA;QAGAC;MAHA,EADA;MAQA,6BACAR;QACAM,eADA;QAEAG,MAFA;QAGAD;MAHA,EADA,EA3DA,CAoEA;MACA;;MACA,+BACAR;QACAZ,gBADA;QAEAsB,YAFA;QAGAC,YAHA;QAIAC,qBAJA;QAKAC,4BALA;QAMAC;MANA,EADA;MAWA,6CAjFA,CAmFA;MACA;MACA;MACA;MACA;MACA;MACA;;MACAC;QACA;MACA,CAFA;MAIAA;QACA;MACA,CAFA;MAIAA;QACAC;MACA,CAFA,EAlGA,CAsGA;;MACA;QACA;UACA;;UACA;YACA;UACA;QACA;MACA,CA9GA,CAiHA;;;MACA;QACA;QACAC;UACA;QACA,CAFA;QAIA,0CANA,CAQA;QAGA;QACA;QACA;;QACAN;UACA;QACA,CAFA;MAGA,CAnIA,CAqIA;;;MAGAA;MACAM,6BAzIA,CA4IA;MACA;;MACAA;MACAC;IAGA,CAnJA;EAqJA;;AAnKA","names":["name","computed","user","uid","mounted","api","then","response","keyfacts","data","console","root","am5xy","panX","panY","wheelX","wheelY","minGridDistance","maxDeviation","categoryField","renderer","min","xAxis","yAxis","valueXField","sequencedInterpolation","categoryYField","columnTemplate","sortCategoryAxis","series","chart"],"sourceRoot":"src/views","sources":["KeyFacts.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"hello\" ref=\"chartdiv\">\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport { mapState } from \"vuex\";\r\nimport api from \"@/api/wagonPark\"\r\n\r\n\r\nexport default {\r\n    name: 'KeyFacts',\r\n    // data() {\r\n    //     return {\r\n    //         keyfacts: [],\r\n    //     }\r\n    // },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.auth.user,\r\n            uid: state => state.auth.uid\r\n        })\r\n    },\r\n    mounted() {\r\n        api.getKeyFacts()\r\n            .then(response => {\r\n                let keyfacts;\r\n                keyfacts = response.data.wagons\r\n\r\n                let data = []\r\n                for (let key in keyfacts) {\r\n                    if (key == 'Всего') {\r\n                        continue\r\n                    } else {\r\n                        let amount = keyfacts[key]\r\n\r\n                        data.push({\r\n                            'wagon_type': key,\r\n                            'amount': amount\r\n                        })\r\n\r\n                    }\r\n\r\n                }\r\n                keyfacts = data\r\n                console.log(keyfacts)\r\n\r\n\r\n\r\n\r\n                // Create root element\r\n                // https://www.amcharts.com/docs/v5/getting-started/#Root_element\r\n                var root = am5.Root.new(this.$refs.chartdiv);\r\n\r\n\r\n                // Set themes\r\n                // https://www.amcharts.com/docs/v5/concepts/themes/\r\n                root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n\r\n                // Create chart\r\n                // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n                var chart = root.container.children.push(\r\n                    am5xy.XYChart.new(root, {\r\n                        panX: false,\r\n                        panY: false,\r\n                        wheelX: \"none\",\r\n                        wheelY: \"none\"\r\n                    })\r\n                );\r\n\r\n\r\n                // Create axes\r\n                // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n                var yRenderer = am5xy.AxisRendererY.new(root, { minGridDistance: 30 });\r\n\r\n                var yAxis = chart.yAxes.push(\r\n                    am5xy.CategoryAxis.new(root, {\r\n                        maxDeviation: 0,\r\n                        categoryField: \"wagon_type\",\r\n                        renderer: yRenderer\r\n                    })\r\n                );\r\n\r\n                var xAxis = chart.xAxes.push(\r\n                    am5xy.ValueAxis.new(root, {\r\n                        maxDeviation: 0,\r\n                        min: 0,\r\n                        renderer: am5xy.AxisRendererX.new(root, {})\r\n                    })\r\n                );\r\n\r\n\r\n                // Create series\r\n                // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n                var series = chart.series.push(\r\n                    am5xy.ColumnSeries.new(root, {\r\n                        name: \"Series 1\",\r\n                        xAxis: xAxis,\r\n                        yAxis: yAxis,\r\n                        valueXField: \"amount\",\r\n                        sequencedInterpolation: true,\r\n                        categoryYField: \"wagon_type\"\r\n                    })\r\n                );\r\n\r\n                var columnTemplate = series.columns.template;\r\n\r\n                // columnTemplate.setAll({\r\n                //     draggable: true,\r\n                //     cursorOverStyle: \"pointer\",\r\n                //     tooltipText: \"drag to rearrange\",\r\n                //     cornerRadiusBR: 10,\r\n                //     cornerRadiusTR: 10\r\n                // });\r\n                columnTemplate.adapters.add(\"fill\", (fill, target) => {\r\n                    return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\r\n                });\r\n\r\n                columnTemplate.adapters.add(\"stroke\", (stroke, target) => {\r\n                    return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\r\n                });\r\n\r\n                columnTemplate.events.on(\"dragstop\", () => {\r\n                    sortCategoryAxis();\r\n                });\r\n\r\n                // Get series item by category\r\n                function getSeriesItem(category) {\r\n                    for (var i = 0; i < series.dataItems.length; i++) {\r\n                        var dataItem = series.dataItems[i];\r\n                        if (dataItem.get(\"categoryY\") == category) {\r\n                            return dataItem;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                // Axis sorting\r\n                function sortCategoryAxis() {\r\n                    // Sort by value\r\n                    series.dataItems.sort(function (x, y) {\r\n                        return y.get(\"graphics\").y() - x.get(\"graphics\").y();\r\n                    });\r\n\r\n                    var easing = am5.ease.out(am5.ease.cubic);\r\n\r\n                    // Go through each axis item\r\n\r\n\r\n                    // Sort axis items by index.\r\n                    // This changes the order instantly, but as dx and dy is set and animated,\r\n                    // they keep in the same places and then animate to true positions.\r\n                    yAxis.dataItems.sort(function (x, y) {\r\n                        return x.get(\"index\") - y.get(\"index\");\r\n                    });\r\n                }\r\n\r\n                // Set data\r\n\r\n\r\n                yAxis.data.setAll(keyfacts);\r\n                series.data.setAll(keyfacts);\r\n\r\n\r\n                // Make stuff animate on load\r\n                // https://www.amcharts.com/docs/v5/concepts/animations/\r\n                series.appear(1000);\r\n                chart.appear(1000, 100);\r\n\r\n\r\n            })\r\n\r\n    },\r\n\r\n}\r\n</script>\r\n  \r\n\r\n<style scoped>\r\n.hello {\r\n    width: 30%;\r\n    height: 400px;\r\n\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}