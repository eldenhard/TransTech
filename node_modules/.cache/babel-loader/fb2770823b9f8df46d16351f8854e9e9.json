{"ast":null,"code":"import * as am5 from '@amcharts/amcharts5';\nimport * as am5xy from '@amcharts/amcharts5/xy';\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\nimport Loader from '@/components/loader/loader.vue';\nimport { mapState } from \"vuex\";\nimport api from '../api/wagonPark';\nexport default {\n  name: 'KetyFacts',\n\n  data() {\n    return {\n      loader: false\n    };\n  },\n\n  components: {\n    Loader\n  },\n  computed: { ...mapState({\n      user: state => state.auth.user,\n      uid: state => state.auth.uid\n    })\n  },\n\n  mounted() {\n    this.loader = true;\n    this.loader = false;\n  },\n\n  beforeDestroy() {\n    if (this.root) {\n      this.root.dispose();\n    }\n  }\n\n};","map":{"version":3,"mappings":"AASA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA,iBADA;;EAEAC;IACA;MACAC;IADA;EAGA,CANA;;EAOAC;IAAAC;EAAA,CAPA;EAQAC,YACA;MACAC,8BADA;MAEAC;IAFA;EADA,CARA;;EAcAC;IACA;IAGA;EACA,CAnBA;;EAqBAC;IACA;MACA;IACA;EACA;;AAzBA","names":["name","data","loader","components","Loader","computed","user","uid","mounted","beforeDestroy"],"sourceRoot":"src/views","sources":["KeyFacts.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <Loader :loader=\"loader\"></Loader>\r\n        <div class=\"hello\" ref=\"chartdiv\">\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport Loader from '@/components/loader/loader.vue'\r\nimport { mapState } from \"vuex\";\r\nimport api from '../api/wagonPark'\r\nexport default {\r\n    name: 'KetyFacts',\r\n    data() {\r\n        return {\r\n            loader: false,\r\n        }\r\n    },\r\n    components: {Loader},\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.auth.user,\r\n            uid: state => state.auth.uid\r\n        })\r\n    },\r\n    mounted() {\r\n        this.loader = true\r\n\r\n\r\n        this.loader = false\r\n    },\r\n\r\n    beforeDestroy() {\r\n        if (this.root) {\r\n            this.root.dispose();\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.hello {\r\n    width: 100%;\r\n    height: 500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}