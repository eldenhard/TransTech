{"ast":null,"code":"import axios from \"axios\";\nimport { mapState } from \"vuex\";\nimport Notifications from \"@/components/notifications/Notifications.vue\";\nexport default {\n  name: \"Authorization\",\n\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      showNotify: false,\n      notifyHead: '',\n      notifyMessage: ''\n    };\n  },\n\n  methods: {\n    submitEntry: function () {\n      const api = \"http://10.1.5.65/api/personal/login/\";\n      axios.post(api, {\n        email: this.email,\n        password: this.password\n      }).then(resp => {\n        console.log('in then');\n        let user = resp.data;\n        console.log(user);\n\n        if (user.token) {\n          this.$store.commit(\"setUser\", user);\n          this.showNotify = true;\n          this.notifyHead = 'Здравствуйте';\n          this.notifyMessage = 'Вы успешно авторизированы';\n        }\n      }).catch(err => {\n        console.log('in catch');\n        this.showNotify = true;\n        this.notifyHead = 'Ошибка авторизации';\n        this.notifyMessage = 'Пожалуйста, проверьте ваши введенные данные';\n      });\n      return false;\n    }\n  },\n  computed: { ...mapState({\n      user: state => state.user\n    })\n  },\n  watch: {\n    showNotify: function (v) {\n      if (v) {\n        setTimeout(() => {\n          this.showNotify = false;\n        }, 1500);\n      }\n    }\n  },\n  components: {\n    Notifications\n  }\n};","map":{"version":3,"mappings":"AAoBA;AACA;AACA;AACA;EACAA,qBADA;;EAEAC;IACA;MACAC,SADA;MAEAC,YAFA;MAGAC,iBAHA;MAIAC,cAJA;MAKAC;IALA;EAOA,CAVA;;EAWAC;IACAC;MACA;MACAC,MACAC,IADA,CACAC,GADA,EACA;QACAT,iBADA;QAEAC;MAFA,CADA,EAKAS,IALA,CAKAC;QACAC;QACA;QACAA;;QACA;UAEA;UACA;UACA;UACA;QACA;MACA,CAhBA,EAiBAC,KAjBA,CAiBAC;QACAF;QACA;QACA;QACA;MACA,CAtBA;MAuBA;IACA;EA3BA,CAXA;EAwCAG,YACA;MACAC;IADA;EADA,CAxCA;EA6CAC;IACAf;MACA;QACAgB;UACA;QACA,CAFA,EAEA,IAFA;MAGA;IACA;EAPA,CA7CA;EAsDAC;IAAAC;EAAA;AAtDA","names":["name","data","email","password","showNotify","notifyHead","notifyMessage","methods","submitEntry","axios","post","api","then","resp","console","catch","err","computed","user","watch","setTimeout","components","Notifications"],"sourceRoot":"src/views","sources":["Authorization.vue"],"sourcesContent":["<template>\r\n    <div>\r\n  <div id=\"id01\" class=\"modal\" :style=\"{'display': user.token ? 'none' : 'block'}\">\r\n    <div class=\"modal-content animate\" style=\" width: 40%;\">\r\n      <div class=\"container\">\r\n        <label for=\"uname\"><b>Email</b></label>\r\n        <input type=\"text\" required placeholder=\"i.ivanov@tehtrans.com\" v-model=\"email\">\r\n\r\n        <label for=\"psw\"><b>Пароль</b></label>\r\n        <input type=\"password\" required placeholder=\"Введите пароль\" v-model=\"password\">\r\n\r\n        <button @click=\"submitEntry()\">Войти</button>\r\n      </div>\r\n    </div>\r\n    <Notifications :show=\"showNotify\" :header=\"notifyHead\" :message=\"notifyMessage\"/>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport {mapState} from \"vuex\";\r\nimport Notifications from \"@/components/notifications/Notifications.vue\";\r\nexport default {\r\n    name: \"Authorization\",\r\n    data() {\r\n        return {\r\n            email: \"\",\r\n            password: \"\",\r\n            showNotify: false,\r\n            notifyHead: '',\r\n            notifyMessage: ''\r\n        };\r\n    },\r\n    methods: {\r\n        submitEntry: function () {\r\n            const api = \"http://10.1.5.65/api/personal/login/\";\r\n            axios\r\n                .post(api, {\r\n                email: this.email,\r\n                password: this.password,\r\n            })\r\n                .then(resp => {\r\n                    console.log('in then');\r\n                let user = resp.data;\r\n                console.log(user);\r\n                if (user.token) {\r\n                    \r\n                    this.$store.commit(\"setUser\", user);\r\n                    this.showNotify = true\r\n                    this.notifyHead = 'Здравствуйте'\r\n                    this.notifyMessage = 'Вы успешно авторизированы'\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('in catch');\r\n              this.showNotify = true\r\n              this.notifyHead = 'Ошибка авторизации'\r\n              this.notifyMessage = 'Пожалуйста, проверьте ваши введенные данные'\r\n            })\r\n            return false;\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.user\r\n        })\r\n    },\r\n    watch: {\r\n      showNotify: function(v){\r\n        if(v){\r\n          setTimeout(() => {\r\n            this.showNotify = false\r\n          }, 1500)\r\n        }\r\n      }\r\n    },\r\n    components: { Notifications }\r\n}\r\n    </script>\r\n\r\n\r\n\r\n\r\n\r\n<style>\r\n\r\n\r\n\r\n\r\n\r\ninput[type=text], input[type=password] {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n}\r\nbutton {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100%;\r\n}\r\nbutton:hover {\r\n    opacity: 0.8;\r\n}\r\n.cancelbtn {\r\n    width: auto;\r\n    padding: 10px 18px;\r\n    background-color: #f44336;\r\n}\r\n.imgcontainer {\r\n    text-align: center;\r\n    margin: 24px 0 12px 0;\r\n    position: relative;\r\n}\r\n\r\n.container {\r\n    padding: 16px;\r\n}\r\n\r\nspan.psw {\r\n    float: right;\r\n    padding-top: 16px;\r\n}\r\n.modal {\r\n    display: none;\r\n    position: fixed;\r\n    z-index: 1;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgb(0,0,0);\r\n    background-color: rgba(0,0,0,0.4);\r\n    padding-top: 60px;\r\n}\r\n\r\n.modal-content {\r\n    background-color: #fefefe;\r\n    margin: 5% auto 15% auto;\r\n    border: 1px solid #888;\r\n    width: 40%;\r\n}\r\n\r\n.close {\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 0;\r\n    color: #000;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n    color: red;\r\n    cursor: pointer;\r\n}\r\n\r\n.animate {\r\n    -webkit-animation: animatezoom 0.6s;\r\n    animation: animatezoom 0.6s\r\n}\r\n\r\n@-webkit-keyframes animatezoom {\r\n    from {-webkit-transform: scale(0)}\r\n    to {-webkit-transform: scale(1)}\r\n}\r\n\r\n@keyframes animatezoom {\r\n    from {transform: scale(0)}\r\n    to {transform: scale(1)}\r\n}\r\n\r\n@media screen and (max-width: 300px) {\r\n    span.psw {\r\n       display: block;\r\n       float: none;\r\n    }\r\n    .cancelbtn {\r\n       width: 100%;\r\n    }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}