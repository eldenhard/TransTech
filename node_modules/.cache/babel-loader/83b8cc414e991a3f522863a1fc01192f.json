{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends, __read, __spreadArray } from \"tslib\";\nimport { Disposer } from \"./Disposer\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\n\nvar Adapters =\n/** @class */\nfunction () {\n  function Adapters(entity) {\n    Object.defineProperty(this, \"_entity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_callbacks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_disabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._entity = entity;\n  }\n  /**\r\n   * Add a function (`callback`) that will modify value for setting `key`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n   */\n\n\n  Object.defineProperty(Adapters.prototype, \"add\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n\n      var callbacks = this._callbacks[key];\n\n      if (callbacks === undefined) {\n        callbacks = this._callbacks[key] = [];\n      }\n\n      callbacks.push(callback);\n\n      this._entity._markDirtyKey(key);\n\n      return new Disposer(function () {\n        if ($array.removeFirst(callbacks, callback)) {\n          _this._entity._markDirtyKey(key);\n        }\n      });\n    }\n  });\n  /**\r\n   * Removes all adapters for the specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n\n  Object.defineProperty(Adapters.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var callbacks = this._callbacks[key];\n\n      if (callbacks !== undefined) {\n        delete this._callbacks[key];\n\n        if (callbacks.length !== 0) {\n          this._entity._markDirtyKey(key);\n        }\n      }\n    }\n  });\n  /**\r\n   * Enables (previously disabled) adapters for specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n\n  Object.defineProperty(Adapters.prototype, \"enable\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (this._disabled[key]) {\n        delete this._disabled[key];\n\n        this._entity._markDirtyKey(key);\n      }\n    }\n  });\n  /**\r\n   * Disables all adapters for specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n\n  Object.defineProperty(Adapters.prototype, \"disable\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (!this._disabled[key]) {\n        this._disabled[key] = true;\n\n        this._entity._markDirtyKey(key);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Adapters.prototype, \"fold\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!this._disabled[key]) {\n        var callbacks = this._callbacks[key];\n\n        if (callbacks !== undefined) {\n          for (var i = 0, len = callbacks.length; i < len; ++i) {\n            value = callbacks[i](value, this._entity, key);\n          }\n        }\n      }\n\n      return value;\n    }\n  });\n  return Adapters;\n}();\n\nexport { Adapters };\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\n\nvar Animation =\n/** @class */\nfunction () {\n  function Animation(animation, from, to, duration, easing, loops, startingTime) {\n    Object.defineProperty(this, \"_animation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_from\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_to\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_duration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_easing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_loops\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_interpolate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_oldTime\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_time\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_stopped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_playing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    this._animation = animation;\n    this._from = from;\n    this._to = to;\n    this._duration = duration;\n    this._easing = easing;\n    this._loops = loops;\n    this._interpolate = getInterpolate(from, to);\n    this._oldTime = startingTime;\n  }\n\n  Object.defineProperty(Animation.prototype, \"to\", {\n    get: function () {\n      return this._to;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"from\", {\n    get: function () {\n      return this._from;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"playing\", {\n    get: function () {\n      return this._playing;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"stopped\", {\n    get: function () {\n      return this._stopped;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"stop\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._stopped) {\n        this._stopped = true;\n        this._playing = false;\n\n        if (this.events.isEnabled(\"stopped\")) {\n          this.events.dispatch(\"stopped\", {\n            type: \"stopped\",\n            target: this\n          });\n        }\n      }\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"pause\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._playing = false;\n      this._oldTime = null;\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"play\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._stopped && !this._playing) {\n        this._playing = true;\n\n        this._animation._startAnimation();\n      }\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"percentage\", {\n    get: function () {\n      return this._time / this._duration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"waitForStop\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      return new Promise(function (resolve, _reject) {\n        if (_this._stopped) {\n          resolve();\n        } else {\n          var listener = function () {\n            stopped_1.dispose();\n            resolve();\n          };\n\n          var stopped_1 = _this.events.on(\"stopped\", listener);\n        }\n      });\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_checkEnded\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this._loops > 1) {\n        --this._loops;\n        return false;\n      } else {\n        return true;\n      }\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_run\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (currentTime) {\n      if (this._oldTime !== null) {\n        this._time += currentTime - this._oldTime;\n\n        if (this._time > this._duration) {\n          this._time = this._duration;\n        }\n      }\n\n      this._oldTime = currentTime;\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_reset\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (currentTime) {\n      this._oldTime = currentTime;\n      this._time = 0;\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_value\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (diff) {\n      return this._interpolate(this._easing(diff), this._from, this._to);\n    }\n  });\n  return Animation;\n}();\n\nexport { Animation };\n/**\r\n * @ignore\r\n */\n\nvar counter = 0;\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\n\nvar Settings =\n/** @class */\nfunction () {\n  function Settings(settings) {\n    /**\r\n     * Unique ID.\r\n     */\n    Object.defineProperty(this, \"uid\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: ++counter\n    });\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_privateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_settingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_privateSettingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_prevSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_prevPrivateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_animatingSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_animatingPrivateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_disposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    }); // TODO move this into Entity\n\n    Object.defineProperty(this, \"_userProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._settings = settings;\n  }\n\n  Object.defineProperty(Settings.prototype, \"_checkDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $object.keys(this._settings).forEach(function (key) {\n        _this._userProperties[key] = true;\n\n        _this._markDirtyKey(key);\n      });\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_runAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (currentTime) {\n      var _this = this;\n\n      if (!this.isDisposed()) {\n        var playing_1 = false;\n        $object.each(this._animatingSettings, function (key, animation) {\n          if (animation._stopped) {\n            _this._stopAnimation(key);\n          } else if (animation._playing) {\n            animation._run(currentTime);\n\n            var diff = animation.percentage;\n\n            if (diff >= 1) {\n              if (animation._checkEnded()) {\n                _this.set(key, animation._value(1));\n              } else {\n                playing_1 = true;\n\n                animation._reset(currentTime);\n\n                _this._set(key, animation._value(1));\n              }\n            } else {\n              playing_1 = true;\n\n              _this._set(key, animation._value(diff));\n            }\n          }\n        });\n        $object.each(this._animatingPrivateSettings, function (key, animation) {\n          if (animation._stopped) {\n            _this._stopAnimationPrivate(key);\n          } else if (animation._playing) {\n            animation._run(currentTime);\n\n            var diff = animation.percentage;\n\n            if (diff >= 1) {\n              if (animation._checkEnded()) {\n                _this.setPrivate(key, animation._value(1));\n              } else {\n                playing_1 = true;\n\n                animation._reset(currentTime);\n\n                _this._setPrivate(key, animation._value(1));\n              }\n            } else {\n              playing_1 = true;\n\n              _this._setPrivate(key, animation._value(diff));\n            }\n          }\n        });\n        return playing_1;\n      } else {\n        return false;\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_markDirtyKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_key) {\n      this.markDirty();\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_markDirtyPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_key) {\n      this.markDirty();\n    }\n  });\n  /**\r\n   * Sets a callback function to invoke when specific key of settings changes\r\n   * or is set.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @param   key       Settings key\r\n   * @param   callback  Callback\r\n   * @return            Disposer for event\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n\n      var events = this._settingEvents[key];\n\n      if (events === undefined) {\n        events = this._settingEvents[key] = [];\n      }\n\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n\n        if (events.length === 0) {\n          delete _this._settingEvents[key];\n        }\n      });\n    }\n  });\n  /**\r\n   * Sets a callback function to invoke when specific key of private settings\r\n   * changes or is set.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @ignore\r\n   * @param   key       Private settings key\r\n   * @param   callback  Callback\r\n   * @return            Disposer for event\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"onPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n\n      var events = this._privateSettingEvents[key];\n\n      if (events === undefined) {\n        events = this._privateSettingEvents[key] = [];\n      }\n\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n\n        if (events.length === 0) {\n          delete _this._privateSettingEvents[key];\n        }\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"getRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      return this.getRaw(key, fallback);\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_sendKeyEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n\n      var events = this._settingEvents[key];\n\n      if (events !== undefined) {\n        $array.each(events, function (callback) {\n          callback(value, _this, key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_sendPrivateKeyEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n\n      var events = this._privateSettingEvents[key];\n\n      if (events !== undefined) {\n        $array.each(events, function (callback) {\n          callback(value, _this, key);\n        });\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"_setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, old, value) {\n      this._prevSettings[key] = old;\n\n      this._sendKeyEvent(key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._settings[key];\n      this._settings[key] = value;\n\n      if (old !== value) {\n        this._setRaw(key, old, value);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"_set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._settings[key];\n      this._settings[key] = value;\n\n      if (old !== value) {\n        this._setRaw(key, old, value);\n\n        this._markDirtyKey(key);\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_stopAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var animation = this._animatingSettings[key];\n\n      if (animation) {\n        delete this._animatingSettings[key];\n        animation.stop();\n      }\n    }\n  });\n  /**\r\n   * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._set(key, value);\n\n      this._stopAnimation(key);\n\n      return value;\n    }\n  });\n  /**\r\n   * Removes a setting value for the specified `key`;\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._settings) {\n        this._prevSettings[key] = this._settings[key];\n        delete this._settings[key];\n\n        this._sendKeyEvent(key, undefined);\n\n        this._markDirtyKey(key);\n      }\n\n      this._stopAnimation(key);\n    }\n  });\n  /**\r\n   * Removes all keys;\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"removeAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $array.each($object.keys(this._settings), function (key) {\n        _this.remove(key);\n      });\n    }\n  });\n  /**\r\n   * Returns a value of a private setting.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"getPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._privateSettings[key];\n\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"_setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, old, value) {\n      this._prevPrivateSettings[key] = old;\n\n      this._sendPrivateKeyEvent(key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._privateSettings[key];\n      this._privateSettings[key] = value;\n\n      if (old !== value) {\n        this._setPrivateRaw(key, old, value);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"_setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._privateSettings[key];\n      this._privateSettings[key] = value;\n\n      if (old !== value) {\n        this._setPrivateRaw(key, old, value);\n\n        this._markDirtyPrivateKey(key);\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_stopAnimationPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var animation = this._animatingPrivateSettings[key];\n\n      if (animation) {\n        animation.stop();\n        delete this._animatingPrivateSettings[key];\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._setPrivate(key, value);\n\n      this._stopAnimationPrivate(key);\n\n      return value;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"removePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._privateSettings) {\n        this._prevPrivateSettings[key] = this._privateSettings[key];\n        delete this._privateSettings[key];\n\n        this._markDirtyPrivateKey(key);\n      }\n\n      this._stopAnimationPrivate(key);\n    }\n  });\n  /**\r\n   * Sets multiple settings at once.\r\n   *\r\n   * `settings` must be an object with key: value pairs.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param settings Settings\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      var _this = this;\n\n      $object.each(settings, function (key, value) {\n        _this.set(key, value);\n      });\n    }\n  });\n  /**\r\n   * Animates setting values from current/start values to new ones.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n   * @param   options  Animation options\r\n   * @return           Animation object\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"animate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (options) {\n      var key = options.key;\n      var to = options.to;\n      var duration = options.duration || 0;\n      var loops = options.loops || 1;\n      var from = options.from === undefined ? this.get(key) : options.from;\n      var easing = options.easing === undefined ? $ease.linear : options.easing;\n\n      if (duration === 0) {\n        this.set(key, to);\n      } else {\n        if (from === undefined || from === to) {\n          this.set(key, to);\n        } else {\n          this.set(key, from);\n          var animation_1 = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n          this._startAnimation();\n\n          return animation_1;\n        }\n      }\n\n      var animation = new Animation(this, from, to, duration, easing, loops, null);\n      animation.stop();\n      return animation;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"animatePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (options) {\n      var key = options.key;\n      var to = options.to;\n      var duration = options.duration || 0;\n      var loops = options.loops || 1;\n      var from = options.from === undefined ? this.getPrivate(key) : options.from;\n      var easing = options.easing === undefined ? $ease.linear : options.easing;\n\n      if (duration === 0) {\n        this.setPrivate(key, to);\n      } else {\n        if (from === undefined || from === to) {\n          this.setPrivate(key, to);\n        } else {\n          this.setPrivate(key, from);\n          var animation_2 = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n          this._startAnimation();\n\n          return animation_2;\n        }\n      }\n\n      var animation = new Animation(this, from, to, duration, easing, loops, null);\n      animation.stop();\n      return animation;\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * Returns `true` if this element is disposed.\r\n   *\r\n   * @return Disposed\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"isDisposed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._disposed;\n    }\n  });\n  /**\r\n   * Disposes this object.\r\n   */\n\n  Object.defineProperty(Settings.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._disposed) {\n        this._disposed = true;\n\n        this._dispose();\n      }\n    }\n  });\n  return Settings;\n}();\n\nexport { Settings };\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\n\nvar Entity =\n/** @class */\nfunction (_super) {\n  __extends(Entity, _super);\n  /**\r\n   * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n   *\r\n   * Use static method `Class.new()` instead.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @ignore\r\n   */\n\n\n  function Entity(root, settings, isReal, templates) {\n    if (templates === void 0) {\n      templates = [];\n    }\n\n    var _this = _super.call(this, settings) || this;\n\n    Object.defineProperty(_this, \"_root\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_user_id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // for testing purposes\n\n    Object.defineProperty(_this, \"states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new States(_this)\n    });\n    Object.defineProperty(_this, \"adapters\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Adapters(_this)\n    });\n    Object.defineProperty(_this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._createEvents()\n    });\n    Object.defineProperty(_this, \"_userPrivateProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_dirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_dirtyPrivate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // Templates for the themes\n\n    Object.defineProperty(_this, \"_templates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    }); // Internal templates which can be overridden by the user's templates\n\n    Object.defineProperty(_this, \"_internalTemplates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // Default themes which can be overridden by the user's themes\n\n    Object.defineProperty(_this, \"_defaultThemes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    }); // Disposers for all of the templates\n\n    Object.defineProperty(_this, \"_templateDisposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_disposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    }); // Whether the template setup function should be run\n\n    Object.defineProperty(_this, \"_runSetup\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_disposerProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n\n    _this._root = root;\n    _this._internalTemplates = templates;\n\n    if (settings.id) {\n      _this._registerId(settings.id);\n    }\n\n    return _this;\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   root      Root element\r\n   * @param   settings  Settings\r\n   * @param   template  Template\r\n   * @return            Instantiated object\r\n   */\n\n\n  Object.defineProperty(Entity, \"new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root, settings, template) {\n      var x = new this(root, settings, true);\n      x._template = template;\n\n      x._afterNew();\n\n      return x;\n    }\n  });\n  Object.defineProperty(Entity, \"_new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root, settings, templates) {\n      if (templates === void 0) {\n        templates = [];\n      }\n\n      var x = new this(root, settings, true, templates);\n\n      x._afterNew();\n\n      return x;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this._checkDirty();\n\n      var shouldApply = false;\n      var template = this._template;\n\n      if (template) {\n        shouldApply = true;\n\n        template._setObjectTemplate(this);\n      }\n\n      $array.each(this._internalTemplates, function (template) {\n        shouldApply = true;\n\n        template._setObjectTemplate(_this);\n      });\n\n      if (shouldApply) {\n        this._applyTemplates(false);\n      }\n\n      this.states.create(\"default\", {});\n\n      this._setDefaults();\n    }\n  }); // This is the same as _afterNew, except it also applies the themes.\n  // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n\n  Object.defineProperty(Entity.prototype, \"_afterNewApplyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this._checkDirty();\n\n      var template = this._template;\n\n      if (template) {\n        template._setObjectTemplate(this);\n      }\n\n      $array.each(this._internalTemplates, function (template) {\n        template._setObjectTemplate(_this);\n      });\n      this.states.create(\"default\", {});\n\n      this._setDefaults();\n\n      this._applyThemes();\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_createEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new EventDispatcher();\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"classNames\", {\n    /**\r\n     * @ignore\r\n     */\n    get: function () {\n      return this.constructor.classNames;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Entity.prototype, \"className\", {\n    /**\r\n     * @ignore\r\n     */\n    get: function () {\n      return this.constructor.className;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Entity.prototype, \"_setDefaults\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Entity.prototype, \"_setDefault\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!(key in this._settings)) {\n        _super.prototype.set.call(this, key, value);\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_setRawDefault\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!(key in this._settings)) {\n        _super.prototype.setRaw.call(this, key, value);\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $object.keys(this._dirty).forEach(function (key) {\n        _this._dirty[key] = false;\n      });\n      $object.keys(this._dirtyPrivate).forEach(function (key) {\n        _this._dirtyPrivate[key] = false;\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"isDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return !!this._dirty[key];\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"isPrivateDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return !!this._dirtyPrivate[key];\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_markDirtyKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      this._dirty[key] = true;\n\n      _super.prototype._markDirtyKey.call(this, key);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_markDirtyPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      this._dirtyPrivate[key] = true;\n\n      _super.prototype._markDirtyKey.call(this, key);\n    }\n  });\n  /**\r\n   * Checks if element is of certain class (or inherits one).\r\n   *\r\n   * @param   type  Class name to check\r\n   * @return {boolean} Is of class?\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"isType\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (type) {\n      return this.classNames.indexOf(type) !== -1;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_pushPropertyDisposer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, disposer) {\n      var disposers = this._disposerProperties[key];\n\n      if (disposers === undefined) {\n        disposers = this._disposerProperties[key] = [];\n      }\n\n      disposers.push(disposer);\n      return disposer;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_disposeProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var disposers = this._disposerProperties[key];\n\n      if (disposers !== undefined) {\n        $array.each(disposers, function (disposer) {\n          disposer.dispose();\n        });\n        delete this._disposerProperties[key];\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"template\", {\n    get: function () {\n      return this._template;\n    },\n\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\n    set: function (value) {\n      var template = this._template;\n\n      if (template !== value) {\n        this._template = value;\n\n        if (template) {\n          template._removeObjectTemplate(this);\n        }\n\n        if (value) {\n          value._setObjectTemplate(this);\n        }\n\n        this._applyTemplates();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._root._addDirtyEntity(this);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_startAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._root._addAnimation(this);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_animationTime\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._root.animationTime;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyState\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_name) {}\n  });\n  Object.defineProperty(Entity.prototype, \"_applyStateAnimated\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_name, _duration) {}\n  });\n  Object.defineProperty(Entity.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this.adapters.fold(key, this._settings[key]);\n\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  /**\r\n   * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userProperties[key] = true;\n      return _super.prototype.set.call(this, key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userProperties[key] = true;\n\n      _super.prototype.setRaw.call(this, key, value);\n    }\n  });\n  /**\r\n   * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"_setSoft\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!this._userProperties[key]) {\n        return _super.prototype.set.call(this, key, value);\n      }\n\n      return value;\n    }\n  });\n  /**\r\n   * Removes a setting value for the specified `key`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      delete this._userProperties[key];\n\n      this._removeTemplateProperty(key);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userPrivateProperties[key] = true;\n      return _super.prototype.setPrivate.call(this, key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userPrivateProperties[key] = true;\n\n      _super.prototype.setPrivateRaw.call(this, key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"removePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      delete this._userPrivateProperties[key];\n\n      this._removeTemplatePrivateProperty(key);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_setTemplateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (template, key, value) {\n      if (!this._userProperties[key]) {\n        var match = this._findTemplateByKey(key);\n\n        if (template === match) {\n          _super.prototype.set.call(this, key, value);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_setTemplatePrivateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (template, key, value) {\n      if (!this._userPrivateProperties[key]) {\n        var match = this._findTemplateByPrivateKey(key);\n\n        if (template === match) {\n          _super.prototype.setPrivate.call(this, key, value);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_removeTemplateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (!this._userProperties[key]) {\n        var match = this._findTemplateByKey(key);\n\n        if (match) {\n          // TODO don't stop the animation if the property didn't change\n          _super.prototype.set.call(this, key, match._settings[key]);\n        } else {\n          _super.prototype.remove.call(this, key);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_removeTemplatePrivateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (!this._userPrivateProperties[key]) {\n        var match = this._findTemplateByPrivateKey(key);\n\n        if (match) {\n          // TODO don't stop the animation if the property didn't change\n          _super.prototype.setPrivate.call(this, key, match._privateSettings[key]);\n        } else {\n          _super.prototype.removePrivate.call(this, key);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_walkParents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      f(this._root._rootContainer);\n      f(this);\n    }\n  }); // TODO faster version of this method which is specialized to just 1 key\n\n  Object.defineProperty(Entity.prototype, \"_applyStateByKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      var other = this.states.create(name, {});\n      var seen = {};\n\n      this._eachTemplate(function (template) {\n        var state = template.states.lookup(name);\n\n        if (state) {\n          state._apply(other, seen);\n        }\n      });\n\n      $object.each(other._settings, function (key) {\n        if (!seen[key] && !other._userSettings[key]) {\n          other.remove(key);\n        }\n      });\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (template, state) {\n      var _this = this;\n\n      this._templateDisposers.push(template._apply(this, state));\n\n      $object.each(template._settings, function (key, value) {\n        if (!state.settings[key] && !_this._userProperties[key]) {\n          state.settings[key] = true;\n\n          _super.prototype.set.call(_this, key, value);\n        }\n      });\n      $object.each(template._privateSettings, function (key, value) {\n        if (!state.privateSettings[key] && !_this._userPrivateProperties[key]) {\n          state.privateSettings[key] = true;\n\n          _super.prototype.setPrivate.call(_this, key, value);\n        }\n      });\n\n      if (this._runSetup && template.setup) {\n        this._runSetup = false;\n        template.setup(this);\n      }\n    }\n  });\n  /**\r\n   * Calls the closure with each template and returns the first template which is true\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"_findStaticTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      if (this._template) {\n        if (f(this._template)) {\n          return this._template;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_eachTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      this._findStaticTemplate(function (template) {\n        f(template);\n        return false;\n      }); // _internalTemplates is sorted with most specific to the right\n\n\n      $array.eachReverse(this._internalTemplates, f); // _templates is sorted with most specific to the left\n\n      $array.each(this._templates, f);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyTemplates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (remove) {\n      var _this = this;\n\n      if (remove === void 0) {\n        remove = true;\n      }\n\n      if (remove) {\n        this._disposeTemplates();\n      }\n\n      var state = {\n        settings: {},\n        privateSettings: {},\n        states: {}\n      };\n\n      this._eachTemplate(function (template) {\n        _this._applyTemplate(template, state);\n      });\n\n      if (remove) {\n        $object.each(this._settings, function (key) {\n          if (!_this._userProperties[key] && !state.settings[key]) {\n            _super.prototype.remove.call(_this, key);\n          }\n        });\n        $object.each(this._privateSettings, function (key) {\n          if (!_this._userPrivateProperties[key] && !state.privateSettings[key]) {\n            _super.prototype.removePrivate.call(_this, key);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_findTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      var value = this._findStaticTemplate(f);\n\n      if (value === undefined) {\n        // _internalTemplates is sorted with most specific to the right\n        var value_1 = $array.findReverse(this._internalTemplates, f);\n\n        if (value_1 === undefined) {\n          // _templates is sorted with most specific to the left\n          return $array.find(this._templates, f);\n        } else {\n          return value_1;\n        }\n      } else {\n        return value;\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_findTemplateByKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return this._findTemplate(function (template) {\n        return key in template._settings;\n      });\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_findTemplateByPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return this._findTemplate(function (template) {\n        return key in template._privateSettings;\n      });\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_disposeTemplates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      $array.each(this._templateDisposers, function (disposer) {\n        disposer.dispose();\n      });\n      this._templateDisposers.length = 0;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_removeTemplates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $array.each(this._templates, function (template) {\n        template._removeObjectTemplate(_this);\n      });\n      this._templates.length = 0;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var isConnected = false;\n      var defaults = [];\n      var themes = [];\n      var themeTags = new Set();\n      var tags = this.get(\"themeTagsSelf\");\n\n      if (tags) {\n        $array.each(tags, function (tag) {\n          themeTags.add(tag);\n        });\n      }\n\n      this._walkParents(function (entity) {\n        if (entity === _this._root._rootContainer) {\n          isConnected = true;\n        }\n\n        if (entity._defaultThemes.length > 0) {\n          defaults.push(entity._defaultThemes);\n        }\n\n        var theme = entity.get(\"themes\");\n\n        if (theme) {\n          themes.push(theme);\n        }\n\n        var tags = entity.get(\"themeTags\");\n\n        if (tags) {\n          $array.each(tags, function (tag) {\n            themeTags.add(tag);\n          });\n        }\n      });\n\n      themes = defaults.concat(themes);\n\n      this._removeTemplates();\n\n      if (isConnected) {\n        $array.eachReverse(this.classNames, function (name) {\n          var allRules = [];\n          $array.each(themes, function (themes) {\n            $array.each(themes, function (theme) {\n              var rules = theme._lookupRules(name);\n\n              if (rules) {\n                $array.eachReverse(rules, function (rule) {\n                  var matches = rule.tags.every(function (tag) {\n                    return themeTags.has(tag);\n                  });\n\n                  if (matches) {\n                    var result = $array.getFirstSortedIndex(allRules, function (x) {\n                      var order = $order.compare(rule.tags.length, x.tags.length);\n\n                      if (order === 0) {\n                        return $order.compareArray(rule.tags, x.tags, $order.compare);\n                      } else {\n                        return order;\n                      }\n                    });\n                    allRules.splice(result.index, 0, rule);\n                  }\n                });\n              }\n            });\n          });\n          $array.each(allRules, function (rule) {\n            _this._templates.push(rule.template);\n\n            rule.template._setObjectTemplate(_this);\n          });\n        });\n      }\n\n      this._applyTemplates();\n\n      if (isConnected) {\n        // This causes it to only run the setup function the first time that the themes are applied\n        this._runSetup = false;\n      }\n\n      return isConnected;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Entity.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isDirty(\"id\")) {\n        var id = this.get(\"id\");\n\n        if (id) {\n          this._registerId(id);\n        }\n\n        var prevId = this._prevSettings.id;\n\n        if (prevId) {\n          delete registry.entitiesById[prevId];\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_registerId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\n        throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n      }\n\n      registry.entitiesById[id] = this;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_afterChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"addDisposer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (disposer) {\n      this._disposers.push(disposer);\n\n      return disposer;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._dispose.call(this);\n\n      var template = this._template;\n\n      if (template) {\n        template._removeObjectTemplate(this);\n      }\n\n      $array.each(this._internalTemplates, function (template) {\n        template._removeObjectTemplate(_this);\n      });\n\n      this._removeTemplates();\n\n      this._disposeTemplates();\n\n      this.events.dispose();\n\n      this._disposers.forEach(function (x) {\n        x.dispose();\n      });\n\n      $object.each(this._disposerProperties, function (_, disposers) {\n        $array.each(disposers, function (disposer) {\n          disposer.dispose();\n        });\n      });\n      var id = this.get(\"id\");\n\n      if (id) {\n        delete registry.entitiesById[id];\n      }\n    }\n  });\n  /**\r\n   * Creates and returns a \"disposable\" timeout.\r\n   *\r\n   * @param   fn     Callback\r\n   * @param   delay  Delay in milliseconds\r\n   * @return         Timeout disposer\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"setTimeout\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fn, delay) {\n      var _this = this;\n\n      var id = setTimeout(function () {\n        _this.removeDispose(disposer);\n\n        fn();\n      }, delay);\n      var disposer = new Disposer(function () {\n        clearTimeout(id);\n      });\n\n      this._disposers.push(disposer);\n\n      return disposer;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"removeDispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target) {\n      if (!this.isDisposed()) {\n        var index = $array.indexOf(this._disposers, target);\n\n        if (index > -1) {\n          this._disposers.splice(index, 1);\n        }\n      }\n\n      target.dispose();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"hasTag\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tag) {\n      return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"addTag\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tag) {\n      if (!this.hasTag(tag)) {\n        var tags = this.get(\"themeTags\", []);\n        tags.push(tag);\n        this.set(\"themeTags\", tags);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Entity.prototype, \"removeTag\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tag) {\n      if (this.hasTag(tag)) {\n        var tags = this.get(\"themeTags\", []);\n        $array.remove(tags, tag);\n        this.set(\"themeTags\", tags);\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_t\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, locale) {\n      var _a;\n\n      var rest = [];\n\n      for (var _i = 2; _i < arguments.length; _i++) {\n        rest[_i - 2] = arguments[_i];\n      }\n\n      return (_a = this._root.language).translate.apply(_a, __spreadArray([text, locale], __read(rest), false));\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"root\", {\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\n    get: function () {\n      return this._root;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Entity, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Entity\"\n  });\n  Object.defineProperty(Entity, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: [\"Entity\"]\n  });\n  return Entity;\n}(Settings);\n\nexport { Entity };","map":{"version":3,"mappings":"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","names":["Disposer","EventDispatcher","getInterpolate","States","registry","$object","$ease","$array","$order","entity","Object","_entity","key","callback","callbacks","_callbacks","undefined","push","_markDirtyKey","removeFirst","_this","length","_disabled","value","i","len","animation","from","to","duration","easing","loops","startingTime","_animation","_from","_to","_duration","_easing","_loops","_interpolate","_oldTime","Animation","_playing","_stopped","events","isEnabled","dispatch","type","target","_startAnimation","_time","Promise","resolve","_reject","listener","stopped_1","dispose","on","currentTime","diff","counter","settings","_settings","keys","forEach","_userProperties","isDisposed","playing_1","each","_animatingSettings","_stopAnimation","_run","percentage","_checkEnded","set","_value","_reset","_set","_animatingPrivateSettings","_stopAnimationPrivate","setPrivate","_setPrivate","_key","markDirty","_settingEvents","_privateSettingEvents","fallback","getRaw","old","_prevSettings","_sendKeyEvent","_setRaw","stop","remove","_privateSettings","_prevPrivateSettings","_sendPrivateKeyEvent","_setPrivateRaw","_markDirtyPrivateKey","options","get","linear","animation_1","_animationTime","getPrivate","animation_2","_disposed","_dispose","__extends","root","isReal","templates","_super","Adapters","_createEvents","Error","_root","_internalTemplates","id","_registerId","template","x","_template","_afterNew","_checkDirty","shouldApply","_setObjectTemplate","_applyTemplates","states","create","_setDefaults","_applyThemes","Entity","constructor","classNames","className","call","setRaw","_dirty","_dirtyPrivate","indexOf","disposer","disposers","_disposerProperties","_removeObjectTemplate","_addDirtyEntity","_addAnimation","animationTime","_name","adapters","fold","_removeTemplateProperty","_userPrivateProperties","setPrivateRaw","_removeTemplatePrivateProperty","match","_findTemplateByKey","_findTemplateByPrivateKey","removePrivate","f","_rootContainer","name","other","seen","_eachTemplate","state","lookup","_apply","_userSettings","_templateDisposers","privateSettings","_runSetup","setup","_findStaticTemplate","eachReverse","_templates","_disposeTemplates","_applyTemplate","value_1","findReverse","find","_findTemplate","isConnected","defaults","themes","themeTags","Set","tags","tag","add","_walkParents","_defaultThemes","theme","concat","_removeTemplates","allRules","rules","_lookupRules","rule","matches","every","has","result","getFirstSortedIndex","order","compare","compareArray","splice","index","isDirty","prevId","entitiesById","_disposers","_","fn","delay","setTimeout","removeDispose","clearTimeout","hasTag","text","locale","rest","language","translate","apply","_a","__spreadArray","__read","Settings"],"sourceRoot":"","sources":["../../../../../src/.internal/core/util/Entity.ts"],"sourcesContent":["import type { Root } from \"../Root\";\nimport type { Template, ApplyState } from \"./Template\";\nimport type { Theme, IRule } from \"../Theme\";\nimport type { ILocale } from \"./Language\";\n\nimport { IDisposer, Disposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { Time, IAnimation, getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\n\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n\n/**\n * @ignore\n */\nexport type Dirty<A> = { [K in keyof A]?: boolean };\n\n\n/**\n * Allows to dynamically modify setting value of its target element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n */\nexport class Adapters<E extends Settings> {\n\tprivate _entity: E;\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\tprivate _disabled: { [K in keyof E[\"_settings\"]]?: boolean } = {};\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Add a function (`callback`) that will modify value for setting `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n\t */\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\tthis._entity._markDirtyKey(key);\n\n\t\treturn new Disposer(() => {\n\t\t\tif ($array.removeFirst(callbacks!, callback)) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes all adapters for the specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\n\t\t\tif (callbacks.length !== 0) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Enables (previously disabled) adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic enable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (this._disabled[key]) {\n\t\t\tdelete this._disabled[key];\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * Disables all adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic disable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (!this._disabled[key]) {\n\t\t\tthis._disabled[key] = true;\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fold<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]): E[\"_settings\"][Key] {\n\t\tif (!this._disabled[key]) {\n\t\t\tconst callbacks = this._callbacks[key];\n\n\t\t\tif (callbacks !== undefined) {\n\t\t\t\tfor (let i = 0, len = callbacks.length; i < len; ++i) {\n\t\t\t\t\tvalue = callbacks[i](value, this._entity, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n\nexport interface IEntitySettings {\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTags?: Array<string>;\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * These tags only apply to this object, not any children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTagsSelf?: Array<string>;\n\n\t/**\n\t * A list of themes applied to the element.\n\t */\n\tthemes?: Array<Theme>;\n\n\n\t/**\n\t * Duration of transition from one state to another.\n\t */\n\tstateAnimationDuration?:number;\n\n\t/**\n\t * Easing of transition from one state to another.\n\t */\n\tstateAnimationEasing?:$ease.Easing;\n\n\t/**\n\t * A custom string ID for the element.\n\t *\n\t * If set, element can be looked up via `am5.registry.entitiesById`.\n\t *\n\t * Will raise error if an element with the same ID already exists.\n\t */\n\tid?: string;\n\n\t/**\n\t * A storage for any custom user data that needs to be associated with the\n\t * element.\n\t */\n\tuserData?: any;\n\n}\n\nexport interface IEntityPrivate {\n}\n\nexport interface IEntityEvents {\n}\n\n/**\n * Animation options.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport interface AnimationOptions<Key, Value> {\n\n\t/**\n\t * A setting key to animate value for.\n\t */\n\tkey: Key,\n\n\t/**\n\t * Initial value to animate from. If not set, will use current value.\n\t */\n\tfrom?: Value;\n\n\t/**\n\t * Target value to animate to.\n\t */\n\tto: Value;\n\n\t/**\n\t * Animation duration in milliseconds.\n\t */\n\tduration: number;\n\n\t/**\n\t * Easing function. Defaults to linear.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\teasing?: $ease.Easing;\n\n\t/**\n\t * How many times to play the animation. Defaults to 1.\n\t */\n\tloops?: number;\n}\n\nexport interface IAnimationEvents {\n\t/**\n\t * Invoked when animation was stopped, which happens in these situations:\n\t * 1. When the animation reached the end.\n\t * 2. When the `stop()` method is called.\n\t * 3. When a new animation starts for the same key.\n\t * 4. When calling `set` for the same key.\n\t */\n\tstopped: {};\n}\n\n/**\n * Animation object.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport class Animation<Value> {\n\tprivate _animation: IStartAnimation;\n\tprivate _from: Value;\n\tprivate _to: Value;\n\tprivate _duration: number;\n\tprivate _easing: $ease.Easing;\n\tprivate _loops: number;\n\tprivate _interpolate: <A extends Value>(diff: Time, from: A, to: A) => A;\n\tprivate _oldTime: number | null;\n\tprivate _time: number = 0;\n\n\tpublic _stopped: boolean = false;\n\tpublic _playing: boolean = true;\n\n\tpublic events: EventDispatcher<Events<this, IAnimationEvents>> = new EventDispatcher();\n\n\tconstructor(animation: IStartAnimation, from: Value, to: Value, duration: number, easing: $ease.Easing, loops: number, startingTime: number | null) {\n\t\tthis._animation = animation;\n\t\tthis._from = from;\n\t\tthis._to = to;\n\t\tthis._duration = duration;\n\t\tthis._easing = easing;\n\t\tthis._loops = loops;\n\t\tthis._interpolate = getInterpolate(from, to);\n\t\tthis._oldTime = startingTime;\n\t}\n\n\tpublic get to() {\n\t\treturn this._to;\n\t}\n\n\tpublic get from() {\n\t\treturn this._from;\n\t}\n\n\tpublic get playing() {\n\t\treturn this._playing;\n\t}\n\n\tpublic get stopped() {\n\t\treturn this._stopped;\n\t}\n\n\tpublic stop(): void {\n\t\tif (!this._stopped) {\n\t\t\tthis._stopped = true;\n\t\t\tthis._playing = false;\n\n\t\t\tif (this.events.isEnabled(\"stopped\")) {\n\t\t\t\tthis.events.dispatch(\"stopped\", {\n\t\t\t\t\ttype: \"stopped\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic pause(): void {\n\t\tthis._playing = false;\n\t\tthis._oldTime = null;\n\t}\n\n\tpublic play(): void {\n\t\tif (!this._stopped && !this._playing) {\n\t\t\tthis._playing = true;\n\t\t\tthis._animation._startAnimation();\n\t\t}\n\t}\n\n\tpublic get percentage(): Time {\n\t\treturn this._time / this._duration;\n\t}\n\n\tpublic waitForStop(): Promise<void> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tif (this._stopped) {\n\t\t\t\tresolve();\n\n\t\t\t} else {\n\t\t\t\tconst listener = () => {\n\t\t\t\t\tstopped.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\n\t\t\t\tconst stopped = this.events.on(\"stopped\", listener);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _checkEnded(): boolean {\n\t\tif (this._loops > 1) {\n\t\t\t--this._loops;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic _run(currentTime: number): void {\n\t\tif (this._oldTime !== null) {\n\t\t\tthis._time += currentTime - this._oldTime;\n\n\t\t\tif (this._time > this._duration) {\n\t\t\t\tthis._time = this._duration;\n\t\t\t}\n\t\t}\n\n\t\tthis._oldTime = currentTime;\n\t}\n\n\tpublic _reset(currentTime: number): void {\n\t\tthis._oldTime = currentTime;\n\t\tthis._time = 0;\n\t}\n\n\tpublic _value(diff: Time): Value {\n\t\treturn this._interpolate(this._easing(diff), this._from, this._to);\n\t}\n}\n\ntype Animated<P> = { [K in keyof P]?: Animation<P[K]> };\n\n\ninterface IStartAnimation {\n\t_startAnimation(): void;\n}\n\n\n/**\n * @ignore\n */\nlet counter = 0;\n\n/**\n * Base class for [[Entity]] objects that support Settings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n */\nexport abstract class Settings implements IDisposer, IAnimation, IStartAnimation {\n\n\t/**\n\t * Unique ID.\n\t */\n\tpublic uid: number = ++counter;\n\n\tpublic _settings: {};\n\tpublic _privateSettings: {} = {};\n\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\n\tpublic _prevSettings: this[\"_settings\"] = {};\n\tpublic _prevPrivateSettings: this[\"_privateSettings\"] = {};\n\n\tprotected _animatingSettings: Animated<this[\"_settings\"]> = {};\n\tprotected _animatingPrivateSettings: Animated<this[\"_privateSettings\"]> = {};\n\n\tprivate _disposed: boolean = false;\n\n\t// TODO move this into Entity\n\tprotected _userProperties: Dirty<this[\"_settings\"]> = {};\n\n\tconstructor(settings: Settings[\"_settings\"]) {\n\t\tthis._settings = settings;\n\t}\n\n\tprotected _checkDirty(): void {\n\t\t$object.keys(this._settings).forEach((key) => {\n\t\t\t(this._userProperties as any)[key] = true;\n\t\t\tthis._markDirtyKey(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirty(): void;\n\n\tpublic _runAnimation(currentTime: number): boolean {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet playing = false;\n\n\t\t\t$object.each(this._animatingSettings, (key, animation) => {\n\t\t\t\tif (animation._stopped) {\n\t\t\t\t\tthis._stopAnimation(key);\n\n\t\t\t\t} else if (animation._playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.set(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._set(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._set(key, animation._value(diff));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._animatingPrivateSettings, (key, animation) => {\n\t\t\t\tif (animation._stopped) {\n\t\t\t\t\tthis._stopAnimationPrivate(key);\n\n\t\t\t\t} else if (animation._playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.setPrivate(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._setPrivate(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._setPrivate(key, animation._value(diff));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn playing;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic abstract _startAnimation(): void;\n\tprotected abstract _animationTime(): number | null;\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of settings changes\n\t * or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of private settings\n\t * changes or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @ignore\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._settings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return  {any}     Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\treturn this.getRaw(key, fallback);\n\t}\n\n\tprotected _sendKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._settingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _sendPrivateKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._privateSettingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevSettings[key] = old;\n\t\tthis._sendKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\t}\n\n\n\tprotected _stopAnimation<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst animation = this._animatingSettings[key];\n\n\t\tif (animation) {\n\t\t\tdelete this._animatingSettings[key];\n\t\t\tanimation.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._set(key, value);\n\t\tthis._stopAnimation(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tthis._prevSettings[key] = (<any>this._settings)[key];\n\n\t\t\tdelete (<any>this._settings)[key];\n\n\t\t\tthis._sendKeyEvent(key, undefined as any);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\n\t\tthis._stopAnimation(key);\n\t}\n\n\t/**\n\t * Removes all keys;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t */\n\tpublic removeAll(): void {\n\t\t$array.each($object.keys(this._settings), (key) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\n\t/**\n\t * Returns a value of a private setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._privateSettings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevPrivateSettings[key] = old;\n\t\tthis._sendPrivateKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\t}\n\n\tprotected _stopAnimationPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tconst animation = this._animatingPrivateSettings[key];\n\n\t\tif (animation) {\n\t\t\tanimation.stop();\n\t\t\tdelete this._animatingPrivateSettings[key];\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._setPrivate(key, value);\n\t\tthis._stopAnimationPrivate(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tthis._prevPrivateSettings[key] = (<any>this._privateSettings)[key];\n\n\t\t\tdelete (<any>this._privateSettings)[key];\n\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\n\t\tthis._stopAnimationPrivate(key);\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: Partial<this[\"_settings\"]>) {\n\t\t$object.each(settings, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t/**\n\t * Animates setting values from current/start values to new ones.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\n\t * @param   options  Animation options\n\t * @return           Animation object\n\t */\n\tpublic animate<Key extends keyof this[\"_settings\"]>(options: AnimationOptions<Key, this[\"_settings\"][Key]>): Animation<this[\"_settings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.get(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.set(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.set(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.set(key, from);\n\n\t\t\t\tconst animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic animatePrivate<Key extends keyof this[\"_privateSettings\"]>(options: AnimationOptions<Key, this[\"_privateSettings\"][Key]>): Animation<this[\"_privateSettings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.getPrivate(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.setPrivate(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.setPrivate(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.setPrivate(key, from);\n\n\t\t\t\tconst animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\tprotected _dispose() {}\n\n\t/**\n\t * Returns `true` if this element is disposed.\n\t *\n\t * @return Disposed\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes this object.\n\t */\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * Base class.\n *\n * @important\n */\nexport class Entity extends Settings implements IDisposer {\n\tpublic _root: Root;\n\n\tpublic _user_id:any; // for testing purposes\n\n\tdeclare public _settings: IEntitySettings;\n\tdeclare public _privateSettings: IEntityPrivate;\n\tdeclare public _events: IEntityEvents;\n\n\tpublic states: States<this> = new States(this);\n\tpublic adapters: Adapters<this> = new Adapters(this);\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = this._createEvents();\n\n\tprotected _userPrivateProperties: Dirty<this[\"_privateSettings\"]> = {};\n\n\tpublic _dirty: Dirty<this[\"_settings\"]> = {};\n\tpublic _dirtyPrivate: Dirty<this[\"_privateSettings\"]> = {};\n\n\tprotected _template: Template<this> | undefined;\n\n\t// Templates for the themes\n\tprotected _templates: Array<Template<this>> = [];\n\n\t// Internal templates which can be overridden by the user's templates\n\tprotected _internalTemplates: Array<Template<this>>;\n\n\t// Default themes which can be overridden by the user's themes\n\tpublic _defaultThemes: Array<Theme> = [];\n\n\t// Disposers for all of the templates\n\tprotected _templateDisposers: Array<IDisposer> = [];\n\n\tprotected _disposers: Array<IDisposer> = [];\n\n\t// Whether the template setup function should be run\n\tprotected _runSetup: boolean = true;\n\n\tpublic static className: string = \"Entity\";\n\tpublic static classNames: Array<string> = [\"Entity\"];\n\n\tprotected _disposerProperties: { [Key in keyof this[\"_settings\"]]?: Array<IDisposer> } = {};\n\n\t/**\n\t * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\n\t *\n\t * Use static method `Class.new()` instead.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @ignore\n\t */\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(settings);\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\t\tthis._root = root;\n\t\tthis._internalTemplates = templates as Array<Template<this>>;\n\n\t\tif (settings.id) {\n\t\t\tthis._registerId(settings.id);\n\t\t}\n\t}\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], template?: Template<T>): T {\n\t\tconst x = (new this(root, settings, true)) as T;\n\t\tx._template = template;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tstatic _new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], templates: Array<Template<T>> = []): T {\n\t\tconst x = (new this(root, settings, true, templates)) as T;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._checkDirty();\n\n\t\tlet shouldApply = false;\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tif (shouldApply) {\n\t\t\tthis._applyTemplates(false);\n\t\t}\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\t}\n\n\t// This is the same as _afterNew, except it also applies the themes.\n\t// This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n\tprotected _afterNewApplyThemes() {\n\t\tthis._checkDirty();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\n\t\tthis._applyThemes();\n\t}\n\n\tprotected _createEvents(): EventDispatcher<Events<this, this[\"_events\"]>> {\n\t\treturn new EventDispatcher();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get classNames(): Array<string> {\n\t\treturn (this.constructor as any).classNames;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get className(): string {\n\t\treturn (this.constructor as any).className;\n\t}\n\n\tprotected _setDefaults(){\n\n\t}\n\n\tpublic _setDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!(key in this._settings)) {\n\t\t\tsuper.set(key, value);\n\t\t}\n\t}\n\n\tpublic _setRawDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!(key in this._settings)) {\n\t\t\tsuper.setRaw(key, value);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tthis._dirty[key] = false;\n\t\t});\n\n\t\t$object.keys(this._dirtyPrivate).forEach((key) => {\n\t\t\tthis._dirtyPrivate[key] = false;\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDirty<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn !!this._dirty[key];\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isPrivateDirty<Key extends keyof this[\"_privateSettings\"]>(key: Key): boolean {\n\t\treturn !!this._dirtyPrivate[key];\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tthis._dirty[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tthis._dirtyPrivate[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\t/**\n\t * Checks if element is of certain class (or inherits one).\n\t *\n\t * @param   type  Class name to check\n\t * @return {boolean} Is of class?\n\t */\n\tpublic isType<A>(type: string): this is A {\n\t\treturn this.classNames.indexOf(type) !== -1;\n\t}\n\n\tprotected _pushPropertyDisposer<Key extends keyof this[\"_settings\"], D extends IDisposer>(key: Key, disposer: D): D {\n\t\tlet disposers = this._disposerProperties[key];\n\n\t\tif (disposers === undefined) {\n\t\t\tdisposers = this._disposerProperties[key] = [];\n\t\t}\n\n\t\tdisposers.push(disposer);\n\n\t\treturn disposer;\n\t}\n\n\tprotected _disposeProperty<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst disposers = this._disposerProperties[key];\n\n\t\tif (disposers !== undefined) {\n\t\t\t$array.each(disposers!, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\n\t\t\tdelete this._disposerProperties[key];\n\t\t}\n\t}\n\n\t/**\n\t * @todo needs description\n\t * @param  value  Template\n\t */\n\tpublic set template(value: Template<this> | undefined) {\n\t\tconst template = this._template;\n\n\t\tif (template !== value) {\n\t\t\tthis._template = value;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._removeObjectTemplate(this);\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tvalue._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\tpublic get template(): Template<this> | undefined {\n\t\treturn this._template;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tthis._root._addDirtyEntity(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this._root.animationTime;\n\t}\n\n\tpublic _applyState(_name: string): void { }\n\tpublic _applyStateAnimated(_name: string, _duration?: number): void { }\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this.adapters.fold(key, (<any>this._settings)[key]);\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userProperties[key] = true;\n\t\treturn super.set(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userProperties[key] = true;\n\t\tsuper.setRaw(key, value);\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic _setSoft<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tif(!this._userProperties[key]){\n\t\t\treturn super.set(key, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userProperties[key];\n\t\tthis._removeTemplateProperty(key);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userPrivateProperties[key] = true;\n\t\treturn super.setPrivate(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userPrivateProperties[key] = true;\n\t\tsuper.setPrivateRaw(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tdelete this._userPrivateProperties[key];\n\t\tthis._removeTemplatePrivateProperty(key);\n\t}\n\n\tpublic _setTemplateProperty<Key extends keyof this[\"_settings\"]>(template: Template<this>, key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(template: Template<this>, key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplateProperty<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.set(key, match._settings[key]!);\n\n\t\t\t} else {\n\t\t\t\tsuper.remove(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.setPrivate(key, match._privateSettings[key]);\n\n\t\t\t} else {\n\t\t\t\tsuper.removePrivate(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _walkParents(f: (parent: Entity) => void): void {\n\t\tf(this._root._rootContainer);\n\t\tf(this);\n\t}\n\n\t// TODO faster version of this method which is specialized to just 1 key\n\tpublic _applyStateByKey(name: string): void {\n\t\tconst other = this.states.create(name, {});\n\t\tconst seen: Dirty<this[\"_settings\"]> = {};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tconst state = template.states.lookup(name);\n\n\t\t\tif (state) {\n\t\t\t\tstate._apply(other, seen);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(other._settings, (key) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tother.remove(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _applyTemplate(template: Template<this>, state: ApplyState<this>): void {\n\t\tthis._templateDisposers.push(template._apply(this, state));\n\n\t\t$object.each(template._settings, (key, value) => {\n\t\t\tif (!state.settings[key] && !this._userProperties[key]) {\n\t\t\t\tstate.settings[key] = true;\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(template._privateSettings, (key, value) => {\n\t\t\tif (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\n\t\t\t\tstate.privateSettings[key] = true;\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t});\n\n\t\tif (this._runSetup && template.setup) {\n\t\t\tthis._runSetup = false;\n\t\t\ttemplate.setup(this);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the closure with each template and returns the first template which is true\n\t */\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tif (this._template) {\n\t\t\tif (f(this._template)) {\n\t\t\t\treturn this._template;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _eachTemplate(f: (template: Template<this>) => void): void {\n\t\tthis._findStaticTemplate((template) => {\n\t\t\tf(template);\n\t\t\treturn false;\n\t\t});\n\n\t\t// _internalTemplates is sorted with most specific to the right\n\t\t$array.eachReverse(this._internalTemplates, f);\n\n\t\t// _templates is sorted with most specific to the left\n\t\t$array.each(this._templates, f);\n\t}\n\n\tpublic _applyTemplates(remove: boolean = true): void {\n\t\tif (remove) {\n\t\t\tthis._disposeTemplates();\n\t\t}\n\n\t\tconst state: ApplyState<this> = {\n\t\t\tsettings: {},\n\t\t\tprivateSettings: {},\n\t\t\tstates: {},\n\t\t};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tthis._applyTemplate(template, state);\n\t\t});\n\n\t\tif (remove) {\n\t\t\t$object.each(this._settings, (key) => {\n\t\t\t\tif (!this._userProperties[key] && !state.settings[key]) {\n\t\t\t\t\tsuper.remove(key);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._privateSettings, (key) => {\n\t\t\t\tif (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\n\t\t\t\t\tsuper.removePrivate(key);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _findTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tconst value = this._findStaticTemplate(f);\n\n\t\tif (value === undefined) {\n\t\t\t// _internalTemplates is sorted with most specific to the right\n\t\t\tconst value = $array.findReverse(this._internalTemplates, f);\n\n\t\t\tif (value === undefined) {\n\t\t\t\t// _templates is sorted with most specific to the left\n\t\t\t\treturn $array.find(this._templates, f);\n\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprotected _findTemplateByKey<Key extends keyof this[\"_settings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._settings;\n\t\t});\n\t}\n\n\tprotected _findTemplateByPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._privateSettings;\n\t\t});\n\t}\n\n\tprotected _disposeTemplates() {\n\t\t$array.each(this._templateDisposers, (disposer) => {\n\t\t\tdisposer.dispose();\n\t\t});\n\n\t\tthis._templateDisposers.length = 0;\n\t}\n\n\tprotected _removeTemplates() {\n\t\t$array.each(this._templates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._templates.length = 0;\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tlet isConnected = false;\n\n\t\tconst defaults: Array<Array<Theme>> = [];\n\n\t\tlet themes: Array<Array<Theme>> = [];\n\n\t\tconst themeTags: Set<string> = new Set();\n\n\t\tconst tags = this.get(\"themeTagsSelf\");\n\n\t\tif (tags) {\n\t\t\t$array.each(tags, (tag) => {\n\t\t\t\tthemeTags.add(tag);\n\t\t\t});\n\t\t}\n\n\t\tthis._walkParents((entity) => {\n\t\t\tif (entity === this._root._rootContainer) {\n\t\t\t\tisConnected = true;\n\t\t\t}\n\n\t\t\tif (entity._defaultThemes.length > 0) {\n\t\t\t\tdefaults.push(entity._defaultThemes);\n\t\t\t}\n\n\t\t\tconst theme = entity.get(\"themes\");\n\n\t\t\tif (theme) {\n\t\t\t\tthemes.push(theme);\n\t\t\t}\n\n\t\t\tconst tags = entity.get(\"themeTags\");\n\n\t\t\tif (tags) {\n\t\t\t\t$array.each(tags, (tag) => {\n\t\t\t\t\tthemeTags.add(tag);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthemes = defaults.concat(themes);\n\n\t\tthis._removeTemplates();\n\n\t\tif (isConnected) {\n\t\t\t$array.eachReverse(this.classNames, (name) => {\n\t\t\t\tconst allRules: Array<IRule<this>> = [];\n\n\t\t\t\t$array.each(themes, (themes) => {\n\t\t\t\t\t$array.each(themes, (theme) => {\n\t\t\t\t\t\tconst rules = theme._lookupRules<this>(name);\n\n\t\t\t\t\t\tif (rules) {\n\t\t\t\t\t\t\t$array.eachReverse(rules, (rule) => {\n\t\t\t\t\t\t\t\tconst matches = rule.tags.every((tag) => {\n\t\t\t\t\t\t\t\t\treturn themeTags.has(tag);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\t\tconst result = $array.getFirstSortedIndex(allRules, (x) => {\n\t\t\t\t\t\t\t\t\t\tconst order = $order.compare(rule.tags.length, x.tags.length);\n\n\t\t\t\t\t\t\t\t\t\tif (order === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn $order.compareArray(rule.tags, x.tags, $order.compare);\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn order;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tallRules.splice(result.index, 0, rule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$array.each(allRules, (rule) => {\n\t\t\t\t\tthis._templates.push(rule.template);\n\t\t\t\t\trule.template._setObjectTemplate(this);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tthis._applyTemplates();\n\n\t\tif (isConnected) {\n\t\t\t// This causes it to only run the setup function the first time that the themes are applied\n\t\t\tthis._runSetup = false;\n\t\t}\n\n\t\treturn isConnected;\n\t}\n\n\tpublic _changed(): void { }\n\n\tpublic _beforeChanged(): void {\n\n\t\tif (this.isDirty(\"id\")) {\n\t\t\tconst id = this.get(\"id\")!;\n\t\t\tif (id) {\n\t\t\t\tthis._registerId(id);\n\t\t\t}\n\n\t\t\tconst prevId = this._prevSettings.id;\n\t\t\tif(prevId) {\n\t\t\t\tdelete registry.entitiesById[prevId];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _registerId(id: string): void {\n\t\tif (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\n\t\t\tthrow new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n\t\t}\n\t\tregistry.entitiesById[id] = this;\n\t}\n\n\tpublic _afterChanged(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._removeTemplates();\n\t\tthis._disposeTemplates();\n\n\t\tthis.events.dispose();\n\n\t\tthis._disposers.forEach((x) => {\n\t\t\tx.dispose();\n\t\t});\n\n\t\t$object.each(this._disposerProperties, (_, disposers) => {\n\t\t\t$array.each(disposers, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t});\n\n\t\tconst id = this.get(\"id\")!;\n\t\tif (id) {\n\t\t\tdelete registry.entitiesById[id];\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a \"disposable\" timeout.\n\t *\n\t * @param   fn     Callback\n\t * @param   delay  Delay in milliseconds\n\t * @return         Timeout disposer\n\t */\n\tpublic setTimeout(fn: () => void, delay: number): IDisposer {\n\t\tconst id = setTimeout(() => {\n\t\t\tthis.removeDispose(disposer);\n\t\t\tfn();\n\t\t}, delay);\n\n\t\tconst disposer = new Disposer(() => {\n\t\t\tclearTimeout(id);\n\t\t});\n\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeDispose(target: IDisposer): void {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet index = $array.indexOf(this._disposers, target);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._disposers.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\ttarget.dispose();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hasTag(tag: string): boolean {\n\t\treturn $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addTag(tag: string): void {\n\t\tif (!this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\ttags.push(tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeTag(tag: string): void {\n\t\tif (this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\t$array.remove(tags, tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\tprotected _t(text: any, locale?: ILocale, ...rest: Array<string>){\n\t\treturn this._root.language.translate(text, locale, ...rest);\n\t}\n\n\t/**\n\t * An instance of [[Root]] object.\n\t *\n\t * @readonly\n\t * @since 5.0.6\n\t * @return Root object\n\t */\n\tpublic get root(): Root {\n\t\treturn this._root;\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}