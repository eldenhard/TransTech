{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'MultiSelect',\n  props: {\n    selected: {\n      type: Array\n    },\n    variants: {\n      type: [Array, Object],\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      show: false,\n      checked: null\n    };\n  },\n\n  methods: {\n    checkSelected(id) {\n      return this.selected.includes(id);\n    },\n\n    change(v) {\n      if (this.checkSelected(v.id)) {\n        this.selected.slice(this.selected.indexOf(v.id), 1);\n      } else {\n        this.selected.push(v.id);\n      }\n\n      this.update();\n    },\n\n    update() {\n      this.$emit('change', this.selected);\n    },\n\n    showCheckboxes() {\n      this.show = true;\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAgEA;EACAA,mBADA;EAEAC;IACAC;MACAC;IADA,CADA;IAIAC;MACAD,qBADA;MAEAE;IAFA;EAJA,CAFA;;EAYAC;IACA;MACAC,WADA;MAEAC;IAFA;EAIA,CAjBA;;EAkBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MACA;IACA,CAXA;;IAYAC;MACA;IACA,CAdA;;IAeAC;MACA;IAEA;;EAlBA;AAlBA","names":["name","props","selected","type","variants","required","data","show","checked","methods","checkSelected","change","update","showCheckboxes"],"sourceRoot":"src/components/ui","sources":["MultiSelect.vue"],"sourcesContent":["<template>\r\n    \r\n        <div class=\"multipleSelection\">\r\n            <div class=\"selectBox\" \r\n                @click=\"showCheckboxes()\">\r\n                <select>\r\n                    <option>Сотрудник</option>\r\n                </select>\r\n                <div class=\"overSelect\"></div>\r\n            </div>\r\n  \r\n            <div id=\"checkBoxes\" v-if=\"show\">\r\n                <label :for=\"'v'+v.id\" v-for=\"v in variants\" :key=\"v.id\">\r\n                    <input type=\"checkbox\" :id=\"'v'+v.id\" @change=\"change(v)\" :checked=\"checkSelected(v.id)\"/> \r\n                    {{v.first_name}} {{v.last_name}}\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n</template>\r\n\r\n<style>\r\n.multipleSelection {\r\n            width: 90% !important;\r\n            position: relative;\r\n            left: 50%;\r\n            transform: translate(-50%,0);\r\n        }\r\n  \r\n        .selectBox {\r\n            position: relative;\r\n        }\r\n  \r\n        .selectBox select {\r\n            width: 100%;\r\n            font-weight: bold;\r\n        }\r\n  \r\n        .overSelect {\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            top: 0;\r\n            bottom: 0;\r\n        }\r\n  \r\n        #checkBoxes {\r\n            border: 1px #8DF5E4 solid;\r\n            height: 150px;\r\n            overflow-y: auto;\r\n        }\r\n  \r\n        #checkBoxes label {\r\n            display: block;\r\n            text-align: left;\r\n            font-size: 11px;\r\n        }\r\n        #checkBoxes input {\r\n            text-align: left;\r\n        }\r\n</style>\r\n\r\n<script>\r\n\r\nexport default {\r\n    name: 'MultiSelect',\r\n    props: {\r\n        selected : {\r\n            type: Array\r\n        },\r\n        variants: {\r\n            type: [Array, Object],\r\n            required : true\r\n        },\r\n        \r\n    },\r\n    data(){\r\n        return {\r\n            show: false,\r\n            checked: null\r\n        }\r\n    },\r\n    methods:{\r\n        checkSelected(id){\r\n            return this.selected.includes(id)\r\n        },\r\n        change(v){\r\n            if(this.checkSelected(v.id)){\r\n                this.selected.slice(this.selected.indexOf(v.id), 1)\r\n            }else{\r\n                this.selected.push(v.id)\r\n            }\r\n            this.update()\r\n        },\r\n        update(){\r\n            this.$emit('change', this.selected)\r\n        },\r\n        showCheckboxes(){\r\n            this.show = true\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}