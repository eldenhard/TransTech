{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends, __read } from \"tslib\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\n\nvar Axis =\n/** @class */\nfunction (_super) {\n  __extends(Axis, _super);\n\n  function Axis() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_series\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_isPanning\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A [[Container]] that holds all the axis label elements.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"labelsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A [[Container]] that holds all the axis grid and fill elements.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"gridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100\n      })\n    });\n    /**\r\n     * A [[Container]] that holds axis grid elements which goes above the series.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"topGridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100\n      })\n    });\n    /**\r\n     * A [[Container]] that holds all the axis bullet elements.\r\n     *\r\n     * @default new Container\r\n     */\n\n    Object.defineProperty(_this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {\n        isMeasured: false,\n        width: p100,\n        height: p100,\n        position: \"absolute\"\n      }))\n    });\n    /**\r\n     * A referenece to the the chart the axis belongs to.\r\n     */\n\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_rangesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_panStart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_panEnd\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_sAnimation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_eAnimation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_skipSync\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A list of axis ranges.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @default new List()\r\n     */\n\n    Object.defineProperty(_this, \"axisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    Object.defineProperty(_this, \"_seriesAxisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    /**\r\n     * A control label that is invisible but is used to keep width the width of\r\n     * the axis constant.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n     */\n\n    Object.defineProperty(_this, \"ghostLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_cursorPosition\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: -1\n    });\n    Object.defineProperty(_this, \"_snapToSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_seriesValuesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A container above the axis that can be used to add additional stuff into\r\n     * it. For example a legend, label, or an icon.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n     * @default new Container\r\n     */\n\n    Object.defineProperty(_this, \"axisHeader\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {\n        themeTags: [\"axis\", \"header\"],\n        position: \"absolute\",\n        background: Rectangle.new(_this._root, {\n          themeTags: [\"header\", \"background\"],\n          fill: _this._root.interfaceColors.get(\"background\")\n        })\n      }))\n    });\n    Object.defineProperty(_this, \"_bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Axis.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // these could be in other parents, so disposing just in case\n      this.gridContainer.dispose();\n      this.topGridContainer.dispose();\n      this.bulletsContainer.dispose();\n      this.labelsContainer.dispose();\n      this.axisHeader.dispose();\n\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._afterNew.call(this);\n\n      this.setPrivate(\"updateScrollbar\", true);\n\n      this._disposers.push(this.axisRanges.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          $array.each(change.oldValues, function (dataItem) {\n            _this.disposeDataItem(dataItem);\n          });\n        } else if (change.type === \"push\") {\n          _this._processAxisRange(change.newValue, [\"range\"]);\n        } else if (change.type === \"setIndex\") {\n          _this._processAxisRange(change.newValue, [\"range\"]);\n        } else if (change.type === \"insertIndex\") {\n          _this._processAxisRange(change.newValue, [\"range\"]);\n        } else if (change.type === \"removeIndex\") {\n          _this.disposeDataItem(change.oldValue);\n        } else if (change.type === \"moveIndex\") {\n          _this._processAxisRange(change.value, [\"range\"]);\n        } else {\n          throw new Error(\"Unknown IStreamEvent type\");\n        }\n      }));\n\n      var renderer = this.get(\"renderer\");\n\n      if (renderer) {\n        renderer.axis = this;\n        renderer.processAxis();\n      }\n\n      this.children.push(renderer);\n      this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n      this.ghostLabel.adapters.disable(\"text\");\n      this.ghostLabel.set(\"opacity\", 0);\n    }\n  });\n  /**\r\n   * Zooms the axis to relative locations.\r\n   *\r\n   * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n   *\r\n   * @param   start     Relative start\r\n   * @param   end       Relative end\r\n   * @param   duration  Duration of the zoom animation in milliseconds\r\n   * @return            Zoom animation\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"zoom\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (start, end, duration, priority) {\n      var _a;\n\n      var _this = this;\n\n      if (this.get(\"start\") !== start || this.get(\"end\") != end) {\n        var sAnimation = this._sAnimation;\n        var eAnimation = this._eAnimation;\n        var maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, end - start);\n\n        if (start < -maxDeviation) {\n          start = -maxDeviation;\n        }\n\n        if (end > 1 + maxDeviation) {\n          end = 1 + maxDeviation;\n        }\n\n        if (start > end) {\n          _a = __read([end, start], 2), start = _a[0], end = _a[1];\n        }\n\n        if (!$type.isNumber(duration)) {\n          duration = this.get(\"interpolationDuration\", 0);\n        }\n\n        if (!priority) {\n          priority = \"end\";\n        }\n\n        var maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n        var maxZoomFactorReal = maxZoomFactor;\n\n        if (end === 1 && start !== 0) {\n          if (start < this.get(\"start\")) {\n            priority = \"start\";\n          } else {\n            priority = \"end\";\n          }\n        }\n\n        if (start === 0 && end !== 1) {\n          if (end > this.get(\"end\")) {\n            priority = \"end\";\n          } else {\n            priority = \"start\";\n          }\n        }\n\n        var minZoomCount = this.get(\"minZoomCount\");\n        var maxZoomCount = this.get(\"maxZoomCount\");\n\n        if ($type.isNumber(minZoomCount)) {\n          maxZoomFactor = maxZoomFactorReal / minZoomCount;\n        }\n\n        var minZoomFactor = 1;\n\n        if ($type.isNumber(maxZoomCount)) {\n          minZoomFactor = maxZoomFactorReal / maxZoomCount;\n        } // most likely we are dragging left scrollbar grip here, so we tend to modify end\n\n\n        if (priority === \"start\") {\n          if (maxZoomCount > 0) {\n            // add to the end\n            if (1 / (end - start) < minZoomFactor) {\n              end = start + 1 / minZoomFactor;\n            }\n          } // add to the end\n\n\n          if (1 / (end - start) > maxZoomFactor) {\n            end = start + 1 / maxZoomFactor;\n          } //unless end is > 0\n\n\n          if (end > 1 && end - start < 1 / maxZoomFactor) {\n            //end = 1;\n            start = end - 1 / maxZoomFactor;\n          }\n        } // most likely we are dragging right, so we modify left\n        else {\n          if (maxZoomCount > 0) {\n            // add to the end\n            if (1 / (end - start) < minZoomFactor) {\n              start = end - 1 / minZoomFactor;\n            }\n          } // remove from start\n\n\n          if (1 / (end - start) > maxZoomFactor) {\n            start = end - 1 / maxZoomFactor;\n          }\n\n          if (start < 0 && end - start < 1 / maxZoomFactor) {\n            //start = 0;\n            end = start + 1 / maxZoomFactor;\n          }\n        }\n\n        if (1 / (end - start) > maxZoomFactor) {\n          end = start + 1 / maxZoomFactor;\n        }\n\n        if (1 / (end - start) > maxZoomFactor) {\n          start = end - 1 / maxZoomFactor;\n        }\n\n        if (maxZoomCount != null && minZoomCount != null && start == this.get(\"start\") && end == this.get(\"end\")) {\n          var chart = this.chart;\n\n          if (chart) {\n            chart._handleAxisSelection(this, true);\n          }\n        }\n\n        if ((sAnimation && sAnimation.playing && sAnimation.to == start || this.get(\"start\") == start) && (eAnimation && eAnimation.playing && eAnimation.to == end || this.get(\"end\") == end)) {\n          return;\n        }\n\n        if (duration > 0) {\n          var easing = this.get(\"interpolationEasing\");\n          var sAnimation_1, eAnimation_1;\n\n          if (this.get(\"start\") != start) {\n            sAnimation_1 = this.animate({\n              key: \"start\",\n              to: start,\n              duration: duration,\n              easing: easing\n            });\n          }\n\n          if (this.get(\"end\") != end) {\n            eAnimation_1 = this.animate({\n              key: \"end\",\n              to: end,\n              duration: duration,\n              easing: easing\n            });\n          }\n\n          this._sAnimation = sAnimation_1;\n          this._eAnimation = eAnimation_1;\n\n          if (sAnimation_1) {\n            return sAnimation_1;\n          } else if (eAnimation_1) {\n            return eAnimation_1;\n          }\n        } else {\n          this.set(\"start\", start);\n          this.set(\"end\", end); // otherwise bullets and line out of sync, as series is not redrawn\n\n          this._root.events.once(\"frameended\", function () {\n            _this._markDirtyKey(\"start\");\n\n            _this._root._markDirty();\n          });\n        }\n      } else {\n        if (this._sAnimation) {\n          this._sAnimation.stop();\n        }\n\n        if (this._eAnimation) {\n          this._eAnimation.stop();\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"series\", {\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\n    get: function () {\n      return this._series;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      dataItem.setRaw(\"isRange\", true);\n\n      this._createAssets(dataItem, themeTags);\n\n      this._rangesDirty = true;\n\n      this._prepareDataItem(dataItem);\n\n      var above = dataItem.get(\"above\");\n      var container = this.topGridContainer;\n      var grid = dataItem.get(\"grid\");\n\n      if (above && grid) {\n        container.children.moveValue(grid);\n      }\n\n      var fill = dataItem.get(\"axisFill\");\n\n      if (above && fill) {\n        container.children.moveValue(fill);\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_prepareDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem, _index) {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"markDirtyExtremes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"markDirtySelectionExtremes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Axis.prototype, \"_calculateTotals\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Axis.prototype, \"_updateAxisRanges\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this._bullets = {};\n      this.axisRanges.each(function (axisRange) {\n        _this._prepareDataItem(axisRange);\n      });\n      $array.each(this._seriesAxisRanges, function (axisRange) {\n        _this._prepareDataItem(axisRange);\n      });\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n\n      if (this.get(\"fixAxisSize\")) {\n        this.ghostLabel.set(\"visible\", true);\n      } else {\n        this.ghostLabel.set(\"visible\", false);\n      }\n\n      if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n        this.chart._updateCursor();\n\n        var start = this.get(\"start\", 0);\n        var end = this.get(\"end\", 1);\n        var maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, end - start);\n\n        if (start < -maxDeviation) {\n          var delta = start + maxDeviation;\n          start = -maxDeviation;\n          this.setRaw(\"start\", start);\n\n          if (this.isDirty(\"end\")) {\n            this.setRaw(\"end\", end - delta);\n          }\n        }\n\n        if (end > 1 + maxDeviation) {\n          var delta = end - 1 - maxDeviation;\n          end = 1 + maxDeviation;\n          this.setRaw(\"end\", end);\n\n          if (this.isDirty(\"start\")) {\n            this.setRaw(\"start\", start - delta);\n          }\n        }\n      }\n\n      var renderer = this.get(\"renderer\");\n      renderer._start = this.get(\"start\");\n      renderer._end = this.get(\"end\");\n      renderer._inversed = renderer.get(\"inversed\", false);\n      renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\n      renderer._updateLC();\n\n      if (this.isDirty(\"tooltip\")) {\n        var tooltip = this.get(\"tooltip\");\n\n        if (tooltip) {\n          var rendererTags = renderer.get(\"themeTags\");\n          tooltip.addTag(\"axis\");\n          tooltip.addTag(this.className.toLowerCase());\n\n          tooltip._applyThemes();\n\n          if (rendererTags) {\n            tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\n            tooltip.label._applyThemes();\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateTooltipBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.get(\"tooltip\");\n\n      if (tooltip) {\n        this.get(\"renderer\").updateTooltipBounds(tooltip);\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateBounds.call(this);\n\n      this._updateTooltipBounds();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"processChart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (chart) {\n      var _this = this;\n\n      this.chart = chart;\n      var renderer = this.get(\"renderer\");\n      renderer.chart = chart;\n      chart.gridContainer.children.push(this.gridContainer);\n      chart.topGridContainer.children.push(this.topGridContainer);\n      chart.axisHeadersContainer.children.push(this.axisHeader);\n      this.on(\"start\", function () {\n        chart._handleAxisSelection(_this);\n      });\n      this.on(\"end\", function () {\n        chart._handleAxisSelection(_this);\n      });\n      chart.plotContainer.onPrivate(\"width\", function () {\n        _this.markDirtySize();\n      });\n      chart.plotContainer.onPrivate(\"height\", function () {\n        _this.markDirtySize();\n      });\n      chart.processAxis(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      this._toggleDataItem(dataItem, false);\n\n      return _super.prototype.hideDataItem.call(this, dataItem);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      this._toggleDataItem(dataItem, true);\n\n      return _super.prototype.showDataItem.call(this, dataItem);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_toggleDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, visible) {\n      var label = dataItem.get(\"label\");\n\n      if (label) {\n        label.setPrivate(\"visible\", visible);\n      }\n\n      var grid = dataItem.get(\"grid\");\n\n      if (grid) {\n        grid.setPrivate(\"visible\", visible);\n      }\n\n      var tick = dataItem.get(\"tick\");\n\n      if (tick) {\n        tick.setPrivate(\"visible\", visible);\n      }\n\n      var axisFill = dataItem.get(\"axisFill\");\n\n      if (axisFill) {\n        axisFill.setPrivate(\"visible\", visible);\n      }\n\n      var bullet = dataItem.get(\"bullet\");\n\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n\n        if (sprite) {\n          sprite.setPrivate(\"visible\", visible);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_createAssets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, tags) {\n      var renderer = this.get(\"renderer\");\n\n      if (!dataItem.get(\"label\")) {\n        renderer.makeLabel(dataItem, tags);\n      }\n\n      if (!dataItem.get(\"grid\")) {\n        renderer.makeGrid(dataItem, tags);\n      }\n\n      if (!dataItem.get(\"tick\")) {\n        renderer.makeTick(dataItem, tags);\n      }\n\n      if (!dataItem.get(\"axisFill\")) {\n        renderer.makeAxisFill(dataItem, tags);\n      }\n\n      this._processBullet(dataItem);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_processBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var bullet = dataItem.get(\"bullet\");\n      var axisBullet = this.get(\"bullet\");\n\n      if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n        bullet = axisBullet(this._root, this, dataItem);\n      }\n\n      if (bullet) {\n        bullet.axis = this;\n        var sprite = bullet.get(\"sprite\");\n\n        if (sprite) {\n          sprite._setDataItem(dataItem);\n\n          dataItem.setRaw(\"bullet\", bullet);\n\n          if (!sprite.parent) {\n            this.bulletsContainer.children.push(sprite);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_afterChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterChanged.call(this);\n\n      var chart = this.chart;\n\n      if (chart) {\n        chart._updateChartLayout();\n\n        chart.axisHeadersContainer.markDirtySize();\n      }\n\n      this.get(\"renderer\")._updatePositions();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n\n      var renderer = this.get(\"renderer\");\n      var label = dataItem.get(\"label\");\n\n      if (label) {\n        renderer.labels.removeValue(label);\n        label.dispose();\n      }\n\n      var tick = dataItem.get(\"tick\");\n\n      if (tick) {\n        renderer.ticks.removeValue(tick);\n        tick.dispose();\n      }\n\n      var grid = dataItem.get(\"grid\");\n\n      if (grid) {\n        renderer.grid.removeValue(grid);\n        grid.dispose();\n      }\n\n      var axisFill = dataItem.get(\"axisFill\");\n\n      if (axisFill) {\n        renderer.axisFills.removeValue(axisFill);\n        axisFill.dispose();\n      }\n\n      var bullet = dataItem.get(\"bullet\");\n\n      if (bullet) {\n        bullet.dispose();\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateGhost\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var ghostLabel = this.ghostLabel;\n\n      if (!ghostLabel.isHidden()) {\n        var bounds = ghostLabel.localBounds();\n        var gWidth_1 = bounds.right - bounds.left;\n        var text_1 = ghostLabel.get(\"text\");\n        $array.each(this.dataItems, function (dataItem) {\n          var label = dataItem.get(\"label\");\n\n          if (label && !label.isHidden()) {\n            var bounds_1 = label.localBounds();\n            var w = bounds_1.right - bounds_1.left;\n\n            if (w > gWidth_1) {\n              text_1 = label.text._getText();\n            }\n          }\n        });\n        ghostLabel.set(\"text\", text_1);\n      }\n\n      var start = this.get(\"start\", 0);\n      var end = this.get(\"end\", 1);\n      this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_handleCursorPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position, snapToSeries) {\n      var renderer = this.get(\"renderer\");\n      position = renderer.toAxisPosition(position);\n      this._cursorPosition = position;\n      this._snapToSeries = snapToSeries;\n      this.updateTooltip();\n    }\n  });\n  /**\r\n   * Can be called when axis zoom changes and you need to update tooltip\r\n   * position.\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"updateTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var snapToSeries = this._snapToSeries;\n      var position = this._cursorPosition;\n      var tooltip = this.get(\"tooltip\");\n      var renderer = this.get(\"renderer\");\n\n      if ($type.isNumber(position)) {\n        $array.each(this.series, function (series) {\n          if (series.get(\"baseAxis\") === _this) {\n            var dataItem = _this.getSeriesItem(series, position, _this.get(\"tooltipLocation\"));\n\n            series.setRaw(\"tooltipDataItem\", dataItem);\n\n            if (snapToSeries && snapToSeries.indexOf(series) != -1) {\n              series.updateLegendMarker(dataItem);\n              series.updateLegendValue(dataItem);\n            } else {\n              series.showDataItemTooltip(dataItem);\n            }\n          }\n        });\n\n        if (tooltip) {\n          renderer.updateTooltipBounds(tooltip);\n\n          if (this.get(\"snapTooltip\")) {\n            position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n          }\n\n          if (!$type.isNaN(position)) {\n            this.setPrivateRaw(\"tooltipPosition\", position);\n\n            this._updateTooltipText(tooltip, position);\n\n            renderer.positionTooltip(tooltip, position);\n\n            if (position < this.get(\"start\") || position > this.get(\"end\")) {\n              tooltip.hide(0);\n            } else {\n              tooltip.show(0);\n            }\n          } else {\n            tooltip.hide(0);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateTooltipText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, position) {\n      tooltip.label.set(\"text\", this.getTooltipText(position));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"roundAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position, _location) {\n      return position;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"handleCursorShow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.get(\"tooltip\");\n\n      if (tooltip) {\n        tooltip.show();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"handleCursorHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.get(\"tooltip\");\n\n      if (tooltip) {\n        tooltip.hide();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"processSeriesDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem, _fields) {}\n  });\n  Object.defineProperty(Axis.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n\n      this._sizeDirty = false;\n      this._rangesDirty = false;\n    }\n  });\n  /**\r\n   * Converts pixel coordinate to a relative position on axis.\r\n   *\r\n   * @param   coordinate  Coordinate\r\n   * @return              Relative position\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"coordinateToPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (coordinate) {\n      var renderer = this.get(\"renderer\");\n      return renderer.toAxisPosition(coordinate / renderer.axisLength());\n    }\n  });\n  /**\r\n   * Converts relative position of the plot area to relative position of the\r\n   * axis with zoom taken into account.\r\n   *\r\n   * @param position Position\r\n   * @return Relative position\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"toAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      return this.get(\"renderer\").toAxisPosition(position);\n    }\n  });\n  /**\r\n   * Adjusts position with inversed taken into account.\r\n   *\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"fixPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      return this.get(\"renderer\").fixPosition(position);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"shouldGap\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem, _nextItem, _autoGapCount, _fieldName) {\n      return false;\n    }\n  });\n  /**\r\n   * Creates and returns an axis range object.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n   * @param   axisDataItem  Axis data item\r\n   * @return                Axis range\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"createAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisDataItem) {\n      return this.axisRanges.push(axisDataItem);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"_groupSeriesData\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_series) {}\n  });\n  /**\r\n   * Returns position span between start and end of a single cell in axis.\r\n   *\r\n   * @since 5.2.30\r\n   * @return Position\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Axis.prototype, \"getCellWidthPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return 0.05;\n    }\n  });\n  Object.defineProperty(Axis, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Axis\"\n  });\n  Object.defineProperty(Axis, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Component.classNames.concat([Axis.className])\n  });\n  return Axis;\n}(Component);\n\nexport { Axis };","map":{"version":3,"mappings":";;AAYA,SAASA,QAAT,QAAyB,gCAAzB;AACA,SAASC,SAAT,QAAuG,gCAAvG;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AAEA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,yBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;AA6NA;;;;;;AAKA;AAAA;AAAA;EAA2DC;;EAA3D;IAAA;;IAWCC;sBAAA;wBAAA;oBAAA;aAAgD;IAAhD;IAEAA;sBAAA;wBAAA;oBAAA;aAA6B;IAA7B;IAEA;;;;;;IAKAA;sBAAA;wBAAA;oBAAA;aAA6CC,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBX,SAAS,CAACY,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B,EAA1B,CAAnB;IAA7C;IAEA;;;;;;IAKAL;sBAAA;wBAAA;oBAAA;aAA2CR,SAAS,CAACY,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B;QAAEC,KAAK,EAAEb,IAAT;QAAec,MAAM,EAAEd;MAAvB,CAA1B;IAA3C;IAEA;;;;;;IAKAO;sBAAA;wBAAA;oBAAA;aAA8CR,SAAS,CAACY,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B;QAAEC,KAAK,EAAEb,IAAT;QAAec,MAAM,EAAEd;MAAvB,CAA1B;IAA9C;IAEA;;;;;;IAKAO;sBAAA;wBAAA;oBAAA;aAA8CC,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBX,SAAS,CAACY,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B;QAAEG,UAAU,EAAE,KAAd;QAAqBF,KAAK,EAAEb,IAA5B;QAAkCc,MAAM,EAAEd,IAA1C;QAAgDgB,QAAQ,EAAE;MAA1D,CAA1B,CAAnB;IAA9C;IAEA;;;;IAGAT;sBAAA;wBAAA;oBAAA;;IAAA;IAEAA;sBAAA;wBAAA;oBAAA;aAAkC;IAAlC;IAEAA;sBAAA;wBAAA;oBAAA;aAA2B;IAA3B;IACAA;sBAAA;wBAAA;oBAAA;aAAyB;IAAzB;IAEAA;sBAAA;wBAAA;oBAAA;;IAAA;IACAA;sBAAA;wBAAA;oBAAA;;IAAA;IAEAA;sBAAA;wBAAA;oBAAA;aAA4B;IAA5B;IAEA;;;;;;;IAMAA;sBAAA;wBAAA;oBAAA;aAAwE,IAAIN,IAAJ;IAAxE;IAEAM;sBAAA;wBAAA;oBAAA;aAAuE;IAAvE;IAEA;;;;;;;IAMAA;sBAAA;wBAAA;oBAAA;;IAAA;IAEAA;sBAAA;wBAAA;oBAAA;aAAoC,CAAC;IAArC;IAEAA;sBAAA;wBAAA;oBAAA;;IAAA;IAEAA;sBAAA;wBAAA;oBAAA;aAA4B;IAA5B;IAEA;;;;;;;;IAOAA;sBAAA;wBAAA;oBAAA;aAA+BC,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBX,SAAS,CAACY,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B;QAC3EK,SAAS,EAAE,CAAC,MAAD,EAAS,QAAT,CADgE;QAE3ED,QAAQ,EAAE,UAFiE;QAG3EE,UAAU,EAAEhB,SAAS,CAACS,GAAV,CAAcH,KAAI,CAACI,KAAnB,EAA0B;UACrCK,SAAS,EAAE,CAAC,QAAD,EAAW,YAAX,CAD0B;UAErCE,IAAI,EAAEX,KAAI,CAACI,KAAL,CAAWQ,eAAX,CAA2BC,GAA3B,CAA+B,YAA/B;QAF+B,CAA1B;MAH+D,CAA1B,CAAnB;IAA/B;IASAd;sBAAA;wBAAA;oBAAA;aAAmD;IAAnD;;EA4vBA;;;;;;WA1vBA;MACC;MACA,KAAKe,aAAL,CAAmBC,OAAnB;MACA,KAAKC,gBAAL,CAAsBD,OAAtB;MACA,KAAKE,gBAAL,CAAsBF,OAAtB;MACA,KAAKG,eAAL,CAAqBH,OAArB;MACA,KAAKI,UAAL,CAAgBJ,OAAhB;;MACAK,iBAAMC,QAAN,CAAcC,IAAd,CAAc,IAAd;IACA;;;;;;WAED;MAAA;;MACCF,iBAAMG,SAAN,CAAeD,IAAf,CAAe,IAAf;;MAEA,KAAKE,UAAL,CAAgB,iBAAhB,EAAmC,IAAnC;;MAEA,KAAKC,UAAL,CAAgBvB,IAAhB,CAAqB,KAAKwB,UAAL,CAAgBC,MAAhB,CAAuBC,KAAvB,CAA6B,UAACC,MAAD,EAAO;QACxD,IAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;UAC5BnC,MAAM,CAACoC,IAAP,CAAYF,MAAM,CAACG,SAAnB,EAA8B,UAACC,QAAD,EAAS;YACtCjC,KAAI,CAACkC,eAAL,CAAqBD,QAArB;UACA,CAFD;QAGA,CAJD,MAIO,IAAIJ,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;UAClC9B,KAAI,CAACmC,iBAAL,CAAuBN,MAAM,CAACO,QAA9B,EAAwC,CAAC,OAAD,CAAxC;QACA,CAFM,MAEA,IAAIP,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;UACtC9B,KAAI,CAACmC,iBAAL,CAAuBN,MAAM,CAACO,QAA9B,EAAwC,CAAC,OAAD,CAAxC;QACA,CAFM,MAEA,IAAIP,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;UACzC9B,KAAI,CAACmC,iBAAL,CAAuBN,MAAM,CAACO,QAA9B,EAAwC,CAAC,OAAD,CAAxC;QACA,CAFM,MAEA,IAAIP,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;UACzC9B,KAAI,CAACkC,eAAL,CAAqBL,MAAM,CAACQ,QAA5B;QACA,CAFM,MAEA,IAAIR,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;UACvC9B,KAAI,CAACmC,iBAAL,CAAuBN,MAAM,CAACS,KAA9B,EAAqC,CAAC,OAAD,CAArC;QACA,CAFM,MAEA;UACN,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;QACA;MACD,CAlBoB,CAArB;;MAoBA,IAAMC,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;;MACA,IAAI2B,QAAJ,EAAc;QACbA,QAAQ,CAACC,IAAT,GAAgB,IAAhB;QACAD,QAAQ,CAACE,WAAT;MACA;;MACD,KAAKzC,QAAL,CAAcC,IAAd,CAAmBsC,QAAnB;MACA,KAAKG,UAAL,GAAkBH,QAAQ,CAACI,SAAT,CAAmB,IAAIvD,QAAJ,CAAa,IAAb,EAAmBwD,SAAnB,EAA8B,EAA9B,CAAnB,EAAsD,EAAtD,CAAlB;MACA,KAAKF,UAAL,CAAgBG,QAAhB,CAAyBC,OAAzB,CAAiC,MAAjC;MACA,KAAKJ,UAAL,CAAgBK,GAAhB,CAAoB,SAApB,EAA+B,CAA/B;IACA;;EAED;;;;;;;;;;;;;;;WAUA,UAAYC,KAAZ,EAA2BC,GAA3B,EAAwCC,QAAxC,EAA2DC,QAA3D,EAAqF;;;MAArF;;MAEC,IAAI,KAAKvC,GAAL,CAAS,OAAT,MAAsBoC,KAAtB,IAA+B,KAAKpC,GAAL,CAAS,KAAT,KAAmBqC,GAAtD,EAA2D;QAE1D,IAAIG,UAAU,GAAG,KAAKC,WAAtB;QACA,IAAIC,UAAU,GAAG,KAAKC,WAAtB;QAEA,IAAIC,YAAY,GAAG,KAAK5C,GAAL,CAAS,cAAT,EAAyB,GAAzB,IAAgC6C,IAAI,CAACC,GAAL,CAAS,CAAT,EAAaT,GAAG,GAAGD,KAAnB,CAAnD;;QAEA,IAAIA,KAAK,GAAG,CAAEQ,YAAd,EAA4B;UAC3BR,KAAK,GAAG,CAACQ,YAAT;QACA;;QAED,IAAIP,GAAG,GAAG,IAAIO,YAAd,EAA4B;UAC3BP,GAAG,GAAG,IAAIO,YAAV;QACA;;QAED,IAAIR,KAAK,GAAGC,GAAZ,EAAiB;UAChBU,YAAe,CAACV,GAAD,EAAMD,KAAN,CAAf,EAA2B,CAA3B,GAACA,KAAK,QAAN,EAAQC,GAAG,QAAX;QACA;;QAED,IAAI,CAACtD,KAAK,CAACiE,QAAN,CAAeV,QAAf,CAAL,EAA+B;UAC9BA,QAAQ,GAAG,KAAKtC,GAAL,CAAS,uBAAT,EAAkC,CAAlC,CAAX;QACA;;QAED,IAAI,CAACuC,QAAL,EAAe;UACdA,QAAQ,GAAG,KAAX;QACA;;QAED,IAAIU,aAAa,GAAG,KAAKC,UAAL,CAAgB,eAAhB,EAAiC,KAAKlD,GAAL,CAAS,eAAT,EAA0B,GAA1B,CAAjC,CAApB;QACA,IAAImD,iBAAiB,GAAGF,aAAxB;;QAEA,IAAIZ,GAAG,KAAK,CAAR,IAAaD,KAAK,KAAK,CAA3B,EAA8B;UAC7B,IAAIA,KAAK,GAAG,KAAKpC,GAAL,CAAS,OAAT,CAAZ,EAA+B;YAC9BuC,QAAQ,GAAG,OAAX;UACA,CAFD,MAGK;YACJA,QAAQ,GAAG,KAAX;UACA;QACD;;QAED,IAAIH,KAAK,KAAK,CAAV,IAAeC,GAAG,KAAK,CAA3B,EAA8B;UAC7B,IAAIA,GAAG,GAAG,KAAKrC,GAAL,CAAS,KAAT,CAAV,EAA2B;YAC1BuC,QAAQ,GAAG,KAAX;UACA,CAFD,MAGK;YACJA,QAAQ,GAAG,OAAX;UACA;QACD;;QAED,IAAIa,YAAY,GAAG,KAAKpD,GAAL,CAAS,cAAT,CAAnB;QACA,IAAIqD,YAAY,GAAG,KAAKrD,GAAL,CAAS,cAAT,CAAnB;;QAEA,IAAIjB,KAAK,CAACiE,QAAN,CAAeI,YAAf,CAAJ,EAAkC;UACjCH,aAAa,GAAGE,iBAAiB,GAAGC,YAApC;QACA;;QAED,IAAIE,aAAa,GAAW,CAA5B;;QAEA,IAAIvE,KAAK,CAACiE,QAAN,CAAeK,YAAf,CAAJ,EAAkC;UACjCC,aAAa,GAAGH,iBAAiB,GAAGE,YAApC;QACA,CA3DyD,CA6D1D;;;QACA,IAAId,QAAQ,KAAK,OAAjB,EAA0B;UACzB,IAAIc,YAAY,GAAG,CAAnB,EAAsB;YACrB;YACA,IAAI,KAAKhB,GAAG,GAAGD,KAAX,IAAoBkB,aAAxB,EAAuC;cACtCjB,GAAG,GAAGD,KAAK,GAAG,IAAIkB,aAAlB;YACA;UACD,CANwB,CAQzB;;;UACA,IAAI,KAAKjB,GAAG,GAAGD,KAAX,IAAoBa,aAAxB,EAAuC;YACtCZ,GAAG,GAAGD,KAAK,GAAG,IAAIa,aAAlB;UACA,CAXwB,CAYzB;;;UACA,IAAIZ,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAGD,KAAN,GAAc,IAAIa,aAAjC,EAAgD;YAC/C;YACAb,KAAK,GAAGC,GAAG,GAAG,IAAIY,aAAlB;UACA;QACD,CAjBD,CAkBA;QAlBA,KAmBK;UACJ,IAAII,YAAY,GAAG,CAAnB,EAAsB;YACrB;YACA,IAAI,KAAKhB,GAAG,GAAGD,KAAX,IAAoBkB,aAAxB,EAAuC;cACtClB,KAAK,GAAGC,GAAG,GAAG,IAAIiB,aAAlB;YACA;UACD,CANG,CAQJ;;;UACA,IAAI,KAAKjB,GAAG,GAAGD,KAAX,IAAoBa,aAAxB,EAAuC;YACtCb,KAAK,GAAGC,GAAG,GAAG,IAAIY,aAAlB;UACA;;UACD,IAAIb,KAAK,GAAG,CAAR,IAAaC,GAAG,GAAGD,KAAN,GAAc,IAAIa,aAAnC,EAAkD;YACjD;YACAZ,GAAG,GAAGD,KAAK,GAAG,IAAIa,aAAlB;UACA;QACD;;QAED,IAAI,KAAKZ,GAAG,GAAGD,KAAX,IAAoBa,aAAxB,EAAuC;UACtCZ,GAAG,GAAGD,KAAK,GAAG,IAAIa,aAAlB;QACA;;QAED,IAAI,KAAKZ,GAAG,GAAGD,KAAX,IAAoBa,aAAxB,EAAuC;UACtCb,KAAK,GAAGC,GAAG,GAAG,IAAIY,aAAlB;QACA;;QAED,IAAII,YAAY,IAAI,IAAhB,IAAwBD,YAAY,IAAI,IAAxC,IAAiDhB,KAAK,IAAI,KAAKpC,GAAL,CAAS,OAAT,CAAT,IAA8BqC,GAAG,IAAI,KAAKrC,GAAL,CAAS,KAAT,CAA1F,EAA4G;UAC3G,IAAMuD,KAAK,GAAG,KAAKA,KAAnB;;UACA,IAAIA,KAAJ,EAAW;YACVA,KAAK,CAACC,oBAAN,CAA2B,IAA3B,EAAiC,IAAjC;UACA;QACD;;QAED,IAAI,CAAEhB,UAAU,IAAIA,UAAU,CAACiB,OAAzB,IAAoCjB,UAAU,CAACkB,EAAX,IAAiBtB,KAAtD,IAAgE,KAAKpC,GAAL,CAAS,OAAT,KAAqBoC,KAAtF,MAAkGM,UAAU,IAAIA,UAAU,CAACe,OAAzB,IAAoCf,UAAU,CAACgB,EAAX,IAAiBrB,GAAtD,IAA8D,KAAKrC,GAAL,CAAS,KAAT,KAAmBqC,GAAlL,CAAJ,EAA4L;UAC3L;QACA;;QAGD,IAAIC,QAAQ,GAAG,CAAf,EAAkB;UACjB,IAAIqB,MAAM,GAAG,KAAK3D,GAAL,CAAS,qBAAT,CAAb;UACA,IAAI4D,YAAJ,EAAgBC,YAAhB;;UACA,IAAI,KAAK7D,GAAL,CAAS,OAAT,KAAqBoC,KAAzB,EAAgC;YAC/BwB,YAAU,GAAG,KAAKE,OAAL,CAAa;cAAEC,GAAG,EAAE,OAAP;cAAgBL,EAAE,EAAEtB,KAApB;cAA2BE,QAAQ,EAAEA,QAArC;cAA+CqB,MAAM,EAAEA;YAAvD,CAAb,CAAb;UACA;;UACD,IAAI,KAAK3D,GAAL,CAAS,KAAT,KAAmBqC,GAAvB,EAA4B;YAC3BwB,YAAU,GAAG,KAAKC,OAAL,CAAa;cAAEC,GAAG,EAAE,KAAP;cAAcL,EAAE,EAAErB,GAAlB;cAAuBC,QAAQ,EAAEA,QAAjC;cAA2CqB,MAAM,EAAEA;YAAnD,CAAb,CAAb;UACA;;UAED,KAAKlB,WAAL,GAAmBmB,YAAnB;UACA,KAAKjB,WAAL,GAAmBkB,YAAnB;;UAEA,IAAID,YAAJ,EAAgB;YACf,OAAOA,YAAP;UACA,CAFD,MAGK,IAAIC,YAAJ,EAAgB;YACpB,OAAOA,YAAP;UACA;QACD,CAnBD,MAoBK;UACJ,KAAK1B,GAAL,CAAS,OAAT,EAAkBC,KAAlB;UACA,KAAKD,GAAL,CAAS,KAAT,EAAgBE,GAAhB,EAFI,CAGJ;;UACA,KAAK9C,KAAL,CAAWuB,MAAX,CAAkBkD,IAAlB,CAAuB,YAAvB,EAAqC;YACpC7E,KAAI,CAAC8E,aAAL,CAAmB,OAAnB;;YACA9E,KAAI,CAACI,KAAL,CAAW2E,UAAX;UACA,CAHD;QAIA;MACD,CApJD,MAqJK;QACJ,IAAI,KAAKzB,WAAT,EAAsB;UACrB,KAAKA,WAAL,CAAiB0B,IAAjB;QACA;;QACD,IAAI,KAAKxB,WAAT,EAAsB;UACrB,KAAKA,WAAL,CAAiBwB,IAAjB;QACA;MACD;IACD;;EAODjF,sBAAWkF,cAAX,EAAW,QAAX,EAAiB;IALjB;;;;;SAKA;MACC,OAAO,KAAKC,OAAZ;IACA,CAFgB;qBAAA;;EAAA,CAAjB;;;;;WAKA,UAAyBjD,QAAzB,EAAwExB,SAAxE,EAAgG;MAC/FwB,QAAQ,CAACkD,MAAT,CAAgB,SAAhB,EAA2B,IAA3B;;MACA,KAAKC,aAAL,CAAmBnD,QAAnB,EAA6BxB,SAA7B;;MACA,KAAK4E,YAAL,GAAoB,IAApB;;MACA,KAAKC,gBAAL,CAAsBrD,QAAtB;;MAEA,IAAMsD,KAAK,GAAGtD,QAAQ,CAACpB,GAAT,CAAa,OAAb,CAAd;MACA,IAAM2E,SAAS,GAAG,KAAKxE,gBAAvB;MAEA,IAAMyE,IAAI,GAAGxD,QAAQ,CAACpB,GAAT,CAAa,MAAb,CAAb;;MACA,IAAI0E,KAAK,IAAIE,IAAb,EAAmB;QAClBD,SAAS,CAACvF,QAAV,CAAmByF,SAAnB,CAA6BD,IAA7B;MACA;;MAED,IAAM9E,IAAI,GAAGsB,QAAQ,CAACpB,GAAT,CAAa,UAAb,CAAb;;MACA,IAAI0E,KAAK,IAAI5E,IAAb,EAAmB;QAClB6E,SAAS,CAACvF,QAAV,CAAmByF,SAAnB,CAA6B/E,IAA7B;MACA;IACD;;;;;;WAED,UAAwBgF,SAAxB,EAAwEC,MAAxE,EAAuF,CAAK;;EAgC5F;;;;;;;;WAGA,aACC;;EAED;;;;;;;;WAGA,aACC;;;;;;WAED,aACC;;;;;;WAED;MAAA;;MACC,KAAKC,QAAL,GAAgB,EAAhB;MACA,KAAKnE,UAAL,CAAgBK,IAAhB,CAAqB,UAAC+D,SAAD,EAAU;QAC9B9F,KAAI,CAACsF,gBAAL,CAAsBQ,SAAtB;MACA,CAFD;MAIAnG,MAAM,CAACoC,IAAP,CAAY,KAAKgE,iBAAjB,EAAoC,UAACD,SAAD,EAAU;QAC7C9F,KAAI,CAACsF,gBAAL,CAAsBQ,SAAtB;MACA,CAFD;IAGA;;;;;;WAOD;MACC1E,iBAAM4E,gBAAN,CAAsB1E,IAAtB,CAAsB,IAAtB;;MAEA,IAAI,KAAKT,GAAL,CAAS,aAAT,CAAJ,EAA6B;QAC5B,KAAK8B,UAAL,CAAgBK,GAAhB,CAAoB,SAApB,EAA+B,IAA/B;MACA,CAFD,MAGK;QACJ,KAAKL,UAAL,CAAgBK,GAAhB,CAAoB,SAApB,EAA+B,KAA/B;MACA;;MAED,IAAI,KAAKiD,OAAL,CAAa,OAAb,KAAyB,KAAKA,OAAL,CAAa,KAAb,CAA7B,EAAkD;QACjD,KAAK7B,KAAL,CAAY8B,aAAZ;;QAEA,IAAIjD,KAAK,GAAG,KAAKpC,GAAL,CAAS,OAAT,EAAkB,CAAlB,CAAZ;QACA,IAAIqC,GAAG,GAAG,KAAKrC,GAAL,CAAS,KAAT,EAAgB,CAAhB,CAAV;QAEA,IAAI4C,YAAY,GAAG,KAAK5C,GAAL,CAAS,cAAT,EAAyB,GAAzB,IAAgC6C,IAAI,CAACC,GAAL,CAAS,CAAT,EAAaT,GAAG,GAAGD,KAAnB,CAAnD;;QAEA,IAAIA,KAAK,GAAG,CAACQ,YAAb,EAA2B;UAC1B,IAAI0C,KAAK,GAAGlD,KAAK,GAAGQ,YAApB;UACAR,KAAK,GAAG,CAACQ,YAAT;UACA,KAAK0B,MAAL,CAAY,OAAZ,EAAqBlC,KAArB;;UACA,IAAI,KAAKgD,OAAL,CAAa,KAAb,CAAJ,EAAyB;YACxB,KAAKd,MAAL,CAAY,KAAZ,EAAmBjC,GAAG,GAAGiD,KAAzB;UACA;QACD;;QACD,IAAIjD,GAAG,GAAG,IAAIO,YAAd,EAA4B;UAC3B,IAAI0C,KAAK,GAAGjD,GAAG,GAAG,CAAN,GAAUO,YAAtB;UACAP,GAAG,GAAG,IAAIO,YAAV;UACA,KAAK0B,MAAL,CAAY,KAAZ,EAAmBjC,GAAnB;;UAEA,IAAI,KAAK+C,OAAL,CAAa,OAAb,CAAJ,EAA2B;YAC1B,KAAKd,MAAL,CAAY,OAAZ,EAAqBlC,KAAK,GAAGkD,KAA7B;UACA;QACD;MACD;;MAGD,IAAM3D,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;MACA2B,QAAQ,CAAC4D,MAAT,GAAkB,KAAKvF,GAAL,CAAS,OAAT,CAAlB;MACA2B,QAAQ,CAAC6D,IAAT,GAAgB,KAAKxF,GAAL,CAAS,KAAT,CAAhB;MACA2B,QAAQ,CAAC8D,SAAT,GAAqB9D,QAAQ,CAAC3B,GAAT,CAAa,UAAb,EAAyB,KAAzB,CAArB;MACA2B,QAAQ,CAAC+D,WAAT,GAAuB/D,QAAQ,CAACgE,UAAT,MAAyBhE,QAAQ,CAAC6D,IAAT,GAAgB7D,QAAQ,CAAC4D,MAAlD,CAAvB;;MACA5D,QAAQ,CAACiE,SAAT;;MAEA,IAAI,KAAKR,OAAL,CAAa,SAAb,CAAJ,EAA6B;QAC5B,IAAMS,OAAO,GAAG,KAAK7F,GAAL,CAAS,SAAT,CAAhB;;QACA,IAAI6F,OAAJ,EAAa;UACZ,IAAMC,YAAY,GAAGnE,QAAQ,CAAC3B,GAAT,CAAa,WAAb,CAArB;UACA6F,OAAO,CAACE,MAAR,CAAe,MAAf;UACAF,OAAO,CAACE,MAAR,CAAe,KAAKC,SAAL,CAAeC,WAAf,EAAf;;UACAJ,OAAO,CAACK,YAAR;;UAEA,IAAIJ,YAAJ,EAAkB;YACjBD,OAAO,CAAC1D,GAAR,CAAY,WAAZ,EAAyBnD,MAAM,CAACmH,SAAP,CAAiBN,OAAO,CAAC7F,GAAR,CAAY,WAAZ,CAAjB,EAA2C8F,YAA3C,CAAzB;;YACAD,OAAO,CAACO,KAAR,CAAcF,YAAd;UACA;QACD;MACD;IACD;;;;;;WAED;MACC,IAAML,OAAO,GAAG,KAAK7F,GAAL,CAAS,SAAT,CAAhB;;MACA,IAAI6F,OAAJ,EAAa;QACZ,KAAK7F,GAAL,CAAS,UAAT,EAAqBqG,mBAArB,CAAyCR,OAAzC;MACA;IACD;;;;;;WAED;MACCtF,iBAAM+F,aAAN,CAAmB7F,IAAnB,CAAmB,IAAnB;;MACA,KAAK8F,oBAAL;IACA;;EAED;;;;;;;;WAGA,UAAoBhD,KAApB,EAAkC;MAAlC;;MACC,KAAKA,KAAL,GAAaA,KAAb;MACA,IAAM5B,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;MAEA2B,QAAQ,CAAC4B,KAAT,GAAiBA,KAAjB;MACAA,KAAK,CAACtD,aAAN,CAAoBb,QAApB,CAA6BC,IAA7B,CAAkC,KAAKY,aAAvC;MACAsD,KAAK,CAACpD,gBAAN,CAAuBf,QAAvB,CAAgCC,IAAhC,CAAqC,KAAKc,gBAA1C;MAEAoD,KAAK,CAACiD,oBAAN,CAA2BpH,QAA3B,CAAoCC,IAApC,CAAyC,KAAKiB,UAA9C;MAEA,KAAKmG,EAAL,CAAQ,OAAR,EAAiB;QAChBlD,KAAK,CAACC,oBAAN,CAA2BrE,KAA3B;MACA,CAFD;MAGA,KAAKsH,EAAL,CAAQ,KAAR,EAAe;QACdlD,KAAK,CAACC,oBAAN,CAA2BrE,KAA3B;MACA,CAFD;MAIAoE,KAAK,CAACmD,aAAN,CAAoBC,SAApB,CAA8B,OAA9B,EAAuC;QACtCxH,KAAI,CAACyH,aAAL;MACA,CAFD;MAGArD,KAAK,CAACmD,aAAN,CAAoBC,SAApB,CAA8B,QAA9B,EAAwC;QACvCxH,KAAI,CAACyH,aAAL;MACA,CAFD;MAIArD,KAAK,CAAC1B,WAAN,CAAkB,IAAlB;IACA;;EAED;;;;;;;;WAGA,UAAoBT,QAApB,EAAqD;MACpD,KAAKyF,eAAL,CAAqBzF,QAArB,EAA+B,KAA/B;;MACA,OAAOb,iBAAMuG,YAAN,CAAkBrG,IAAlB,CAAkB,IAAlB,EAAmBW,QAAnB,CAAP;IACA;;EAED;;;;;;;;WAGA,UAAoBA,QAApB,EAAqD;MACpD,KAAKyF,eAAL,CAAqBzF,QAArB,EAA+B,IAA/B;;MACA,OAAOb,iBAAMwG,YAAN,CAAkBtG,IAAlB,CAAkB,IAAlB,EAAmBW,QAAnB,CAAP;IACA;;;;;;WAGD,UAAuBA,QAAvB,EAA0D4F,OAA1D,EAA0E;MACzE,IAAMZ,KAAK,GAAGhF,QAAQ,CAACpB,GAAT,CAAa,OAAb,CAAd;;MACA,IAAIoG,KAAJ,EAAW;QACVA,KAAK,CAACzF,UAAN,CAAiB,SAAjB,EAA4BqG,OAA5B;MACA;;MACD,IAAMpC,IAAI,GAAGxD,QAAQ,CAACpB,GAAT,CAAa,MAAb,CAAb;;MACA,IAAI4E,IAAJ,EAAU;QACTA,IAAI,CAACjE,UAAL,CAAgB,SAAhB,EAA2BqG,OAA3B;MACA;;MACD,IAAMC,IAAI,GAAG7F,QAAQ,CAACpB,GAAT,CAAa,MAAb,CAAb;;MACA,IAAIiH,IAAJ,EAAU;QACTA,IAAI,CAACtG,UAAL,CAAgB,SAAhB,EAA2BqG,OAA3B;MACA;;MACD,IAAME,QAAQ,GAAG9F,QAAQ,CAACpB,GAAT,CAAa,UAAb,CAAjB;;MACA,IAAIkH,QAAJ,EAAc;QACbA,QAAQ,CAACvG,UAAT,CAAoB,SAApB,EAA+BqG,OAA/B;MACA;;MAED,IAAMG,MAAM,GAAG/F,QAAQ,CAACpB,GAAT,CAAa,QAAb,CAAf;;MACA,IAAImH,MAAJ,EAAY;QACX,IAAMC,MAAM,GAAGD,MAAM,CAACnH,GAAP,CAAW,QAAX,CAAf;;QACA,IAAIoH,MAAJ,EAAY;UACXA,MAAM,CAACzG,UAAP,CAAkB,SAAlB,EAA6BqG,OAA7B;QACA;MACD;IACD;;;;;;WAOD,UAAqB5F,QAArB,EAAoEiG,IAApE,EAAuF;MACtF,IAAM1F,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;;MAEA,IAAI,CAACoB,QAAQ,CAACpB,GAAT,CAAa,OAAb,CAAL,EAA4B;QAC3B2B,QAAQ,CAACI,SAAT,CAAmBX,QAAnB,EAA6BiG,IAA7B;MACA;;MAED,IAAI,CAACjG,QAAQ,CAACpB,GAAT,CAAa,MAAb,CAAL,EAA2B;QAC1B2B,QAAQ,CAAC2F,QAAT,CAAkBlG,QAAlB,EAA4BiG,IAA5B;MACA;;MAED,IAAI,CAACjG,QAAQ,CAACpB,GAAT,CAAa,MAAb,CAAL,EAA2B;QAC1B2B,QAAQ,CAAC4F,QAAT,CAAkBnG,QAAlB,EAA4BiG,IAA5B;MACA;;MAED,IAAI,CAACjG,QAAQ,CAACpB,GAAT,CAAa,UAAb,CAAL,EAA+B;QAC9B2B,QAAQ,CAAC6F,YAAT,CAAsBpG,QAAtB,EAAgCiG,IAAhC;MACA;;MAED,KAAKI,cAAL,CAAoBrG,QAApB;IACA;;;;;;WAED,UAAyBA,QAAzB,EAAsE;MACrE,IAAI+F,MAAM,GAAG/F,QAAQ,CAACpB,GAAT,CAAa,QAAb,CAAb;MACA,IAAI0H,UAAU,GAAG,KAAK1H,GAAL,CAAS,QAAT,CAAjB;;MAEA,IAAI,CAACmH,MAAD,IAAWO,UAAX,IAAyB,CAACtG,QAAQ,CAACpB,GAAT,CAAa,SAAb,CAA9B,EAAuD;QACtDmH,MAAM,GAAGO,UAAU,CAAC,KAAKnI,KAAN,EAAa,IAAb,EAAmB6B,QAAnB,CAAnB;MACA;;MAED,IAAI+F,MAAJ,EAAY;QACXA,MAAM,CAACvF,IAAP,GAAc,IAAd;QACA,IAAMwF,MAAM,GAAGD,MAAM,CAACnH,GAAP,CAAW,QAAX,CAAf;;QAEA,IAAIoH,MAAJ,EAAY;UACXA,MAAM,CAACO,YAAP,CAAoBvG,QAApB;;UACAA,QAAQ,CAACkD,MAAT,CAAgB,QAAhB,EAA0B6C,MAA1B;;UACA,IAAI,CAACC,MAAM,CAACQ,MAAZ,EAAoB;YACnB,KAAKxH,gBAAL,CAAsBhB,QAAtB,CAA+BC,IAA/B,CAAoC+H,MAApC;UACA;QACD;MACD;IACD;;;;;;WAED;MACC7G,iBAAMsH,aAAN,CAAmBpH,IAAnB,CAAmB,IAAnB;;MAEA,IAAM8C,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIA,KAAJ,EAAW;QACVA,KAAK,CAACuE,kBAAN;;QACAvE,KAAK,CAACiD,oBAAN,CAA2BI,aAA3B;MACA;;MAED,KAAK5G,GAAL,CAAS,UAAT,EAAqB+H,gBAArB;IACA;;EAED;;;;;;;;WAGA,UAAuB3G,QAAvB,EAAoE;MACnEb,iBAAMc,eAAN,CAAqBZ,IAArB,CAAqB,IAArB,EAAsBW,QAAtB;;MACA,IAAMO,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;MACA,IAAMoG,KAAK,GAAGhF,QAAQ,CAACpB,GAAT,CAAa,OAAb,CAAd;;MACA,IAAIoG,KAAJ,EAAW;QACVzE,QAAQ,CAACqG,MAAT,CAAgBC,WAAhB,CAA4B7B,KAA5B;QACAA,KAAK,CAAClG,OAAN;MACA;;MACD,IAAM+G,IAAI,GAAG7F,QAAQ,CAACpB,GAAT,CAAa,MAAb,CAAb;;MACA,IAAIiH,IAAJ,EAAU;QACTtF,QAAQ,CAACuG,KAAT,CAAeD,WAAf,CAA2BhB,IAA3B;QACAA,IAAI,CAAC/G,OAAL;MACA;;MACD,IAAM0E,IAAI,GAAGxD,QAAQ,CAACpB,GAAT,CAAa,MAAb,CAAb;;MACA,IAAI4E,IAAJ,EAAU;QACTjD,QAAQ,CAACiD,IAAT,CAAcqD,WAAd,CAA0BrD,IAA1B;QACAA,IAAI,CAAC1E,OAAL;MACA;;MACD,IAAMgH,QAAQ,GAAG9F,QAAQ,CAACpB,GAAT,CAAa,UAAb,CAAjB;;MACA,IAAIkH,QAAJ,EAAc;QACbvF,QAAQ,CAACwG,SAAT,CAAmBF,WAAnB,CAA+Bf,QAA/B;QACAA,QAAQ,CAAChH,OAAT;MACA;;MACD,IAAMiH,MAAM,GAAG/F,QAAQ,CAACpB,GAAT,CAAa,QAAb,CAAf;;MAEA,IAAImH,MAAJ,EAAY;QACXA,MAAM,CAACjH,OAAP;MACA;IACD;;;;;;WAED;MACC,IAAM4B,UAAU,GAAG,KAAKA,UAAxB;;MACA,IAAI,CAACA,UAAU,CAACsG,QAAX,EAAL,EAA4B;QAC3B,IAAMC,MAAM,GAAGvG,UAAU,CAACwG,WAAX,EAAf;QACA,IAAMC,QAAM,GAAGF,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACI,IAArC;QACA,IAAIC,MAAI,GAAG5G,UAAU,CAAC9B,GAAX,CAAe,MAAf,CAAX;QACAlB,MAAM,CAACoC,IAAP,CAAY,KAAKyH,SAAjB,EAA4B,UAACvH,QAAD,EAAS;UACpC,IAAMgF,KAAK,GAAGhF,QAAQ,CAACpB,GAAT,CAAa,OAAb,CAAd;;UACA,IAAIoG,KAAK,IAAI,CAACA,KAAK,CAACgC,QAAN,EAAd,EAAgC;YAC/B,IAAMQ,QAAM,GAAGxC,KAAK,CAACkC,WAAN,EAAf;YACA,IAAMO,CAAC,GAAGD,QAAM,CAACJ,KAAP,GAAeI,QAAM,CAACH,IAAhC;;YAEA,IAAII,CAAC,GAAGN,QAAR,EAAgB;cACfG,MAAI,GAAGtC,KAAK,CAAC0C,IAAN,CAAWC,QAAX,EAAP;YACA;UACD;QACD,CAVD;QAWAjH,UAAU,CAACK,GAAX,CAAe,MAAf,EAAuBuG,MAAvB;MACA;;MACD,IAAItG,KAAK,GAAG,KAAKpC,GAAL,CAAS,OAAT,EAAkB,CAAlB,CAAZ;MACA,IAAIqC,GAAG,GAAG,KAAKrC,GAAL,CAAS,KAAT,EAAgB,CAAhB,CAAV;MACA,KAAKA,GAAL,CAAS,UAAT,EAAqBgJ,WAArB,CAAiClH,UAAjC,EAA6CM,KAAK,GAAG,CAACC,GAAG,GAAGD,KAAP,IAAgB,GAArE;IACA;;;;;;WAED,UAA6BzC,QAA7B,EAA+CsJ,YAA/C,EAA6E;MAC5E,IAAMtH,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;MACAL,QAAQ,GAAGgC,QAAQ,CAACuH,cAAT,CAAwBvJ,QAAxB,CAAX;MAEA,KAAKwJ,eAAL,GAAuBxJ,QAAvB;MACA,KAAKyJ,aAAL,GAAqBH,YAArB;MAEA,KAAKI,aAAL;IACA;;EAED;;;;;;;;;WAIA;MAAA;;MACC,IAAMJ,YAAY,GAAG,KAAKG,aAA1B;MACA,IAAIzJ,QAAQ,GAAG,KAAKwJ,eAApB;MACA,IAAMtD,OAAO,GAAG,KAAK7F,GAAL,CAAS,SAAT,CAAhB;MACA,IAAM2B,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;;MAEA,IAAIjB,KAAK,CAACiE,QAAN,CAAerD,QAAf,CAAJ,EAA8B;QAE7Bb,MAAM,CAACoC,IAAP,CAAY,KAAKoI,MAAjB,EAAyB,UAACA,MAAD,EAAO;UAC/B,IAAIA,MAAM,CAACtJ,GAAP,CAAW,UAAX,MAA2Bb,KAA/B,EAAqC;YACpC,IAAMiC,QAAQ,GAAGjC,KAAI,CAACoK,aAAL,CAAmBD,MAAnB,EAA2B3J,QAA3B,EAAsCR,KAAI,CAACa,GAAL,CAAS,iBAAT,CAAtC,CAAjB;;YACAsJ,MAAM,CAAChF,MAAP,CAAc,iBAAd,EAAiClD,QAAjC;;YACA,IAAI6H,YAAY,IAAIA,YAAY,CAACO,OAAb,CAAqBF,MAArB,KAAgC,CAAC,CAArD,EAAwD;cACvDA,MAAM,CAACG,kBAAP,CAA0BrI,QAA1B;cACAkI,MAAM,CAACI,iBAAP,CAAyBtI,QAAzB;YACA,CAHD,MAIK;cACJkI,MAAM,CAACK,mBAAP,CAA2BvI,QAA3B;YACA;UACD;QACD,CAZD;;QAeA,IAAIyE,OAAJ,EAAa;UACZlE,QAAQ,CAAC0E,mBAAT,CAA6BR,OAA7B;;UAEA,IAAI,KAAK7F,GAAL,CAAS,aAAT,CAAJ,EAA6B;YAC5BL,QAAQ,GAAG,KAAKiK,iBAAL,CAAuBjK,QAAvB,EAAiC,KAAKK,GAAL,CAAS,iBAAT,EAA4B,GAA5B,CAAjC,CAAX;UACA;;UACD,IAAI,CAACjB,KAAK,CAAC8K,KAAN,CAAYlK,QAAZ,CAAL,EAA4B;YAC3B,KAAKmK,aAAL,CAAmB,iBAAnB,EAAsCnK,QAAtC;;YACA,KAAKoK,kBAAL,CAAwBlE,OAAxB,EAAiClG,QAAjC;;YACAgC,QAAQ,CAACqI,eAAT,CAAyBnE,OAAzB,EAAkClG,QAAlC;;YAEA,IAAIA,QAAQ,GAAG,KAAKK,GAAL,CAAS,OAAT,CAAX,IAAgCL,QAAQ,GAAG,KAAKK,GAAL,CAAS,KAAT,CAA/C,EAAgE;cAC/D6F,OAAO,CAACoE,IAAR,CAAa,CAAb;YACA,CAFD,MAGK;cACJpE,OAAO,CAACqE,IAAR,CAAa,CAAb;YACA;UACD,CAXD,MAYK;YACJrE,OAAO,CAACoE,IAAR,CAAa,CAAb;UACA;QACD;MACD;IACD;;;;;;WAED,UAA6BpE,OAA7B,EAA+ClG,QAA/C,EAA+D;MAC9DkG,OAAO,CAACO,KAAR,CAAcjE,GAAd,CAAkB,MAAlB,EAA0B,KAAKgI,cAAL,CAAoBxK,QAApB,CAA1B;IACA;;EAUD;;;;;;;;WAGA,UAAyBA,QAAzB,EAA2CyK,SAA3C,EAA4D;MAC3D,OAAOzK,QAAP;IACA;;EAED;;;;;;;;WAGA;MACC,IAAIkG,OAAO,GAAG,KAAK7F,GAAL,CAAS,SAAT,CAAd;;MACA,IAAI6F,OAAJ,EAAa;QACZA,OAAO,CAACqE,IAAR;MACA;IACD;;EAED;;;;;;;;WAGA;MACC,IAAIrE,OAAO,GAAG,KAAK7F,GAAL,CAAS,SAAT,CAAd;;MACA,IAAI6F,OAAJ,EAAa;QACZA,OAAO,CAACoE,IAAR;MACA;IACD;;EAED;;;;;;;;WAGA,UAA6BnF,SAA7B,EAAqEuF,OAArE,EAA2F,CAE1F;;;;;;WAED;MACC9J,iBAAM+J,WAAN,CAAiB7J,IAAjB,CAAiB,IAAjB;;MACA,KAAK8J,UAAL,GAAkB,KAAlB;MACA,KAAK/F,YAAL,GAAoB,KAApB;IACA;;EAED;;;;;;;;;;;WAMA,UAA4BgG,UAA5B,EAA8C;MAC7C,IAAM7I,QAAQ,GAAG,KAAK3B,GAAL,CAAS,UAAT,CAAjB;MACA,OAAO2B,QAAQ,CAACuH,cAAT,CAAwBsB,UAAU,GAAG7I,QAAQ,CAACgE,UAAT,EAArC,CAAP;IACA;;EAED;;;;;;;;;;;;WAOA,UAAsBhG,QAAtB,EAAsC;MACrC,OAAO,KAAKK,GAAL,CAAS,UAAT,EAAqBkJ,cAArB,CAAoCvJ,QAApC,CAAP;IACA;;EAED;;;;;;;;;;WAKA,UAAmBA,QAAnB,EAAmC;MAClC,OAAO,KAAKK,GAAL,CAAS,UAAT,EAAqByK,WAArB,CAAiC9K,QAAjC,CAAP;IACA;;EAWD;;;;;;;;WAGA,UAAiBmF,SAAjB,EAAyD4F,SAAzD,EAAiGC,aAAjG,EAAwHC,UAAxH,EAA0I;MACzI,OAAO,KAAP;IACA;;EAED;;;;;;;;;;;;WAOA,UAAuBC,YAAvB,EAA4D;MAC3D,OAAO,KAAKhK,UAAL,CAAgBxB,IAAhB,CAAqBwL,YAArB,CAAP;IACA;;EAED;;;;;;;;WAGA,UAAwBxG,OAAxB,EAAyC,CAAK;;EAE9C;;;;;;;;;;;;WAOA;MACC,OAAO,IAAP;IACA;;EA51BDnF;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0CT,SAAS,CAACqM,UAAV,CAAqBC,MAArB,CAA4B,CAAC3G,IAAI,CAAC4B,SAAN,CAA5B;EAA1C;EA41BD;AAAC,CA91BD,CAA2DvH,SAA3D;;SAAsB2F","names":["DataItem","Component","Container","p100","List","Rectangle","$array","$type","$utils","__extends","Object","_this","children","push","new","_root","width","height","isMeasured","position","themeTags","background","fill","interfaceColors","get","gridContainer","dispose","topGridContainer","bulletsContainer","labelsContainer","axisHeader","_super","_dispose","call","_afterNew","setPrivate","_disposers","axisRanges","events","onAll","change","type","each","oldValues","dataItem","disposeDataItem","_processAxisRange","newValue","oldValue","value","Error","renderer","axis","processAxis","ghostLabel","makeLabel","undefined","adapters","disable","set","start","end","duration","priority","sAnimation","_sAnimation","eAnimation","_eAnimation","maxDeviation","Math","min","_a","isNumber","maxZoomFactor","getPrivate","maxZoomFactorReal","minZoomCount","maxZoomCount","minZoomFactor","chart","_handleAxisSelection","playing","to","easing","sAnimation_1","eAnimation_1","animate","key","once","_markDirtyKey","_markDirty","stop","Axis","_series","setRaw","_createAssets","_rangesDirty","_prepareDataItem","above","container","grid","moveValue","_dataItem","_index","_bullets","axisRange","_seriesAxisRanges","_prepareChildren","isDirty","_updateCursor","delta","_start","_end","_inversed","_axisLength","axisLength","_updateLC","tooltip","rendererTags","addTag","className","toLowerCase","_applyThemes","mergeTags","label","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","on","plotContainer","onPrivate","markDirtySize","_toggleDataItem","hideDataItem","showDataItem","visible","tick","axisFill","bullet","sprite","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_setDataItem","parent","_afterChanged","_updateChartLayout","_updatePositions","labels","removeValue","ticks","axisFills","isHidden","bounds","localBounds","gWidth_1","right","left","text_1","dataItems","bounds_1","w","text","_getText","updateLabel","snapToSeries","toAxisPosition","_cursorPosition","_snapToSeries","updateTooltip","series","getSeriesItem","indexOf","updateLegendMarker","updateLegendValue","showDataItemTooltip","roundAxisPosition","isNaN","setPrivateRaw","_updateTooltipText","positionTooltip","hide","show","getTooltipText","_location","_fields","_clearDirty","_sizeDirty","coordinate","fixPosition","_nextItem","_autoGapCount","_fieldName","axisDataItem","classNames","concat"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/axes/Axis.ts"],"sourcesContent":["import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t * @ignore\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}