{"ast":null,"code":"import axios from \"axios\";\nimport { mapState } from \"vuex\";\nimport { actionTypes } from '@/store/modules/auth';\nimport Notifications from \"@/components/notifications/Notifications.vue\";\nexport default {\n  name: \"Authorization\",\n\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      showNotify: false,\n      notifyHead: '',\n      notifyMessage: '',\n      notifyClass: '',\n      showAuthForm: true\n    };\n  },\n\n  methods: {\n    submitEntry: function () {\n      if (this.email.length > 0) {\n        this.$store.dispatch(actionTypes.login, {\n          email: this.email,\n          password: this.password\n        }).then(user => {\n          if (this.$store.state.auth.isLoggedIn) {\n            this.showNotify = true;\n            this.notifyHead = 'Здравствуйте';\n            this.notifyMessage = 'Вы успешно авторизированы';\n            this.notifyClass = 'wrapper-success';\n            document.location.href = '/';\n          }\n        }).catch(e => {\n          this.showNotify = true;\n          this.notifyHead = 'Ошибка авторизации';\n          this.notifyMessage = 'Пожалуйста, проверьте ваши введенные данные';\n          this.notifyClass = 'wrapper-error';\n        });\n      } else {\n        this.showNotify = true;\n        this.notifyHead = 'Ошибка авторизации';\n        this.notifyMessage = 'Введите Email';\n        this.notifyClass = 'wrapper-error';\n      } //const api = \"http://10.1.5.65/api/personal/login/\";\n      // axios\n      //     .post(api, {\n      //     email: this.email,\n      //     password: this.password,\n      // })\n      //     .then(resp => {\n      //         console.log('in then');\n      //     let user = resp.data;\n      //     console.log(user);\n      //     if (user.token) {\n      //         this.$store.commit(\"setUser\", user);\n      //         this.showNotify = true\n      //         this.notifyHead = 'Здравствуйте'\n      //         this.notifyMessage = 'Вы успешно авторизированы'\n      //         this.notifyClass = 'wrapper-success'\n      //     }\n      // })\n      // .catch(err => {\n      //     console.log('in catch');\n      //   this.showNotify = true\n      //   this.notifyHead = 'Ошибка авторизации'\n      //   this.notifyMessage = 'Пожалуйста, проверьте ваши введенные данные'\n      //   this.notifyClass = 'wrapper-error'\n      // })\n\n\n      return false;\n    }\n  },\n  computed: { ...mapState({\n      user: state => state.auth.user,\n      authStatus: state => state.auth.isLoggedIn\n    }) // authStatus: function(){\n    //     if(this.user.token) return true\n    //     return false\n    // }\n\n  },\n  watch: {\n    showNotify: function (v) {\n      if (v) {\n        setTimeout(() => {\n          this.showNotify = false;\n        }, 2100);\n      }\n    },\n    authStatus: function (newVal, oldVal) {\n      if (oldVal === false && newVal === true) {\n        setTimeout(() => {\n          this.showAuthForm = false;\n        }, 1500);\n      }\n    }\n  },\n  components: {\n    Notifications\n  },\n\n  mounted() {\n    if (this.authStatus) this.showAuthForm = false;\n  }\n\n};","map":{"version":3,"mappings":"AAqBA;AACA;AACA;AACA;AACA;EACAA,qBADA;;EAEAC;IACA;MACAC,SADA;MAEAC,YAFA;MAGAC,iBAHA;MAIAC,cAJA;MAKAC,iBALA;MAMAC,eANA;MAOAC;IAPA;EASA,CAZA;;EAaAC;IACAC;MACA;QACA;UACAR,iBADA;UAEAC;QAFA,GAGAQ,IAHA,CAGAC;UACA;YACA;YACA;YACA;YACA;YACAC;UACA;QACA,CAXA,EAWAC,KAXA,CAWAC;UACA;UACA;UACA;UACA;QACA,CAhBA;MAiBA,CAlBA,MAkBA;QACA;QACA;QACA;QACA;MACA,CAxBA,CA2BA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;;MACA;IACA;EAvDA,CAbA;EAsEAC,YACA;MACAJ,8BADA;MAEAK;IAFA,EADA,CAKA;IACA;IACA;IACA;;EARA,CAtEA;EAgFAC;IACAd;MACA;QACAe;UACA;QACA,CAFA,EAEA,IAFA;MAGA;IACA,CAPA;IAQAF;MACA;QACAE;UACA;QACA,CAFA,EAEA,IAFA;MAGA;IACA;EAdA,CAhFA;EAgGAC;IAAAC;EAAA,CAhGA;;EAiGAC;IACA;EACA;;AAnGA","names":["name","data","email","password","showNotify","notifyHead","notifyMessage","notifyClass","showAuthForm","methods","submitEntry","then","user","document","catch","e","computed","authStatus","watch","setTimeout","components","Notifications","mounted"],"sourceRoot":"src/views","sources":["Authorization.vue"],"sourcesContent":["<template>\r\n    <div>\r\n  <div id=\"id01\" class=\"modal\" v-if=\"showAuthForm\" style=\"display: block;\">\r\n    <div class=\"modal-content animate\" style=\" width: 40%;\">\r\n      <div class=\"container\">\r\n        <label for=\"uname\"><b>Email</b></label>\r\n        <input type=\"text\" placeholder=\"i.ivanov@tehtrans.com\" v-model=\"email\">\r\n\r\n        <label for=\"psw\"><b>Пароль</b></label>\r\n        <input type=\"password\" placeholder=\"Введите пароль\" v-model=\"password\">\r\n\r\n        <button @click=\"submitEntry()\">Войти</button>\r\n      </div>\r\n    </div>\r\n    \r\n  </div><Notifications :show=\"showNotify\" :header=\"notifyHead\" :message=\"notifyMessage\" :block-class=\"notifyClass\"/>\r\n</div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport {mapState} from \"vuex\";\r\nimport {actionTypes} from '@/store/modules/auth'\r\nimport Notifications from \"@/components/notifications/Notifications.vue\";\r\nexport default {\r\n    name: \"Authorization\",\r\n    data() {\r\n        return {\r\n            email: \"\",\r\n            password: \"\",\r\n            showNotify: false,\r\n            notifyHead: '',\r\n            notifyMessage: '',\r\n            notifyClass: '',\r\n            showAuthForm: true\r\n        };\r\n    },\r\n    methods: {\r\n        submitEntry: function () {\r\n            if(this.email.length > 0){\r\n                this.$store.dispatch(actionTypes.login, {\r\n                    email: this.email,\r\n                    password: this.password\r\n                }).then((user) => {\r\n                    if(this.$store.state.auth.isLoggedIn){\r\n                        this.showNotify = true\r\n                        this.notifyHead = 'Здравствуйте'\r\n                        this.notifyMessage = 'Вы успешно авторизированы'\r\n                        this.notifyClass = 'wrapper-success'\r\n                        document.location.href = '/'\r\n                    }\r\n                }).catch((e) => {\r\n                    this.showNotify = true\r\n                    this.notifyHead = 'Ошибка авторизации'\r\n                    this.notifyMessage = 'Пожалуйста, проверьте ваши введенные данные'\r\n                    this.notifyClass = 'wrapper-error'\r\n                })\r\n            }else{\r\n                this.showNotify = true\r\n                    this.notifyHead = 'Ошибка авторизации'\r\n                    this.notifyMessage = 'Введите Email'\r\n                    this.notifyClass = 'wrapper-error'\r\n            }\r\n           \r\n\r\n            //const api = \"http://10.1.5.65/api/personal/login/\";\r\n            // axios\r\n            //     .post(api, {\r\n            //     email: this.email,\r\n            //     password: this.password,\r\n            // })\r\n            //     .then(resp => {\r\n            //         console.log('in then');\r\n            //     let user = resp.data;\r\n            //     console.log(user);\r\n            //     if (user.token) {\r\n                    \r\n            //         this.$store.commit(\"setUser\", user);\r\n            //         this.showNotify = true\r\n            //         this.notifyHead = 'Здравствуйте'\r\n            //         this.notifyMessage = 'Вы успешно авторизированы'\r\n            //         this.notifyClass = 'wrapper-success'\r\n            //     }\r\n            // })\r\n            // .catch(err => {\r\n            //     console.log('in catch');\r\n            //   this.showNotify = true\r\n            //   this.notifyHead = 'Ошибка авторизации'\r\n            //   this.notifyMessage = 'Пожалуйста, проверьте ваши введенные данные'\r\n            //   this.notifyClass = 'wrapper-error'\r\n            // })\r\n            return false;\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.auth.user,\r\n            authStatus: state => state.auth.isLoggedIn\r\n        }),\r\n        // authStatus: function(){\r\n        //     if(this.user.token) return true\r\n        //     return false\r\n        // }\r\n    },\r\n    watch: {\r\n      showNotify: function(v){\r\n        if(v){\r\n          setTimeout(() => {\r\n            this.showNotify = false\r\n          }, 2100)\r\n        }\r\n      },\r\n    authStatus: function(newVal, oldVal){\r\n        if(oldVal === false && newVal === true){\r\n            setTimeout(() => {\r\n                this.showAuthForm = false\r\n            }, 1500) \r\n        }\r\n      }\r\n    },\r\n    components: { Notifications },\r\n    mounted(){\r\n        if(this.authStatus) this.showAuthForm = false\r\n    }\r\n}\r\n    </script>\r\n\r\n\r\n\r\n\r\n\r\n<style>\r\n\r\n\r\n\r\n\r\n\r\ninput[type=text], input[type=password] {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n}\r\nbutton {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 14px 20px;\r\n    margin: 8px 0;\r\n    border: none;\r\n    cursor: pointer;\r\n    width: 100%;\r\n}\r\nbutton:hover {\r\n    opacity: 0.8;\r\n}\r\n.cancelbtn {\r\n    width: auto;\r\n    padding: 10px 18px;\r\n    background-color: #f44336;\r\n}\r\n.imgcontainer {\r\n    text-align: center;\r\n    margin: 24px 0 12px 0;\r\n    position: relative;\r\n}\r\n\r\n.container {\r\n    padding: 16px;\r\n}\r\n\r\nspan.psw {\r\n    float: right;\r\n    padding-top: 16px;\r\n}\r\n.modal {\r\n    display: block;\r\n    position: fixed;\r\n    z-index: 99999999999999999999999999999999 !important;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgb(0,0,0);\r\n    background-color: rgba(0,0,0,0.4);\r\n    padding-top: 60px;\r\n}\r\n\r\n.modal-content {\r\n    background-color: #fefefe;\r\n    margin: 5% auto 15% auto;\r\n    border: 1px solid #888;\r\n    width: 40%;\r\n}\r\n\r\n.close {\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 0;\r\n    color: #000;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n    color: red;\r\n    cursor: pointer;\r\n}\r\n\r\n.animate {\r\n    -webkit-animation: animatezoom 0.6s;\r\n    animation: animatezoom 0.6s\r\n}\r\n\r\n@-webkit-keyframes animatezoom {\r\n    from {-webkit-transform: scale(0)}\r\n    to {-webkit-transform: scale(1)}\r\n}\r\n\r\n@keyframes animatezoom {\r\n    from {transform: scale(0)}\r\n    to {transform: scale(1)}\r\n}\r\n\r\n@media screen and (max-width: 300px) {\r\n    span.psw {\r\n       display: block;\r\n       float: none;\r\n    }\r\n    .cancelbtn {\r\n       width: 100%;\r\n    }\r\n}\r\n@media screen {\r\n    \r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}