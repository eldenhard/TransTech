{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\nexport default {\n  name: 'HelloWorld',\n\n  mounted() {\n    let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\n    chart.paddingRight = 20;\n    let data = [];\n    let visits = 10;\n\n    for (let i = 1; i < 366; i++) {\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      data.push({\n        date: new Date(2018, 0, i),\n        name: \"name\" + i,\n        value: visits\n      });\n    }\n\n    chart.data = data;\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n    series.tooltipText = \"{valueY.value}\";\n    chart.cursor = new am4charts.XYCursor();\n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    chart.scrollbarX = scrollbarX;\n    this.chart = chart;\n  },\n\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n};","map":{"version":3,"mappings":";AAMA;AACA;AACA;AAEAA;AAGA;EACAC,kBADA;;EAEAC;IACA;IAEAC;IAEA;IACA;;IACA;MACAC;MACAC;QAAAC;QAAAL;QAAAM;MAAA;IACA;;IAEAJ;IAEA;IACAK;IAEA;IACAC;IACAA;IAEA;IACAC;IACAA;IAEAA;IACAP;IAEA;IACAQ;IACAR;IAEA;EACA,CAnCA;;EAqCAS;IACA;MACA;IACA;EACA;;AAzCA","names":["am4core","name","mounted","chart","visits","data","date","value","dateAxis","valueAxis","series","scrollbarX","beforeDestroy"],"sourceRoot":"src/views","sources":["KeyFacts.vue"],"sourcesContent":["<template>\r\n    <div class=\"hello\" ref=\"chartdiv\">\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as am4core from \"@amcharts/amcharts4/core\";\r\n  import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n  import am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n  \r\n  am4core.useTheme(am4themes_animated);\r\n  \r\n  \r\n  export default {\r\n    name: 'HelloWorld',\r\n    mounted() {\r\n      let chart = am4core.create(this.$refs.chartdiv, am4charts.XYChart);\r\n  \r\n      chart.paddingRight = 20;\r\n  \r\n      let data = [];\r\n      let visits = 10;\r\n      for (let i = 1; i < 366; i++) {\r\n        visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n        data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n      }\r\n  \r\n      chart.data = data;\r\n  \r\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n      dateAxis.renderer.grid.template.location = 0;\r\n  \r\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.tooltip.disabled = true;\r\n      valueAxis.renderer.minWidth = 35;\r\n  \r\n      let series = chart.series.push(new am4charts.LineSeries());\r\n      series.dataFields.dateX = \"date\";\r\n      series.dataFields.valueY = \"value\";\r\n  \r\n      series.tooltipText = \"{valueY.value}\";\r\n      chart.cursor = new am4charts.XYCursor();\r\n  \r\n      let scrollbarX = new am4charts.XYChartScrollbar();\r\n      scrollbarX.series.push(series);\r\n      chart.scrollbarX = scrollbarX;\r\n  \r\n      this.chart = chart;\r\n    },\r\n  \r\n    beforeDestroy() {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n  <style scoped>\r\n  .hello {\r\n    width: 100%;\r\n    height: 500px;\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module"}