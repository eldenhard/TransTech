{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends, __read } from \"tslib\";\nimport { AxisRenderer } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\n\nvar AxisRendererY =\n/** @class */\nfunction (_super) {\n  __extends(AxisRendererY, _super);\n\n  function AxisRendererY() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_downY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"thumb\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Rectangle.new(_this._root, {\n        height: p100,\n        isMeasured: false,\n        themeTags: [\"axis\", \"y\", \"thumb\"]\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(AxisRendererY.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\n      if (this._settings.opposite) {\n        this._settings.themeTags.push(\"opposite\");\n      }\n\n      _super.prototype._afterNew.call(this);\n\n      this.setPrivateRaw(\"letter\", \"Y\");\n      var gridTemplate = this.grid.template;\n      gridTemplate.set(\"width\", p100);\n      gridTemplate.set(\"height\", 0);\n      gridTemplate.set(\"draw\", function (display, graphics) {\n        display.moveTo(0, 0);\n        display.lineTo(graphics.width(), 0);\n      });\n      this.set(\"draw\", function (display, renderer) {\n        display.moveTo(0, 0);\n        display.lineTo(0, renderer.height());\n      });\n    }\n  });\n  Object.defineProperty(AxisRendererY.prototype, \"_getPan\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point1, point2) {\n      return (point1.y - point2.y) / this.height();\n    }\n  });\n  Object.defineProperty(AxisRendererY.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      var axis = this.axis;\n      axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n      var thumb = this.thumb;\n      var opposite = \"opposite\";\n      var inside = \"inside\";\n      var chart = this.chart;\n\n      if (this.isDirty(opposite) || this.isDirty(inside)) {\n        var axisChildren = axis.children;\n\n        if (this.get(inside)) {\n          axis.addTag(inside);\n        } else {\n          axis.removeTag(inside);\n        }\n\n        if (chart) {\n          if (this.get(opposite)) {\n            var children = chart.rightAxesContainer.children;\n\n            if (children.indexOf(axis) == -1) {\n              children.moveValue(axis, 0);\n            }\n\n            axis.addTag(opposite);\n            axisChildren.moveValue(this, 0);\n          } else {\n            var children = chart.leftAxesContainer.children;\n\n            if (children.indexOf(axis) == -1) {\n              children.moveValue(axis);\n            }\n\n            axis.removeTag(opposite);\n            axisChildren.moveValue(this);\n          }\n\n          axis.ghostLabel._applyThemes();\n\n          this.labels.each(function (label) {\n            label._applyThemes();\n          });\n\n          this.root._markDirtyRedraw();\n        }\n\n        axis.markDirtySize();\n      }\n\n      var w = axis.labelsContainer.width();\n\n      if (chart) {\n        if (this.get(opposite)) {\n          thumb.set(\"centerX\", 0);\n        } else {\n          thumb.set(\"centerX\", w);\n        }\n      }\n\n      thumb.setPrivate(\"width\", w);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.processAxis.call(this);\n\n      var axis = this.axis;\n\n      if (axis.get(\"height\") == null) {\n        axis.set(\"height\", p100);\n      }\n\n      var horizontalLayout = this._root.horizontalLayout;\n      axis.set(\"layout\", horizontalLayout);\n      axis.labelsContainer.set(\"height\", p100);\n      axis.axisHeader.set(\"layout\", horizontalLayout);\n    }\n  });\n  Object.defineProperty(AxisRendererY.prototype, \"_updatePositions\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var axis = this.axis;\n      axis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n      axis.bulletsContainer.set(\"x\", this.x());\n      var chart = axis.chart;\n\n      if (chart) {\n        var plotContainer = chart.plotContainer;\n        var axisHeader = axis.axisHeader;\n        var height = axis.get(\"marginTop\", 0);\n\n        if (axisHeader.children.length > 0) {\n          height = axis.axisHeader.height();\n          axis.set(\"marginTop\", height);\n        } else {\n          axisHeader.set(\"height\", height);\n        }\n\n        axisHeader.setAll({\n          y: axis.y() - height,\n          x: -1,\n          width: plotContainer.width() + 2\n        });\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"axisLength\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.axis.innerHeight();\n    }\n  });\n  /**\r\n   * Converts axis relative position to actual coordinate in pixels.\r\n   *\r\n   * @param   position  Position\r\n   * @return            Point\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"positionToPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      return {\n        x: 0,\n        y: this.positionToCoordinate(position)\n      };\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"updateLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (label, position, endPosition, count) {\n      if (label) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        var location_1 = 0.5;\n\n        if ($type.isNumber(count) && count > 1) {\n          location_1 = label.get(\"multiLocation\", location_1);\n        } else {\n          location_1 = label.get(\"location\", location_1);\n        }\n\n        var opposite = this.get(\"opposite\");\n        var inside = label.get(\"inside\", this.get(\"inside\", false));\n\n        if (opposite) {\n          label.set(\"x\", 0);\n\n          if (inside) {\n            label.set(\"position\", \"absolute\");\n          } else {\n            label.set(\"position\", \"relative\");\n          }\n        } else {\n          if (inside) {\n            label.set(\"x\", 0);\n            label.set(\"position\", \"absolute\");\n          } else {\n            label.set(\"x\", undefined);\n            label.set(\"position\", \"relative\");\n          }\n        }\n\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_1;\n        }\n\n        label.set(\"y\", this.positionToCoordinate(position));\n        this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"updateGrid\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (grid, position, endPosition) {\n      if (grid) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        var location_2 = grid.get(\"location\", 0.5);\n\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_2;\n        }\n\n        var y = this.positionToCoordinate(position);\n        grid.set(\"y\", y);\n        this.toggleVisibility(grid, position, 0, 1);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"updateTick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tick, position, endPosition, count) {\n      if (tick) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        var location_3 = 0.5;\n\n        if ($type.isNumber(count) && count > 1) {\n          location_3 = tick.get(\"multiLocation\", location_3);\n        } else {\n          location_3 = tick.get(\"location\", location_3);\n        }\n\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_3;\n        }\n\n        tick.set(\"y\", this.positionToCoordinate(position));\n        var length_1 = tick.get(\"length\", 0);\n        var inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n        if (this.get(\"opposite\")) {\n          tick.set(\"x\", 0);\n\n          if (inside) {\n            length_1 *= -1;\n          }\n        } else {\n          if (!inside) {\n            length_1 *= -1;\n          }\n        }\n\n        tick.set(\"draw\", function (display) {\n          display.moveTo(0, 0);\n          display.lineTo(length_1, 0);\n        });\n        this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"updateBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet, position, endPosition) {\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n\n        if (sprite) {\n          if (!$type.isNumber(position)) {\n            position = 0;\n          }\n\n          var location_4 = bullet.get(\"location\", 0.5);\n\n          if ($type.isNumber(endPosition) && endPosition != position) {\n            position = position + (endPosition - position) * location_4;\n          }\n\n          var bulletPosition = this.axis.roundAxisPosition(position, location_4);\n          var previousBullet = this.axis._bullets[bulletPosition];\n          var d = 1;\n\n          if (this.get(\"opposite\")) {\n            d = -1;\n          }\n\n          if (bullet.get(\"stacked\")) {\n            if (previousBullet) {\n              var previousSprite = previousBullet.get(\"sprite\");\n\n              if (previousSprite) {\n                sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n              }\n            } else {\n              sprite.set(\"x\", 0);\n            }\n          }\n\n          this.axis._bullets[bulletPosition] = bullet;\n          sprite.set(\"y\", this.positionToCoordinate(position));\n          this.toggleVisibility(sprite, position, 0, 1);\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"updateFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fill, position, endPosition) {\n      if (fill) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n\n        if (!$type.isNumber(endPosition)) {\n          endPosition = 1;\n        }\n\n        var y0 = this.positionToCoordinate(position);\n        var y1 = this.positionToCoordinate(endPosition);\n        this.fillDrawMethod(fill, y0, y1);\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererY.prototype, \"fillDrawMethod\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fill, y0, y1) {\n      var _this = this;\n\n      fill.set(\"draw\", function (display) {\n        var _a; // using for holes, so can not be rectangle\n\n\n        var w = _this.axis.gridContainer.width();\n\n        var h = _this.height();\n\n        if (y1 < y0) {\n          _a = __read([y0, y1], 2), y1 = _a[0], y0 = _a[1];\n        }\n\n        if (y0 > h || y1 < 0) {\n          return;\n        } //y0 = Math.max(0, y0);\n        //y1 = Math.min(h, y1);\n\n\n        display.moveTo(0, y0);\n        display.lineTo(w, y0);\n        display.lineTo(w, y1);\n        display.lineTo(0, y1);\n        display.lineTo(0, y0);\n      });\n    }\n  });\n  /**\r\n   * Converts relative position (0-1) on axis to a pixel coordinate.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinate (px)\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"positionToCoordinate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      if (!this._inversed) {\n        return (this._end - position) * this._axisLength;\n      } else {\n        return (position - this._start) * this._axisLength;\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"positionTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, position) {\n      this._positionTooltip(tooltip, {\n        x: 0,\n        y: this.positionToCoordinate(position)\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"updateTooltipBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip) {\n      var inside = this.get(\"inside\");\n      var num = 100000;\n\n      var global = this._display.toGlobal({\n        x: 0,\n        y: 0\n      });\n\n      var y = global.y;\n      var x = 0;\n      var h = this.axisLength();\n      var w = num;\n      var pointerOrientation = \"right\";\n\n      if (this.get(\"opposite\")) {\n        if (inside) {\n          pointerOrientation = \"right\";\n          x = global.x - num;\n          w = num;\n        } else {\n          pointerOrientation = \"left\";\n          x = global.x;\n          w = num;\n        }\n      } else {\n        if (inside) {\n          pointerOrientation = \"left\";\n          x = global.x;\n          w = num;\n        } else {\n          pointerOrientation = \"right\";\n          x = global.x - num;\n          w = num;\n        }\n      }\n\n      var bounds = {\n        left: x,\n        right: x + w,\n        top: y,\n        bottom: y + h\n      };\n      var oldBounds = tooltip.get(\"bounds\");\n\n      if (!$utils.sameBounds(bounds, oldBounds)) {\n        tooltip.set(\"bounds\", bounds);\n        tooltip.set(\"pointerOrientation\", pointerOrientation);\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererY.prototype, \"_updateLC\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var axis = this.axis;\n      var parent = axis.parent;\n\n      if (parent) {\n        var h = parent.innerHeight();\n        this._lc = this.axisLength() / h;\n        this._ls = axis.y() / h;\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"toAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      var start = this._start || 0;\n      var end = this._end || 1;\n      position -= this._ls;\n      position = position * (end - start) / this._lc;\n\n      if (this.get(\"inversed\")) {\n        position = start + position;\n      } else {\n        position = end - position;\n      }\n\n      return position;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(AxisRendererY.prototype, \"fixPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      if (!this.get(\"inversed\")) {\n        return 1 - position;\n      }\n\n      return position;\n    }\n  });\n  Object.defineProperty(AxisRendererY, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"AxisRendererY\"\n  });\n  Object.defineProperty(AxisRendererY, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\n  });\n  return AxisRendererY;\n}(AxisRenderer);\n\nexport { AxisRendererY };","map":{"version":3,"mappings":"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","names":["AxisRenderer","p100","$type","$utils","Rectangle","__extends","Object","new","_this","_root","height","isMeasured","themeTags","_settings","mergeTags","opposite","push","_super","_afterNew","call","setPrivateRaw","gridTemplate","grid","template","set","display","graphics","moveTo","lineTo","width","renderer","point1","point2","y","_changed","axis","ghostLabel","setPrivate","get","thumb","inside","chart","isDirty","axisChildren","children","addTag","removeTag","rightAxesContainer","indexOf","moveValue","leftAxesContainer","_applyThemes","labels","each","label","root","_markDirtyRedraw","markDirtySize","w","labelsContainer","processAxis","horizontalLayout","axisHeader","gridContainer","relativeToValue","bulletsContainer","x","plotContainer","length","setAll","innerHeight","position","positionToCoordinate","endPosition","count","isNumber","location_1","undefined","toggleVisibility","location_2","tick","location_3","length_1","bullet","sprite","location_4","bulletPosition","roundAxisPosition","previousBullet","_bullets","d","previousSprite","fill","y0","y1","fillDrawMethod","h","_a","_inversed","_end","_axisLength","_start","tooltip","_positionTooltip","num","global","_display","toGlobal","axisLength","pointerOrientation","bounds","left","right","top","bottom","oldBounds","sameBounds","parent","_lc","_ls","start","end","classNames","concat","AxisRendererY","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/xy/axes/AxisRendererY.ts"],"sourcesContent":["import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tvar w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}