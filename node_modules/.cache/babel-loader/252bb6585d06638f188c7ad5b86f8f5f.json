{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { Container } from \"./Container\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { RoundedRectangle } from \"./RoundedRectangle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { color } from \"../util/Color\";\nimport * as $math from \"../util/Math\";\n\nvar SpriteResizer =\n/** @class */\nfunction (_super) {\n  __extends(SpriteResizer, _super);\n\n  function SpriteResizer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"rectangle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Rectangle.new(_this._root, {\n        themeTags: [\"rectangle\"],\n        fillOpacity: 0,\n        fill: color(0xFFFFFF)\n      }))\n    });\n    Object.defineProperty(_this, \"gripL\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._createGrip(\"left\")\n    });\n    Object.defineProperty(_this, \"gripR\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._createGrip(\"right\")\n    });\n    Object.defineProperty(_this, \"gripT\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._createGrip(\"top\")\n    });\n    Object.defineProperty(_this, \"gripB\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._createGrip(\"bottom\")\n    });\n    Object.defineProperty(_this, \"_is\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_ix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_iw\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_positionDP\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_isHover\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n\n  Object.defineProperty(SpriteResizer.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._afterNew.call(this);\n\n      this.addTag(\"resizer\");\n      this.set(\"visible\", false);\n      this.gripL.events.on(\"dragged\", function (e) {\n        _this._resize(e.target, -1);\n      });\n      this.gripR.events.on(\"dragged\", function (e) {\n        _this._resize(e.target, 1);\n      });\n      this.gripL.events.on(\"dragstart\", function (e) {\n        _this._resizeStart(e.target);\n      });\n      this.gripR.events.on(\"dragstart\", function (e) {\n        _this._resizeStart(e.target);\n      });\n      this.gripT.events.on(\"dragged\", function (e) {\n        _this._rotate(e, 90);\n      });\n      this.gripB.events.on(\"dragged\", function (e) {\n        _this._rotate(e, -90);\n      });\n      this.gripT.events.on(\"dragstart\", function (e) {\n        _this._resizeStart(e.target);\n      });\n      this.gripB.events.on(\"dragstart\", function (e) {\n        _this._resizeStart(e.target);\n      });\n    }\n  });\n  Object.defineProperty(SpriteResizer.prototype, \"_resizeStart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (grip) {\n      var sprite = this.get(\"sprite\");\n\n      if (sprite) {\n        this._is = sprite.get(\"scale\", 1);\n        this._ix = grip.x();\n        this._iw = this.width() / 2;\n      }\n    }\n  });\n  Object.defineProperty(SpriteResizer.prototype, \"_resize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (grip, c) {\n      var sprite = this.get(\"sprite\");\n\n      if (sprite) {\n        sprite.set(\"scale\", Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw)));\n\n        this._updatePositions();\n      }\n    }\n  });\n  Object.defineProperty(SpriteResizer.prototype, \"_rotate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (e, delta) {\n      var sprite = this.get(\"sprite\");\n\n      if (sprite) {\n        var parent_1 = this.parent;\n\n        if (parent_1) {\n          var rotationStep = this.get(\"rotationStep\", 10);\n          var angle = Math.round(($math.getAngle({\n            x: this.x(),\n            y: this.y()\n          }, parent_1.toLocal(e.point)) + delta) / rotationStep) * rotationStep;\n          sprite.set(\"rotation\", angle);\n\n          this._updatePositions();\n        }\n      }\n    }\n  });\n  Object.defineProperty(SpriteResizer.prototype, \"_createGrip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (themeTag) {\n      var container = this.children.push(Container.new(this._root, {\n        themeTags: [\"grip\", themeTag],\n        setStateOnChildren: true,\n        draggable: true\n      }));\n      container.children.push(RoundedRectangle.new(this._root, {\n        themeTags: [\"outline\"],\n        centerX: p50,\n        centerY: p50\n      }));\n      container.children.push(RoundedRectangle.new(this._root, {\n        centerX: p50,\n        centerY: p50\n      }));\n      return container;\n    }\n  });\n  Object.defineProperty(SpriteResizer.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._updateChildren.call(this);\n\n      if (this.isDirty(\"sprite\")) {\n        var sprite = this.get(\"sprite\");\n\n        if (sprite) {\n          this.show(0);\n          this.setPrivate(\"visible\", true);\n\n          this._updatePositions();\n\n          var parent_2 = sprite.parent;\n\n          if (parent_2) {\n            parent_2.children.moveValue(this, 0);\n          }\n\n          this._positionDP = sprite.events.on(\"positionchanged\", function () {\n            _this._updatePositions();\n          });\n        } else {\n          this.hide(0);\n          this.setPrivate(\"visible\", false);\n\n          if (this._positionDP) {\n            this._positionDP.dispose();\n          }\n        }\n      }\n\n      if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\n        this._updatePositions();\n      }\n    }\n  });\n  Object.defineProperty(SpriteResizer.prototype, \"_updatePositions\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var sprite = this.get(\"sprite\");\n\n      if (sprite) {\n        var bounds = sprite.localBounds();\n        var scale = sprite.get(\"scale\", 1);\n        var d = 20;\n        var w = (bounds.right - bounds.left) * scale + d;\n        var h = (bounds.bottom - bounds.top) * scale + d;\n        var a = sprite.get(\"rotation\", 0);\n        var rectangle = this.rectangle;\n        var cx = sprite.get(\"centerX\", p50);\n        var cy = sprite.get(\"centerY\", p50);\n        var cxr = 0;\n\n        if (cx instanceof Percent) {\n          cxr = cx.value;\n        }\n\n        var cyr = 0;\n\n        if (cy instanceof Percent) {\n          cyr = cy.value;\n        }\n\n        rectangle.setAll({\n          centerX: cx,\n          centerY: cy,\n          width: w,\n          height: h\n        });\n        this.setAll({\n          x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a),\n          y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a),\n          width: w,\n          height: h,\n          rotation: a\n        });\n        this.gripT.setAll({\n          x: (0.5 - cxr) * w,\n          y: -cyr * h\n        });\n        this.gripB.setAll({\n          x: (0.5 - cxr) * w,\n          y: (1 - cyr) * h\n        });\n        this.gripL.setAll({\n          x: -cxr * w,\n          y: (0.5 - cyr) * h\n        });\n        this.gripR.setAll({\n          x: (1 - cxr) * w,\n          y: (0.5 - cyr) * h\n        });\n        this.rectangle.setAll({\n          width: w,\n          height: h\n        });\n      }\n    }\n  });\n  Object.defineProperty(SpriteResizer, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"SpriteResizer\"\n  });\n  Object.defineProperty(SpriteResizer, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([SpriteResizer.className])\n  });\n  return SpriteResizer;\n}(Container);\n\nexport { SpriteResizer };","map":{"version":3,"mappings":"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","names":["Container","p50","Percent","RoundedRectangle","Rectangle","color","$math","__extends","Object","_this","children","push","new","_root","themeTags","fillOpacity","fill","_createGrip","_super","_afterNew","call","addTag","set","gripL","events","on","e","_resize","target","gripR","_resizeStart","gripT","_rotate","gripB","grip","sprite","get","_is","_ix","x","_iw","width","c","Math","max","_updatePositions","delta","parent_1","parent","rotationStep","angle","round","getAngle","y","toLocal","point","themeTag","container","setStateOnChildren","draggable","centerX","centerY","_updateChildren","isDirty","show","setPrivate","parent_2","moveValue","_positionDP","hide","dispose","bounds","localBounds","scale","d","w","right","left","h","bottom","top","a","rectangle","cx","cy","cxr","value","cyr","setAll","height","cos","sin","rotation","classNames","concat","SpriteResizer","className"],"sourceRoot":"","sources":["../../../../../src/.internal/core/render/SpriteResizer.ts"],"sourcesContent":["import type { Sprite, ISpritePointerEvent } from \"./Sprite\";\r\nimport type { IDisposer } from \"../util/Disposer\";\r\n\r\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { color } from \"../util/Color\";\r\n\r\nimport * as $math from \"../util/Math\";\r\n\r\nexport interface ISpriteResizerSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * Target [[Sprite]] element.\r\n\t */\r\n\tsprite?: Sprite\r\n\r\n\t/**\r\n\t * Rotation increment in degrees.\r\n\t * \r\n\t * @default 10\r\n\t */\r\n\trotationStep?: number;\r\n\r\n}\r\n\r\nexport interface ISpriteResizerPrivate extends IContainerPrivate {\r\n\r\n}\r\n\r\nexport interface ISpriteResizerEvents extends IContainerEvents {\r\n\r\n}\r\n\r\nexport class SpriteResizer extends Container {\r\n\r\n\tdeclare public _settings: ISpriteResizerSettings;\r\n\tdeclare public _privateSettings: ISpriteResizerPrivate;\r\n\tdeclare public _events: ISpriteResizerEvents;\r\n\r\n\tpublic static className: string = \"SpriteResizer\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([SpriteResizer.className]);\r\n\r\n\tpublic readonly rectangle: Rectangle = this.children.push(Rectangle.new(this._root, { themeTags: [\"rectangle\"], fillOpacity: 0, fill: color(0xFFFFFF) }));\r\n\tpublic readonly gripL: Container = this._createGrip(\"left\");\r\n\tpublic readonly gripR: Container = this._createGrip(\"right\");\r\n\tpublic readonly gripT: Container = this._createGrip(\"top\");\r\n\tpublic readonly gripB: Container = this._createGrip(\"bottom\");\r\n\r\n\tprotected _is: number = 1;\r\n\tprotected _ix: number = 0;\r\n\tprotected _iw: number = 0;\r\n\r\n\tprotected _positionDP?: IDisposer;\r\n\r\n\tprotected _isHover: boolean = false;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.addTag(\"resizer\");\r\n\t\tthis.set(\"visible\", false);\r\n\r\n\t\tthis.gripL.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._resize(e.target, -1);\r\n\t\t})\r\n\r\n\t\tthis.gripR.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._resize(e.target, 1);\r\n\t\t})\r\n\r\n\t\tthis.gripL.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripR.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripT.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._rotate(e, 90);\r\n\t\t})\r\n\r\n\t\tthis.gripB.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._rotate(e, -90);\r\n\t\t})\r\n\r\n\t\tthis.gripT.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripB.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _resizeStart(grip: Sprite) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tthis._is = sprite.get(\"scale\", 1);\r\n\t\t\tthis._ix = grip.x();\r\n\t\t\tthis._iw = this.width() / 2;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _resize(grip: Sprite, c: number) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\r\n\t\t\tsprite.set(\"scale\", Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw)));\r\n\t\t\tthis._updatePositions();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _rotate(e: ISpritePointerEvent, delta: number) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif (parent) {\r\n\r\n\t\t\t\tconst rotationStep = this.get(\"rotationStep\", 10);\r\n\t\t\t\tlet angle = Math.round((($math.getAngle({ x: this.x(), y: this.y() }, parent.toLocal(e.point)) + delta) / rotationStep)) * rotationStep;\r\n\t\t\t\tsprite.set(\"rotation\", angle);\r\n\t\t\t\tthis._updatePositions();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createGrip(themeTag: string) {\r\n\t\tconst container = this.children.push(Container.new(this._root, {\r\n\t\t\tthemeTags: [\"grip\", themeTag],\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tdraggable: true\r\n\t\t}))\r\n\r\n\t\tcontainer.children.push(RoundedRectangle.new(this._root, {\r\n\t\t\tthemeTags: [\"outline\"],\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50\r\n\t\t}))\r\n\r\n\t\tcontainer.children.push(RoundedRectangle.new(this._root, {\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50\r\n\t\t}));\r\n\t\treturn container;\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"sprite\")) {\r\n\t\t\tconst sprite = this.get(\"sprite\");\r\n\t\t\tif (sprite) {\r\n\t\t\t\tthis.show(0);\r\n\t\t\t\tthis.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\tthis._updatePositions();\r\n\r\n\t\t\t\tconst parent = sprite.parent;\r\n\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tparent.children.moveValue(this, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._positionDP = sprite.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._updatePositions();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hide(0);\r\n\t\t\t\tthis.setPrivate(\"visible\", false);\r\n\r\n\t\t\t\tif (this._positionDP) {\r\n\t\t\t\t\tthis._positionDP.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\r\n\t\t\tthis._updatePositions();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updatePositions() {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tlet bounds = sprite.localBounds();\r\n\t\t\tlet scale = sprite.get(\"scale\", 1);\r\n\t\t\tlet d = 20\r\n\t\t\tlet w = (bounds.right - bounds.left) * scale + d;\r\n\t\t\tlet h = (bounds.bottom - bounds.top) * scale + d;\r\n\t\t\tlet a = sprite.get(\"rotation\", 0);\r\n\r\n\t\t\tconst rectangle = this.rectangle;\r\n\r\n\t\t\tlet cx = sprite.get(\"centerX\", p50);\r\n\t\t\tlet cy = sprite.get(\"centerY\", p50);\r\n\r\n\t\t\tlet cxr = 0;\r\n\t\t\tif (cx instanceof Percent) {\r\n\t\t\t\tcxr = cx.value;\r\n\t\t\t}\r\n\r\n\t\t\tlet cyr = 0;\r\n\t\t\tif (cy instanceof Percent) {\r\n\t\t\t\tcyr = cy.value;\r\n\t\t\t}\r\n\r\n\t\t\trectangle.setAll({ centerX: cx, centerY: cy, width: w, height: h });\r\n\t\t\tthis.setAll({ x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a), y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a), width: w, height: h, rotation: a });\r\n\r\n\t\t\tthis.gripT.setAll({ x: (0.5 - cxr) * w, y: -cyr * h });\r\n\t\t\tthis.gripB.setAll({ x: (0.5 - cxr) * w, y: (1 - cyr) * h });\r\n\t\t\tthis.gripL.setAll({ x: -cxr * w, y: (0.5 - cyr) * h });\r\n\t\t\tthis.gripR.setAll({ x: (1 - cxr) * w, y: (0.5 - cyr) * h });\r\n\r\n\t\t\tthis.rectangle.setAll({ width: w, height: h });\r\n\t\t}\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}