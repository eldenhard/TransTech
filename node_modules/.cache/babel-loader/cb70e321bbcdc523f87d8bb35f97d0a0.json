{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\"; //import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\n\nvar XYCursor =\n/** @class */\nfunction (_super) {\n  __extends(XYCursor, _super);\n\n  function XYCursor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n     *\r\n     * @default Grid.new()\r\n     */\n\n\n    Object.defineProperty(_this, \"lineX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Grid.new(_this._root, {\n        themeTags: [\"x\"]\n      }))\n    });\n    /**\r\n     * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n     *\r\n     * @default Grid.new()\r\n     */\n\n    Object.defineProperty(_this, \"lineY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Grid.new(_this._root, {\n        themeTags: [\"y\"]\n      }))\n    });\n    /**\r\n     * An element that represents current selection.\r\n     *\r\n     * @default Graphics.new()\r\n     */\n\n    Object.defineProperty(_this, \"selection\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Graphics.new(_this._root, {\n        themeTags: [\"selection\", \"cursor\"],\n        layer: 30\n      }))\n    });\n    Object.defineProperty(_this, \"_movePoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_lastPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        x: 0,\n        y: 0\n      }\n    });\n    Object.defineProperty(_this, \"_tooltipX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_tooltipY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A chart cursor is attached to.\r\n     */\n\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(XYCursor.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\n      _super.prototype._afterNew.call(this);\n\n      this.setAll({\n        \"width\": p100,\n        height: p100,\n        isMeasured: true,\n        position: \"absolute\"\n      });\n      this.states.create(\"hidden\", {\n        visible: true,\n        opacity: 0\n      });\n\n      this._drawLines();\n\n      this.setPrivateRaw(\"visible\", false);\n\n      this._disposers.push(this.setTimeout(function () {\n        _this.setPrivate(\"visible\", true);\n      }, 500));\n\n      this.lineX.events.on(\"positionchanged\", function () {\n        _this._handleXLine();\n      });\n      this.lineY.events.on(\"positionchanged\", function () {\n        _this._handleYLine();\n      });\n      this.lineX.events.on(\"focus\", function (ev) {\n        return _this._handleLineFocus(ev.target);\n      });\n      this.lineX.events.on(\"blur\", function (ev) {\n        return _this._handleLineBlur(ev.target);\n      });\n      this.lineY.events.on(\"focus\", function (ev) {\n        return _this._handleLineFocus(ev.target);\n      });\n      this.lineY.events.on(\"blur\", function (ev) {\n        return _this._handleLineBlur(ev.target);\n      });\n\n      if ($utils.supports(\"keyboardevents\")) {\n        this._disposers.push($utils.addEventListener(document, \"keydown\", function (ev) {\n          _this._handleLineMove(ev.keyCode);\n        }));\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_setUpTouch\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var chart = this.chart;\n\n      if (chart) {\n        chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleXLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var x = this.lineX.x();\n      var visible = true;\n\n      if (x < 0 || x > this.width()) {\n        visible = false;\n      }\n\n      this.lineX.setPrivate(\"visible\", visible);\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleYLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var y = this.lineY.y();\n      var visible = true;\n\n      if (y < 0 || y > this.height()) {\n        visible = false;\n      }\n\n      this.lineY.setPrivate(\"visible\", visible);\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleLineMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (keyCode) {\n      var dir = \"\";\n      var position = 0;\n      var increment = 0.1;\n      var chart = this.chart;\n\n      if (this._root.focused(this.lineX)) {\n        if (chart && chart.xAxes.length) {\n          increment = chart.xAxes.getIndex(0).getCellWidthPosition();\n        }\n\n        position = this.getPrivate(\"positionX\", 0);\n        dir = \"positionX\";\n\n        if (keyCode == 37) {\n          position -= increment;\n        } else if (keyCode == 39) {\n          position += increment;\n        }\n      } else if (this._root.focused(this.lineY)) {\n        if (chart && chart.yAxes.length) {\n          increment = chart.yAxes.getIndex(0).getCellWidthPosition();\n        }\n\n        position = this.getPrivate(\"positionY\", 0);\n        dir = \"positionY\";\n\n        if (keyCode == 38) {\n          position -= increment;\n        } else if (keyCode == 40) {\n          position += increment;\n        }\n      }\n\n      if (position < 0) {\n        position = 0;\n      } else if (position > 1) {\n        position = 1;\n      }\n\n      if (dir != \"\") {\n        this.set(dir, position);\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleLineFocus\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_line) {\n      this.setAll({\n        positionX: this.getPrivate(\"positionX\"),\n        positionY: this.getPrivate(\"positionY\"),\n        alwaysShow: true\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleLineBlur\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_line) {\n      this.setAll({\n        positionX: undefined,\n        positionY: undefined,\n        alwaysShow: false\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      if (this.isDirty(\"xAxis\")) {\n        this._tooltipX = false;\n        var xAxis = this.get(\"xAxis\");\n\n        if (xAxis) {\n          var tooltip_1 = xAxis.get(\"tooltip\");\n\n          if (tooltip_1) {\n            this._tooltipX = true;\n            tooltip_1.on(\"pointTo\", function () {\n              _this._updateXLine(tooltip_1);\n            });\n          }\n        }\n      }\n\n      if (this.isDirty(\"yAxis\")) {\n        this._tooltipY = false;\n        var yAxis = this.get(\"yAxis\");\n\n        if (yAxis) {\n          var tooltip_2 = yAxis.get(\"tooltip\");\n\n          if (tooltip_2) {\n            this._tooltipY = true;\n            tooltip_2.on(\"pointTo\", function () {\n              _this._updateYLine(tooltip_2);\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleSyncWith\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var chart = this.chart;\n\n      if (chart) {\n        var syncWith = this.get(\"syncWith\");\n        var otherCharts_1 = [];\n\n        if (syncWith) {\n          $array.each(syncWith, function (cursor) {\n            var chart = cursor.chart;\n\n            if (chart) {\n              otherCharts_1.push(chart);\n            }\n          });\n        }\n\n        chart._otherCharts = otherCharts_1;\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateChildren.call(this);\n\n      this._handleSyncWith();\n\n      if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n        var positionX = this.get(\"positionX\");\n        var positionY = this.get(\"positionY\");\n\n        if (positionX == null && positionY == null) {\n          this.hide(0);\n        } else {\n          this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n          this.handleMove();\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateXLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip) {\n      var x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", {\n        x: 0,\n        y: 0\n      })).x, 2);\n\n      if (this._toX != x) {\n        this.lineX.animate({\n          key: \"x\",\n          to: x,\n          duration: tooltip.get(\"animationDuration\", 0),\n          easing: tooltip.get(\"animationEasing\")\n        });\n        this._toX = x;\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateYLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip) {\n      var y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", {\n        x: 0,\n        y: 0\n      })).y, 2);\n\n      if (this._toY != y) {\n        this.lineY.animate({\n          key: \"y\",\n          to: y,\n          duration: tooltip.get(\"animationDuration\", 0),\n          easing: tooltip.get(\"animationEasing\")\n        });\n        this._toY = y;\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_drawLines\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this.lineX.set(\"draw\", function (display) {\n        display.moveTo(0, 0);\n        display.lineTo(0, _this.height());\n      });\n      this.lineY.set(\"draw\", function (display) {\n        display.moveTo(0, 0);\n        display.lineTo(_this.width(), 0);\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_setChart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (chart) {\n      var _this = this;\n\n      this.chart = chart;\n\n      this._handleSyncWith();\n\n      var plotContainer = chart.plotContainer;\n      this.events.on(\"boundschanged\", function () {\n        _this._disposers.push(_this.setTimeout(function () {\n          if (_this.get(\"alwaysShow\")) {\n            _this._movePoint = _this.toGlobal(_this._getPoint(_this.get(\"positionX\", 0), _this.get(\"positionY\", 0)));\n\n            _this.handleMove();\n          }\n        }, 50));\n      }); //this._display.interactive = true;\n\n      if ($utils.supports(\"touchevents\")) {\n        this._disposers.push(plotContainer.events.on(\"click\", function (event) {\n          if ($utils.isTouchEvent(event.originalEvent)) {\n            _this._handleMove(event.originalEvent);\n          }\n        }));\n\n        this._setUpTouch();\n      }\n\n      this._disposers.push(plotContainer.events.on(\"pointerdown\", function (event) {\n        _this._handleCursorDown(event.originalEvent);\n      }));\n\n      this._disposers.push(plotContainer.events.on(\"globalpointerup\", function (event) {\n        _this._handleCursorUp(event.originalEvent);\n\n        if (!event.native && !_this.isHidden()) {\n          _this._handleMove(event.originalEvent);\n        }\n      }));\n\n      this._disposers.push(plotContainer.events.on(\"globalpointermove\", function (event) {\n        if (!_this.get(\"syncWith\")) {\n          if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && _this.isHidden()) {\n            // Ignore mouse movement if it originates on outside element and\n            // we're not dragging.\n            return;\n          }\n        }\n\n        _this._handleMove(event.originalEvent);\n      }));\n\n      var parent = this.parent;\n\n      if (parent) {\n        parent.children.moveValue(this.selection);\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_inPlot\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      var chart = this.chart;\n\n      if (chart) {\n        return chart.inPlot(point);\n      }\n\n      return false;\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleCursorDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      var rootPoint = this._root.documentPointToRoot({\n        x: event.clientX,\n        y: event.clientY\n      });\n\n      var local = this._display.toLocal(rootPoint);\n\n      var chart = this.chart;\n      this.selection.set(\"draw\", function () {});\n\n      if (chart && this._inPlot(local)) {\n        this._downPoint = local;\n\n        if (this.get(\"behavior\") != \"none\") {\n          this.selection.show();\n          var type = \"selectstarted\";\n\n          if (this.events.isEnabled(type)) {\n            this.events.dispatch(type, {\n              type: type,\n              target: this\n            });\n          }\n        }\n\n        var positionX = this._getPosition(local).x;\n\n        var positionY = this._getPosition(local).y;\n\n        this.setPrivate(\"downPositionX\", positionX);\n        this.setPrivate(\"downPositionY\", positionY);\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleCursorUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      // TODO: handle multitouch\n      if (this._downPoint) {\n        var behavior = this.get(\"behavior\", \"none\");\n\n        if (behavior != \"none\") {\n          if (behavior.charAt(0) === \"z\") {\n            this.selection.hide();\n          }\n\n          var rootPoint = this._root.documentPointToRoot({\n            x: event.clientX,\n            y: event.clientY\n          });\n\n          var local = this._display.toLocal(rootPoint);\n\n          var downPoint = this._downPoint;\n          var moveThreshold = this.get(\"moveThreshold\", 1);\n\n          if (local && downPoint) {\n            var dispatch = false;\n\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n              if (Math.abs(local.x - downPoint.x) > moveThreshold) {\n                dispatch = true;\n              }\n            }\n\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n              if (Math.abs(local.y - downPoint.y) > moveThreshold) {\n                dispatch = true;\n              }\n            }\n\n            if (dispatch) {\n              var type = \"selectended\";\n\n              if (this.events.isEnabled(type)) {\n                this.events.dispatch(type, {\n                  type: type,\n                  target: this\n                });\n              }\n            }\n          }\n        }\n      }\n\n      this._downPoint = undefined;\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      if (this.getPrivate(\"visible\")) {\n        var chart = this.chart;\n\n        if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n          this.set(\"forceHidden\", true);\n          return;\n        } else {\n          this.set(\"forceHidden\", false);\n        } // TODO: handle multitouch\n\n\n        var rootPoint = this._root.documentPointToRoot({\n          x: event.clientX,\n          y: event.clientY\n        });\n\n        var lastPoint = this._lastPoint;\n\n        if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n          return;\n        }\n\n        this._lastPoint = rootPoint;\n        this.handleMove({\n          x: rootPoint.x,\n          y: rootPoint.y\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_getPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return {\n        x: point.x / this.width(),\n        y: point.y / this.height()\n      };\n    }\n  });\n  /**\r\n   * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n   *\r\n   * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n   * the `\"cursormoved\"` event.\r\n   *\r\n   * @param  point      X/Y to move cursor to\r\n   * @param  skipEvent  Do not fire \"cursormoved\" event\r\n   */\n\n  Object.defineProperty(XYCursor.prototype, \"handleMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point, skipEvent) {\n      if (!point) {\n        point = this._movePoint;\n      }\n\n      var alwaysShow = this.get(\"alwaysShow\");\n\n      if (!point) {\n        this.hide(0);\n        return;\n      }\n\n      this._movePoint = point;\n\n      var local = this._display.toLocal(point);\n\n      var chart = this.chart;\n\n      if (chart && this._inPlot(local)) {\n        chart._movePoint = point;\n\n        if (this.isHidden()) {\n          this.show();\n          var behavior = this.get(\"behavior\", \"\");\n\n          if (behavior.charAt(0) == \"z\") {\n            this.selection.set(\"draw\", function () {});\n          }\n        }\n\n        var x = local.x;\n        var y = local.y;\n\n        var xyPos = this._getPosition(local);\n\n        this.setPrivate(\"point\", local);\n        var snapToSeries_1 = this.get(\"snapToSeries\");\n\n        if (this._downPoint) {\n          snapToSeries_1 = undefined;\n        }\n\n        var userPositionX = this.get(\"positionX\");\n        var positionX_1 = xyPos.x;\n\n        if ($type.isNumber(userPositionX)) {\n          positionX_1 = userPositionX;\n        }\n\n        var userPositionY = this.get(\"positionY\");\n        var positionY_1 = xyPos.y;\n\n        if ($type.isNumber(userPositionY)) {\n          positionY_1 = userPositionY;\n        }\n\n        this.setPrivate(\"positionX\", positionX_1);\n        this.setPrivate(\"positionY\", positionY_1);\n\n        var xy = this._getPoint(positionX_1, positionY_1);\n\n        x = xy.x;\n        y = xy.y;\n        chart.xAxes.each(function (axis) {\n          axis._handleCursorPosition(positionX_1, snapToSeries_1);\n\n          if (alwaysShow) {\n            axis.handleCursorShow();\n          }\n        });\n        chart.yAxes.each(function (axis) {\n          axis._handleCursorPosition(positionY_1, snapToSeries_1);\n\n          if (alwaysShow) {\n            axis.handleCursorShow();\n          }\n        });\n\n        if (!skipEvent) {\n          chart._handleCursorPosition();\n\n          var type = \"cursormoved\";\n\n          if (this.events.isEnabled(type)) {\n            this.events.dispatch(type, {\n              type: type,\n              target: this\n            });\n          }\n        }\n\n        this._updateLines(x, y);\n\n        chart.arrangeTooltips();\n      } else if (!this._downPoint) {\n        if (!alwaysShow) {\n          this.hide(0);\n          var type = \"cursorhidden\";\n\n          if (this.events.isEnabled(type)) {\n            this.events.dispatch(type, {\n              type: type,\n              target: this\n            });\n          }\n        }\n      }\n\n      if (this._downPoint && this.get(\"behavior\") != \"none\") {\n        this._updateSelection(local);\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_getPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (positionX, positionY) {\n      return {\n        x: this.width() * positionX,\n        y: this.height() * positionY\n      };\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateLines\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      if (!this._tooltipX) {\n        this.lineX.set(\"x\", x);\n      }\n\n      if (!this._tooltipY) {\n        this.lineY.set(\"y\", y);\n      }\n\n      this._drawLines();\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateSelection\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      var _this = this;\n\n      var selection = this.selection;\n      var behavior = this.get(\"behavior\");\n      var w = this.width();\n      var h = this.height();\n\n      if (point.x < 0) {\n        point.x = 0;\n      }\n\n      if (point.x > w) {\n        point.x = w;\n      }\n\n      if (point.y < 0) {\n        point.y = 0;\n      }\n\n      if (point.y > h) {\n        point.y = h;\n      }\n\n      selection.set(\"draw\", function (display) {\n        var downPoint = _this._downPoint;\n\n        if (downPoint) {\n          if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n            display.moveTo(downPoint.x, downPoint.y);\n            display.lineTo(downPoint.x, point.y);\n            display.lineTo(point.x, point.y);\n            display.lineTo(point.x, downPoint.y);\n            display.lineTo(downPoint.x, downPoint.y);\n          } else if (behavior === \"zoomX\" || behavior === \"selectX\") {\n            display.moveTo(downPoint.x, 0);\n            display.lineTo(downPoint.x, h);\n            display.lineTo(point.x, h);\n            display.lineTo(point.x, 0);\n            display.lineTo(downPoint.x, 0);\n          } else if (behavior === \"zoomY\" || behavior === \"selectY\") {\n            display.moveTo(0, downPoint.y);\n            display.lineTo(w, downPoint.y);\n            display.lineTo(w, point.y);\n            display.lineTo(0, point.y);\n            display.lineTo(0, downPoint.y);\n          }\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_onHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isHidden()) {\n        var chart = this.chart;\n\n        if (chart) {\n          chart.xAxes.each(function (axis) {\n            axis.handleCursorHide();\n          });\n          chart.yAxes.each(function (axis) {\n            axis.handleCursorHide();\n          });\n          chart.series.each(function (series) {\n            series.handleCursorHide();\n          });\n        }\n      }\n\n      _super.prototype._onHide.call(this);\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_onShow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this.isHidden()) {\n        var chart = this.chart;\n\n        if (chart) {\n          chart.xAxes.each(function (axis) {\n            axis.handleCursorShow();\n          });\n          chart.yAxes.each(function (axis) {\n            axis.handleCursorShow();\n          });\n        }\n      }\n\n      _super.prototype._onShow.call(this);\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._dispose.call(this);\n\n      this.selection.dispose();\n    }\n  });\n  Object.defineProperty(XYCursor, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"XYCursor\"\n  });\n  Object.defineProperty(XYCursor, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([XYCursor.className])\n  });\n  return XYCursor;\n}(Container);\n\nexport { XYCursor };","map":{"version":3,"mappings":"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","names":["Container","p100","Graphics","Grid","$type","$utils","$math","$array","$object","__extends","Object","_this","children","push","new","_root","themeTags","layer","x","y","_settings","mergeTags","_super","_afterNew","call","setAll","height","isMeasured","position","states","create","visible","opacity","_drawLines","setPrivateRaw","_disposers","setTimeout","setPrivate","lineX","events","on","_handleXLine","lineY","_handleYLine","ev","_handleLineFocus","target","_handleLineBlur","supports","addEventListener","document","_handleLineMove","keyCode","chart","plotContainer","_display","cancelTouch","get","width","dir","increment","focused","xAxes","length","getIndex","getCellWidthPosition","getPrivate","yAxes","set","_line","positionX","positionY","alwaysShow","undefined","_prepareChildren","isDirty","_tooltipX","xAxis","tooltip_1","_updateXLine","_tooltipY","yAxis","tooltip_2","_updateYLine","syncWith","otherCharts_1","each","cursor","_otherCharts","_updateChildren","_handleSyncWith","hide","_movePoint","toGlobal","_getPoint","handleMove","tooltip","round","toLocal","_toX","animate","key","to","duration","easing","_toY","display","moveTo","lineTo","event","isTouchEvent","originalEvent","_handleMove","_setUpTouch","_handleCursorDown","_handleCursorUp","native","isHidden","keys","_downPoints","parent","moveValue","selection","point","inPlot","rootPoint","documentPointToRoot","clientX","clientY","local","_inPlot","_downPoint","show","type","isEnabled","dispatch","_getPosition","behavior","charAt","downPoint","moveThreshold","Math","abs","lastPoint","_lastPoint","skipEvent","xyPos","snapToSeries_1","userPositionX","positionX_1","isNumber","userPositionY","positionY_1","xy","axis","_handleCursorPosition","handleCursorShow","_updateLines","arrangeTooltips","_updateSelection","w","h","handleCursorHide","series","_onHide","_onShow","_dispose","dispose","classNames","concat","XYCursor","className"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/xy/XYCursor.ts"],"sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t * \n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t});\n\n\t\tthis.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t});\n\n\t\tthis.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target));\n\t\tthis.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target));\n\n\t\tthis.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target));\n\t\tthis.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t * \n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}