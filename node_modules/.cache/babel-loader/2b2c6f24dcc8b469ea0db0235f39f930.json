{"ast":null,"code":"import { api } from '@/api/wagonPark';\nexport default {\n  data() {\n    return {\n      filters: {\n        is_active: false,\n        wagon_type: []\n      },\n      wagonTypes: ''\n    };\n  },\n\n  computed: {\n    activeWagonLabel() {\n      return this.filters.is_active ? 'Активный' : 'Неактивный';\n    }\n\n  },\n  methods: {\n    updateFilterData() {\n      this.$emit('updateFilters', this.filters);\n    }\n\n  },\n\n  mounted() {\n    const pretoken = JSON.parse(localStorage.getItem(\"vuex\"));\n    const token = pretoken.auth.user.token;\n    fetch(\"http://10.1.5.65/api/wagon-park/wagon-type/\", {\n      headers: {\n        \"Authorization\": `Basic ${token}`\n      },\n      method: \"GET\"\n    }).then(response => {\n      this.wagonTypes = response.data;\n\n      if (response.ok) {\n        return response.json().then(r => {\n          this.wagonTypes = r.data;\n          console.log(this.wagonTypes);\n        });\n      } else {\n        console.log(\"NOT OK\");\n      }\n    }), this.updateFilterData();\n  } // mounted: function() {\n  //     this.updateFilterData()\n  // }\n\n\n};","map":{"version":3,"mappings":"AAyCA;AACA;EACAA;IACA;MACAC;QACAC,gBADA;QAEAC;MAFA,CADA;MAKAC;IALA;EAOA,CATA;;EAUAC;IACAC;MACA;IACA;;EAHA,CAVA;EAeAC;IACAC;MACA;IACA;;EAHA,CAfA;;EAoBAC;IACA;IACA;IACAC;MACAC;QACA;MADA,CADA;MAIAC;IAJA,GAMAC,IANA,CAMAC;MACA;;MACA;QACA;UACA;UACAC;QACA,CAHA;MAIA,CALA,MAMA;QACAA;MACA;IACA,CAjBA,GAkBA,uBAlBA;EAoBA,CA3CA,CA4CA;EACA;EACA;;;AA9CA","names":["data","filters","is_active","wagon_type","wagonTypes","computed","activeWagonLabel","methods","updateFilterData","mounted","fetch","headers","method","then","response","console"],"sourceRoot":"src/components/filter","sources":["FilterWagon.vue"],"sourcesContent":["<template>\r\n    <div style=\"margin: 1%;\">\r\n        <table>\r\n            <tr>\r\n                <td style=\"width: 150px !important; height: 80px !important;\"> \r\n    <p>Используется</p>\r\n    <input \r\n        type=\"checkbox\" \r\n        id=\"activeWagon\" \r\n        v-model=\"filters.is_active\"\r\n        @change=\"updateFilterData\">       \r\n     <label for=\"activeWagon\"> {{ activeWagonLabel }}</label>\r\n    \r\n    </td>\r\n\r\n<td style=\"width: 150px !important; height: 80px !important;\">\r\n    <p>Тип</p>\r\n \r\n    <select v-model=\"filters.wagon_type\"  @change=\"updateFilterData\">\r\n    <option\r\n        v-for=\"wagType in wagonTypes\" :key=\"wagType.id\">\r\n        {{wagType.name}}\r\n    </option>\r\n    </select>\r\n</td>\r\n<td style=\"width: 150px !important; height: 80px !important;\">\r\n    <p>Тип</p>\r\n\r\n</td>\r\n    <!-- <td style=\"width: 150px !important; height: 80px !important;\"> \r\n    <p>Номер вагона</p>\r\n    <input type=\"number\" v-model=\"filters.number\" @input=\"updateFilterData\">\r\n    </td> -->\r\n </tr>\r\n\r\n        </table>\r\n      \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {api} from '@/api/wagonPark'\r\nexport default{\r\n    data(){\r\n        return{\r\n            filters: {\r\n                is_active: false,\r\n                wagon_type: []\r\n            },\r\n            wagonTypes: ''\r\n        }\r\n    },\r\n    computed: {\r\n        activeWagonLabel(){\r\n            return this.filters.is_active ? 'Активный' : 'Неактивный'\r\n        }\r\n    },\r\n    methods: {\r\n        updateFilterData(){\r\n            this.$emit('updateFilters', this.filters)\r\n        },\r\n    },\r\n    mounted(){\r\n        const pretoken = JSON.parse(localStorage.getItem(\"vuex\"));\r\n            const token = pretoken.auth.user.token;\r\n            fetch(\"http://10.1.5.65/api/wagon-park/wagon-type/\", {\r\n                headers: {\r\n                    \"Authorization\": `Basic ${token}`\r\n                },\r\n                method: \"GET\"\r\n            })\r\n                .then((response) => {\r\n                    this.wagonTypes = response.data;\r\n                if (response.ok) {\r\n                    return response.json().then(r => {\r\n                        this.wagonTypes = r.data;\r\n                        console.log(this.wagonTypes);\r\n                    });\r\n                }\r\n                else {\r\n                    console.log(\"NOT OK\");\r\n                }\r\n            }),\r\n            this.updateFilterData()\r\n\r\n    }\r\n    // mounted: function() {\r\n    //     this.updateFilterData()\r\n    // }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}