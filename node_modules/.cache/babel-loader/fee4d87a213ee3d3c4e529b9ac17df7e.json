{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { PercentSeries } from \"../percent/PercentSeries\";\nimport { Template } from \"../../core/util/Template\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Tick } from \"../../core/render/Tick\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\n\nvar PieSeries =\n/** @class */\nfunction (_super) {\n  __extends(PieSeries, _super);\n\n  function PieSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(PieSeries.prototype, \"_makeSlices\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      return new ListTemplate(Template.new({}), function () {\n        return Slice._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\n        }, [_this.slices.template]);\n      });\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"_makeLabels\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      return new ListTemplate(Template.new({}), function () {\n        return RadialLabel._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\n        }, [_this.labels.template]);\n      });\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"_makeTicks\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      return new ListTemplate(Template.new({}), function () {\n        return Tick._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\n        }, [_this.ticks.template]);\n      });\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"processDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n\n      _super.prototype.processDataItem.call(this, dataItem);\n\n      var slice = this.makeSlice(dataItem);\n      slice.on(\"scale\", function () {\n        _this._updateTick(dataItem);\n      });\n      slice.on(\"shiftRadius\", function () {\n        _this._updateTick(dataItem);\n      });\n      slice.events.on(\"positionchanged\", function () {\n        _this._updateTick(dataItem);\n      });\n      var label = this.makeLabel(dataItem);\n      label.events.on(\"positionchanged\", function () {\n        _this._updateTick(dataItem);\n      });\n      this.makeTick(dataItem);\n      slice.events.on(\"positionchanged\", function () {\n        label.markDirty();\n      });\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"_getNextUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var chart = this.chart;\n\n      if (chart) {\n        return chart._maxRadius;\n      }\n\n      return this.labelsContainer.maxHeight() / 2;\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"_getNextDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var chart = this.chart;\n\n      if (chart) {\n        return -chart._maxRadius;\n      }\n\n      return -this.labelsContainer.maxHeight() / 2;\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      var chart = this.chart;\n\n      if (chart) {\n        if (this.isDirty(\"alignLabels\")) {\n          var labelsTemplate = this.labels.template;\n\n          if (this.get(\"alignLabels\")) {\n            labelsTemplate.set(\"textType\", \"aligned\");\n          } else {\n            var textType = labelsTemplate.get(\"textType\");\n\n            if (textType == null || textType == \"aligned\") {\n              labelsTemplate.set(\"textType\", \"adjusted\");\n            }\n          }\n        }\n\n        if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\n          this.markDirtyBounds();\n          var startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\n          var endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\n          var arc_1 = endAngle - startAngle;\n          var currentAngle_1 = startAngle;\n          var radius_1 = chart.radius(this);\n          this.setPrivateRaw(\"radius\", radius_1);\n          var innerRadius_1 = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\n\n          if (innerRadius_1 < 0) {\n            innerRadius_1 = radius_1 + innerRadius_1;\n          } //if (radius > 0) {\n\n\n          $array.each(this._dataItems, function (dataItem) {\n            _this.updateLegendValue(dataItem);\n\n            var currentArc = arc_1 * dataItem.get(\"valuePercentTotal\") / 100;\n            var slice = dataItem.get(\"slice\");\n\n            if (slice) {\n              slice.set(\"radius\", radius_1);\n              slice.set(\"innerRadius\", innerRadius_1);\n              slice.set(\"startAngle\", currentAngle_1);\n              slice.set(\"arc\", currentArc);\n              var color = dataItem.get(\"fill\");\n\n              slice._setDefault(\"fill\", color);\n\n              slice._setDefault(\"stroke\", color);\n            }\n\n            var middleAngle = $math.normalizeAngle(currentAngle_1 + currentArc / 2);\n            var label = dataItem.get(\"label\");\n\n            if (label) {\n              label.setPrivate(\"radius\", radius_1);\n              label.setPrivate(\"innerRadius\", innerRadius_1);\n              label.set(\"labelAngle\", middleAngle);\n\n              if (label.get(\"textType\") == \"aligned\") {\n                var labelRadius = radius_1 + label.get(\"radius\", 0);\n                var y = radius_1 * $math.sin(middleAngle);\n\n                if (middleAngle > 90 && middleAngle <= 270) {\n                  if (!label.isHidden() && !label.isHiding()) {\n                    _this._lLabels.push({\n                      label: label,\n                      y: y\n                    });\n                  }\n\n                  labelRadius *= -1;\n                  labelRadius -= _this.labelsContainer.get(\"paddingLeft\", 0);\n                  label.set(\"centerX\", p100);\n                  label.setPrivateRaw(\"left\", true);\n                } else {\n                  if (!label.isHidden() && !label.isHiding()) {\n                    _this._rLabels.push({\n                      label: label,\n                      y: y\n                    });\n                  }\n\n                  labelRadius += _this.labelsContainer.get(\"paddingRight\", 0);\n                  label.set(\"centerX\", 0);\n                  label.setPrivateRaw(\"left\", false);\n                }\n\n                label.set(\"x\", labelRadius);\n                label.set(\"y\", radius_1 * $math.sin(middleAngle));\n              }\n            }\n\n            currentAngle_1 += currentArc;\n\n            _this._updateTick(dataItem);\n          }); //}\n        }\n      }\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"_updateTick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var tick = dataItem.get(\"tick\");\n      var label = dataItem.get(\"label\");\n      var slice = dataItem.get(\"slice\");\n      var location = tick.get(\"location\", 1);\n\n      if (tick && label && slice) {\n        var radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\n        var labelAngle = label.get(\"labelAngle\", 0);\n        var cos = $math.cos(labelAngle);\n        var sin = $math.sin(labelAngle);\n        var labelsContainer = this.labelsContainer;\n        var pl = labelsContainer.get(\"paddingLeft\", 0);\n        var pr = labelsContainer.get(\"paddingRight\", 0);\n        var x = 0;\n        var y = 0;\n        x = label.x();\n        y = label.y();\n\n        if (label.get(\"textType\") == \"circular\") {\n          var labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\n          var labelAngle_1 = label.get(\"labelAngle\", 0);\n          x = labelRadius * $math.cos(labelAngle_1);\n          y = labelRadius * $math.sin(labelAngle_1);\n        }\n\n        var dx = -pr;\n\n        if (label.getPrivate(\"left\")) {\n          dx = pl;\n        }\n\n        tick.set(\"points\", [{\n          x: slice.x() + radius * cos,\n          y: slice.y() + radius * sin\n        }, {\n          x: x + dx,\n          y: y\n        }, {\n          x: x,\n          y: y\n        }]);\n      }\n    }\n  });\n  Object.defineProperty(PieSeries.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet) {\n      var sprite = bullet.get(\"sprite\");\n\n      if (sprite) {\n        var dataItem = sprite.dataItem;\n        var slice = dataItem.get(\"slice\");\n\n        if (slice) {\n          var innerRadius = slice.get(\"innerRadius\", 0);\n          var radius = slice.get(\"radius\", 0);\n          var startAngle = slice.get(\"startAngle\", 0);\n          var arc = slice.get(\"arc\", 0);\n          var locationX = bullet.get(\"locationX\", 0.5);\n          var locationY = bullet.get(\"locationY\", 0.5);\n          var angle = startAngle + arc * locationX;\n          var r = innerRadius + (radius - innerRadius) * locationY;\n          sprite.setAll({\n            x: $math.cos(angle) * r,\n            y: $math.sin(angle) * r\n          });\n        }\n      }\n    }\n  });\n  Object.defineProperty(PieSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"PieSeries\"\n  });\n  Object.defineProperty(PieSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: PercentSeries.classNames.concat([PieSeries.className])\n  });\n  return PieSeries;\n}(PercentSeries);\n\nexport { PieSeries };","map":{"version":3,"mappings":";;AAGA,SAASA,aAAT,QAAqG,0BAArG;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,IAAT,QAA8B,yBAA9B;AAGA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AA8CA;;;;;;;AAMA;AAAA;AAAA;EAA+BC;;EAA/B;;EAgPC;;;;;;WAlOA;MAAA;;MACC,OAAO,IAAIL,YAAJ,CACNJ,QAAQ,CAACU,GAAT,CAAa,EAAb,CADM,EAEN;QAAM,YAAK,CAACC,IAAN,CAAWC,KAAI,CAACC,KAAhB,EAAuB;UAC5BC,SAAS,EAAEN,MAAM,CAACO,SAAP,CAAiBH,KAAI,CAACI,MAAL,CAAYC,QAAZ,CAAqBC,GAArB,CAAyB,WAAzB,EAAsC,EAAtC,CAAjB,EAA4D,CAAC,KAAD,EAAQ,QAAR,CAA5D;QADiB,CAAvB,EAEH,CAACN,KAAI,CAACI,MAAL,CAAYC,QAAb,CAFG;MAEoB,CAJpB,CAAP;IAMA;;;;;;WAED;MAAA;;MACC,OAAO,IAAIb,YAAJ,CACNJ,QAAQ,CAACU,GAAT,CAAa,EAAb,CADM,EAEN;QAAM,kBAAW,CAACC,IAAZ,CAAiBC,KAAI,CAACC,KAAtB,EAA6B;UAClCC,SAAS,EAAEN,MAAM,CAACO,SAAP,CAAiBH,KAAI,CAACO,MAAL,CAAYF,QAAZ,CAAqBC,GAArB,CAAyB,WAAzB,EAAsC,EAAtC,CAAjB,EAA4D,CAAC,KAAD,EAAQ,QAAR,CAA5D;QADuB,CAA7B,EAEH,CAACN,KAAI,CAACO,MAAL,CAAYF,QAAb,CAFG;MAEoB,CAJpB,CAAP;IAMA;;;;;;WAED;MAAA;;MACC,OAAO,IAAIb,YAAJ,CACNJ,QAAQ,CAACU,GAAT,CAAa,EAAb,CADM,EAEN;QAAM,WAAI,CAACC,IAAL,CAAUC,KAAI,CAACC,KAAf,EAAsB;UAC3BC,SAAS,EAAEN,MAAM,CAACO,SAAP,CAAiBH,KAAI,CAACQ,KAAL,CAAWH,QAAX,CAAoBC,GAApB,CAAwB,WAAxB,EAAqC,EAArC,CAAjB,EAA2D,CAAC,KAAD,EAAQ,QAAR,CAA3D;QADgB,CAAtB,EAEH,CAACN,KAAI,CAACQ,KAAL,CAAWH,QAAZ,CAFG;MAEmB,CAJnB,CAAP;IAMA;;;;;;WAED,UAA0BI,QAA1B,EAAuE;MAAvE;;MACCC,iBAAMC,eAAN,CAAqBC,IAArB,CAAqB,IAArB,EAAsBH,QAAtB;;MAEA,IAAMI,KAAK,GAAG,KAAKC,SAAL,CAAeL,QAAf,CAAd;MAEAI,KAAK,CAACE,EAAN,CAAS,OAAT,EAAkB;QACjBf,KAAI,CAACgB,WAAL,CAAiBP,QAAjB;MACA,CAFD;MAGAI,KAAK,CAACE,EAAN,CAAS,aAAT,EAAwB;QACvBf,KAAI,CAACgB,WAAL,CAAiBP,QAAjB;MACA,CAFD;MAGAI,KAAK,CAACI,MAAN,CAAaF,EAAb,CAAgB,iBAAhB,EAAmC;QAClCf,KAAI,CAACgB,WAAL,CAAiBP,QAAjB;MACA,CAFD;MAIA,IAAMS,KAAK,GAAG,KAAKC,SAAL,CAAeV,QAAf,CAAd;MAEAS,KAAK,CAACD,MAAN,CAAaF,EAAb,CAAgB,iBAAhB,EAAmC;QAClCf,KAAI,CAACgB,WAAL,CAAiBP,QAAjB;MACA,CAFD;MAIA,KAAKW,QAAL,CAAcX,QAAd;MAEAI,KAAK,CAACI,MAAN,CAAaF,EAAb,CAAgB,iBAAhB,EAAmC;QAClCG,KAAK,CAACG,SAAN;MACA,CAFD;IAGA;;;;;;WAED;MACC,IAAMC,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIA,KAAJ,EAAW;QACV,OAAOA,KAAK,CAACC,UAAb;MACA;;MACD,OAAO,KAAKC,eAAL,CAAqBC,SAArB,KAAmC,CAA1C;IACA;;;;;;WAED;MACC,IAAMH,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIA,KAAJ,EAAW;QACV,OAAO,CAACA,KAAK,CAACC,UAAd;MACA;;MACD,OAAO,CAAC,KAAKC,eAAL,CAAqBC,SAArB,EAAD,GAAoC,CAA3C;IAEA;;;;;;WAED;MAAA;;MACCf,iBAAMgB,gBAAN,CAAsBd,IAAtB,CAAsB,IAAtB;;MACA,IAAMU,KAAK,GAAG,KAAKA,KAAnB;;MACA,IAAIA,KAAJ,EAAW;QAEV,IAAI,KAAKK,OAAL,CAAa,aAAb,CAAJ,EAAiC;UAChC,IAAIC,cAAc,GAAG,KAAKrB,MAAL,CAAYF,QAAjC;;UAEA,IAAI,KAAKC,GAAL,CAAS,aAAT,CAAJ,EAA6B;YAC5BsB,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,SAA/B;UACA,CAFD,MAGK;YACJ,IAAIC,QAAQ,GAAGF,cAAc,CAACtB,GAAf,CAAmB,UAAnB,CAAf;;YACA,IAAIwB,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAI,SAApC,EAA+C;cAC9CF,cAAc,CAACC,GAAf,CAAmB,UAAnB,EAA+B,UAA/B;YACA;UACD;QACD;;QAGD,IAAI,KAAKE,YAAL,IAAqB,KAAKJ,OAAL,CAAa,QAAb,CAArB,IAA+C,KAAKA,OAAL,CAAa,aAAb,CAA/C,IAA8E,KAAKA,OAAL,CAAa,YAAb,CAA9E,IAA4G,KAAKA,OAAL,CAAa,UAAb,CAA5G,IAAwI,KAAKA,OAAL,CAAa,aAAb,CAA5I,EAAyK;UACxK,KAAKK,eAAL;UACA,IAAMC,UAAU,GAAG,KAAK3B,GAAL,CAAS,YAAT,EAAuBgB,KAAK,CAAChB,GAAN,CAAU,YAAV,EAAwB,CAAC,EAAzB,CAAvB,CAAnB;UACA,IAAM4B,QAAQ,GAAG,KAAK5B,GAAL,CAAS,UAAT,EAAqBgB,KAAK,CAAChB,GAAN,CAAU,UAAV,EAAsB,GAAtB,CAArB,CAAjB;UACA,IAAM6B,KAAG,GAAGD,QAAQ,GAAGD,UAAvB;UACA,IAAIG,cAAY,GAAGH,UAAnB;UAEA,IAAMI,QAAM,GAAGf,KAAK,CAACgB,MAAN,CAAa,IAAb,CAAf;UACA,KAAKC,aAAL,CAAmB,QAAnB,EAA6BF,QAA7B;UACA,IAAIG,aAAW,GAAGlB,KAAK,CAACmB,WAAN,CAAkB,IAAlB,IAA0BnB,KAAK,CAACoB,UAAN,CAAiB,YAAjB,EAA+B,CAA/B,CAA5C;;UAEA,IAAIF,aAAW,GAAG,CAAlB,EAAqB;YACpBA,aAAW,GAAGH,QAAM,GAAGG,aAAvB;UACA,CAbuK,CAexK;;;UACA9C,MAAM,CAACiD,IAAP,CAAY,KAAKC,UAAjB,EAA6B,UAACnC,QAAD,EAAS;YAErCT,KAAI,CAAC6C,iBAAL,CAAuBpC,QAAvB;;YAEA,IAAIqC,UAAU,GAAGX,KAAG,GAAG1B,QAAQ,CAACH,GAAT,CAAa,mBAAb,CAAN,GAA0C,GAA3D;YACA,IAAMO,KAAK,GAAGJ,QAAQ,CAACH,GAAT,CAAa,OAAb,CAAd;;YACA,IAAIO,KAAJ,EAAW;cACVA,KAAK,CAACgB,GAAN,CAAU,QAAV,EAAoBQ,QAApB;cACAxB,KAAK,CAACgB,GAAN,CAAU,aAAV,EAAyBW,aAAzB;cACA3B,KAAK,CAACgB,GAAN,CAAU,YAAV,EAAwBO,cAAxB;cAEAvB,KAAK,CAACgB,GAAN,CAAU,KAAV,EAAiBiB,UAAjB;cAEA,IAAMC,KAAK,GAAGtC,QAAQ,CAACH,GAAT,CAAa,MAAb,CAAd;;cACAO,KAAK,CAACmC,WAAN,CAAkB,MAAlB,EAA0BD,KAA1B;;cACAlC,KAAK,CAACmC,WAAN,CAAkB,QAAlB,EAA4BD,KAA5B;YACA;;YAED,IAAIE,WAAW,GAAGtD,KAAK,CAACuD,cAAN,CAAqBd,cAAY,GAAGU,UAAU,GAAG,CAAjD,CAAlB;YAEA,IAAM5B,KAAK,GAAGT,QAAQ,CAACH,GAAT,CAAa,OAAb,CAAd;;YACA,IAAIY,KAAJ,EAAW;cACVA,KAAK,CAACiC,UAAN,CAAiB,QAAjB,EAA2Bd,QAA3B;cACAnB,KAAK,CAACiC,UAAN,CAAiB,aAAjB,EAAgCX,aAAhC;cACAtB,KAAK,CAACW,GAAN,CAAU,YAAV,EAAwBoB,WAAxB;;cAEA,IAAI/B,KAAK,CAACZ,GAAN,CAAU,UAAV,KAAyB,SAA7B,EAAwC;gBACvC,IAAI8C,WAAW,GAAGf,QAAM,GAAGnB,KAAK,CAACZ,GAAN,CAAU,QAAV,EAAoB,CAApB,CAA3B;gBACA,IAAI+C,CAAC,GAAGhB,QAAM,GAAG1C,KAAK,CAAC2D,GAAN,CAAUL,WAAV,CAAjB;;gBAEA,IAAIA,WAAW,GAAG,EAAd,IAAoBA,WAAW,IAAI,GAAvC,EAA4C;kBAC3C,IAAI,CAAC/B,KAAK,CAACqC,QAAN,EAAD,IAAqB,CAACrC,KAAK,CAACsC,QAAN,EAA1B,EAA4C;oBAC3CxD,KAAI,CAACyD,QAAL,CAAcC,IAAd,CAAmB;sBAAExC,KAAK,EAAEA,KAAT;sBAAgBmC,CAAC,EAAEA;oBAAnB,CAAnB;kBACA;;kBACDD,WAAW,IAAI,CAAC,CAAhB;kBACAA,WAAW,IAAIpD,KAAI,CAACwB,eAAL,CAAqBlB,GAArB,CAAyB,aAAzB,EAAwC,CAAxC,CAAf;kBACAY,KAAK,CAACW,GAAN,CAAU,SAAV,EAAqBpC,IAArB;kBACAyB,KAAK,CAACqB,aAAN,CAAoB,MAApB,EAA4B,IAA5B;gBACA,CARD,MASK;kBACJ,IAAI,CAACrB,KAAK,CAACqC,QAAN,EAAD,IAAqB,CAACrC,KAAK,CAACsC,QAAN,EAA1B,EAA4C;oBAC3CxD,KAAI,CAAC2D,QAAL,CAAcD,IAAd,CAAmB;sBAAExC,KAAK,EAAEA,KAAT;sBAAgBmC,CAAC,EAAEA;oBAAnB,CAAnB;kBACA;;kBACDD,WAAW,IAAIpD,KAAI,CAACwB,eAAL,CAAqBlB,GAArB,CAAyB,cAAzB,EAAyC,CAAzC,CAAf;kBACAY,KAAK,CAACW,GAAN,CAAU,SAAV,EAAqB,CAArB;kBACAX,KAAK,CAACqB,aAAN,CAAoB,MAApB,EAA4B,KAA5B;gBACA;;gBACDrB,KAAK,CAACW,GAAN,CAAU,GAAV,EAAeuB,WAAf;gBACAlC,KAAK,CAACW,GAAN,CAAU,GAAV,EAAeQ,QAAM,GAAG1C,KAAK,CAAC2D,GAAN,CAAUL,WAAV,CAAxB;cACA;YACD;;YACDb,cAAY,IAAIU,UAAhB;;YACA9C,KAAI,CAACgB,WAAL,CAAiBP,QAAjB;UACA,CArDD,EAhBwK,CAsExK;QACA;MACD;IACD;;;;;;WAED,UAAsBA,QAAtB,EAAmE;MAClE,IAAMmD,IAAI,GAAGnD,QAAQ,CAACH,GAAT,CAAa,MAAb,CAAb;MACA,IAAMY,KAAK,GAAGT,QAAQ,CAACH,GAAT,CAAa,OAAb,CAAd;MACA,IAAMO,KAAK,GAAGJ,QAAQ,CAACH,GAAT,CAAa,OAAb,CAAd;MACA,IAAMuD,QAAQ,GAAGD,IAAI,CAACtD,GAAL,CAAS,UAAT,EAAqB,CAArB,CAAjB;;MACA,IAAIsD,IAAI,IAAI1C,KAAR,IAAiBL,KAArB,EAA4B;QAC3B,IAAMyB,MAAM,GAAG,CAACzB,KAAK,CAACP,GAAN,CAAU,aAAV,EAAyB,CAAzB,IAA8BO,KAAK,CAACP,GAAN,CAAU,QAAV,EAAoB,CAApB,CAA/B,IAAyDO,KAAK,CAACP,GAAN,CAAU,OAAV,EAAmB,CAAnB,CAAzD,GAAiFuD,QAAhG;QACA,IAAMC,UAAU,GAAG5C,KAAK,CAACZ,GAAN,CAAU,YAAV,EAAwB,CAAxB,CAAnB;QACA,IAAMyD,GAAG,GAAGpE,KAAK,CAACoE,GAAN,CAAUD,UAAV,CAAZ;QACA,IAAMR,GAAG,GAAG3D,KAAK,CAAC2D,GAAN,CAAUQ,UAAV,CAAZ;QAEA,IAAMtC,eAAe,GAAG,KAAKA,eAA7B;QACA,IAAMwC,EAAE,GAAGxC,eAAe,CAAClB,GAAhB,CAAoB,aAApB,EAAmC,CAAnC,CAAX;QACA,IAAM2D,EAAE,GAAGzC,eAAe,CAAClB,GAAhB,CAAoB,cAApB,EAAoC,CAApC,CAAX;QAEA,IAAI4D,CAAC,GAAG,CAAR;QACA,IAAIb,CAAC,GAAG,CAAR;QAEAa,CAAC,GAAGhD,KAAK,CAACgD,CAAN,EAAJ;QACAb,CAAC,GAAGnC,KAAK,CAACmC,CAAN,EAAJ;;QAEA,IAAInC,KAAK,CAACZ,GAAN,CAAU,UAAV,KAAyB,UAA7B,EAAyC;UACxC,IAAM8C,WAAW,GAAGlC,KAAK,CAACoB,MAAN,KAAiBpB,KAAK,CAACZ,GAAN,CAAU,eAAV,EAA2B,CAA3B,CAArC;UACA,IAAM6D,YAAU,GAAGjD,KAAK,CAACZ,GAAN,CAAU,YAAV,EAAwB,CAAxB,CAAnB;UACA4D,CAAC,GAAGd,WAAW,GAAGzD,KAAK,CAACoE,GAAN,CAAUI,YAAV,CAAlB;UACAd,CAAC,GAAGD,WAAW,GAAGzD,KAAK,CAAC2D,GAAN,CAAUa,YAAV,CAAlB;QACA;;QAED,IAAIC,EAAE,GAAG,CAACH,EAAV;;QACA,IAAI/C,KAAK,CAACwB,UAAN,CAAiB,MAAjB,CAAJ,EAA8B;UAC7B0B,EAAE,GAAGJ,EAAL;QACA;;QAEDJ,IAAI,CAAC/B,GAAL,CAAS,QAAT,EAAmB,CAAC;UAAEqC,CAAC,EAAErD,KAAK,CAACqD,CAAN,KAAY5B,MAAM,GAAGyB,GAA1B;UAA+BV,CAAC,EAAExC,KAAK,CAACwC,CAAN,KAAYf,MAAM,GAAGgB;QAAvD,CAAD,EAA+D;UAAEY,CAAC,EAAEA,CAAC,GAAGE,EAAT;UAAaf,CAAC,EAAEA;QAAhB,CAA/D,EAAoF;UAAEa,CAAC,EAAEA,CAAL;UAAQb,CAAC,EAAEA;QAAX,CAApF,CAAnB;MACA;IACD;;;;;;WAED,UAAuBgB,MAAvB,EAAqC;MAEpC,IAAMC,MAAM,GAAGD,MAAM,CAAC/D,GAAP,CAAW,QAAX,CAAf;;MACA,IAAIgE,MAAJ,EAAY;QACX,IAAM7D,QAAQ,GAAG6D,MAAM,CAAC7D,QAAxB;QACA,IAAMI,KAAK,GAAGJ,QAAQ,CAACH,GAAT,CAAa,OAAb,CAAd;;QAEA,IAAIO,KAAJ,EAAW;UACV,IAAM4B,WAAW,GAAG5B,KAAK,CAACP,GAAN,CAAU,aAAV,EAAyB,CAAzB,CAApB;UACA,IAAMgC,MAAM,GAAGzB,KAAK,CAACP,GAAN,CAAU,QAAV,EAAoB,CAApB,CAAf;UACA,IAAM2B,UAAU,GAAGpB,KAAK,CAACP,GAAN,CAAU,YAAV,EAAwB,CAAxB,CAAnB;UACA,IAAMiE,GAAG,GAAG1D,KAAK,CAACP,GAAN,CAAU,KAAV,EAAiB,CAAjB,CAAZ;UACA,IAAMkE,SAAS,GAAGH,MAAM,CAAC/D,GAAP,CAAW,WAAX,EAAwB,GAAxB,CAAlB;UACA,IAAMmE,SAAS,GAAGJ,MAAM,CAAC/D,GAAP,CAAW,WAAX,EAAwB,GAAxB,CAAlB;UAEA,IAAMoE,KAAK,GAAGzC,UAAU,GAAGsC,GAAG,GAAGC,SAAjC;UACA,IAAMG,CAAC,GAAGlC,WAAW,GAAG,CAACH,MAAM,GAAGG,WAAV,IAAyBgC,SAAjD;UAEAH,MAAM,CAACM,MAAP,CAAc;YAAEV,CAAC,EAAEvE,KAAK,CAACoE,GAAN,CAAUW,KAAV,IAAmBC,CAAxB;YAA2BtB,CAAC,EAAE1D,KAAK,CAAC2D,GAAN,CAAUoB,KAAV,IAAmBC;UAAjD,CAAd;QACA;MACD;IACD;;EA3ODE;oBAAA;sBAAA;kBAAA;WAAkC;EAAlC;EACAA;oBAAA;sBAAA;kBAAA;WAA0C1F,aAAa,CAAC2F,UAAd,CAAyBC,MAAzB,CAAgC,CAACC,SAAS,CAACC,SAAX,CAAhC;EAA1C;EA2OD;AAAC,CAhPD,CAA+B9F,aAA/B;;SAAa6F","names":["PercentSeries","Template","Slice","Tick","RadialLabel","ListTemplate","p100","$array","$math","$utils","__extends","new","_new","_this","_root","themeTags","mergeTags","slices","template","get","labels","ticks","dataItem","_super","processDataItem","call","slice","makeSlice","on","_updateTick","events","label","makeLabel","makeTick","markDirty","chart","_maxRadius","labelsContainer","maxHeight","_prepareChildren","isDirty","labelsTemplate","set","textType","_valuesDirty","markDirtyBounds","startAngle","endAngle","arc_1","currentAngle_1","radius_1","radius","setPrivateRaw","innerRadius_1","innerRadius","getPrivate","each","_dataItems","updateLegendValue","currentArc","color","_setDefault","middleAngle","normalizeAngle","setPrivate","labelRadius","y","sin","isHidden","isHiding","_lLabels","push","_rLabels","tick","location","labelAngle","cos","pl","pr","x","labelAngle_1","dx","bullet","sprite","arc","locationX","locationY","angle","r","setAll","Object","classNames","concat","PieSeries","className"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/pie/PieSeries.ts"],"sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { PieChart } from \"./PieChart\";\n\nimport { PercentSeries, IPercentSeriesSettings, IPercentSeriesDataItem, IPercentSeriesPrivate } from \"../percent/PercentSeries\";\nimport { Template } from \"../../core/util/Template\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Tick } from \"../../core/render/Tick\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { p100, Percent } from \"../../core/util/Percent\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IPieSeriesDataItem extends IPercentSeriesDataItem {\n\tslice: Slice;\n\tlabel: RadialLabel;\n}\n\nexport interface IPieSeriesSettings extends IPercentSeriesSettings {\n\n\t/**\n\t * Radius of the series in pixels or percent.\n\t */\n\tradius?: Percent | number;\n\n\t/**\n\t * Radius of the series in pixels or percent.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t */\n\tinnerRadius?: Percent | number;\n\n\t/**\n\t * Start angle of the series in degrees.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series in degrees.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n}\n\nexport interface IPieSeriesPrivate extends IPercentSeriesPrivate {\n\n\t/**\n\t * Actual radius of the series in pixels.\n\t */\n\tradius?: number;\n\n}\n\n/**\n * Creates a series for a [[PieChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\n * @important\n */\nexport class PieSeries extends PercentSeries {\n\n\tdeclare public chart: PieChart | undefined;\n\n\tpublic static className: string = \"PieSeries\";\n\tpublic static classNames: Array<string> = PercentSeries.classNames.concat([PieSeries.className]);\n\n\tdeclare public _settings: IPieSeriesSettings;\n\tdeclare public _privateSettings: IPieSeriesPrivate;\n\tdeclare public _dataItemSettings: IPieSeriesDataItem;\n\n\tdeclare public _sliceType: Slice;\n\tdeclare public _labelType: RadialLabel;\n\n\tprotected _makeSlices(): ListTemplate<this[\"_sliceType\"]> {\n\t\treturn new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Slice._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\n\t\t\t}, [this.slices.template]),\n\t\t);\n\t}\n\n\tprotected _makeLabels(): ListTemplate<this[\"_labelType\"]> {\n\t\treturn new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => RadialLabel._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\n\t\t\t}, [this.labels.template]),\n\t\t);\n\t}\n\n\tprotected _makeTicks(): ListTemplate<this[\"_tickType\"]> {\n\t\treturn new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Tick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\n\t\t\t}, [this.ticks.template]),\n\t\t);\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst slice = this.makeSlice(dataItem);\n\n\t\tslice.on(\"scale\", () => {\n\t\t\tthis._updateTick(dataItem);\n\t\t})\n\t\tslice.on(\"shiftRadius\", () => {\n\t\t\tthis._updateTick(dataItem);\n\t\t})\n\t\tslice.events.on(\"positionchanged\", () => {\n\t\t\tthis._updateTick(dataItem);\n\t\t})\n\n\t\tconst label = this.makeLabel(dataItem);\n\n\t\tlabel.events.on(\"positionchanged\", () => {\n\t\t\tthis._updateTick(dataItem);\n\t\t})\n\n\t\tthis.makeTick(dataItem);\n\n\t\tslice.events.on(\"positionchanged\", () => {\n\t\t\tlabel.markDirty();\n\t\t})\n\t}\n\n\tprotected _getNextUp() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart._maxRadius;\n\t\t}\n\t\treturn this.labelsContainer.maxHeight() / 2;\n\t}\n\n\tprotected _getNextDown() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn -chart._maxRadius;\n\t\t}\n\t\treturn -this.labelsContainer.maxHeight() / 2;\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\n\t\t\tif (this.isDirty(\"alignLabels\")) {\n\t\t\t\tlet labelsTemplate = this.labels.template;\n\n\t\t\t\tif (this.get(\"alignLabels\")) {\n\t\t\t\t\tlabelsTemplate.set(\"textType\", \"aligned\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet textType = labelsTemplate.get(\"textType\");\n\t\t\t\t\tif (textType == null || textType == \"aligned\") {\n\t\t\t\t\t\tlabelsTemplate.set(\"textType\", \"adjusted\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\n\t\t\t\tthis.markDirtyBounds();\n\t\t\t\tconst startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\n\t\t\t\tconst endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\n\t\t\t\tconst arc = endAngle - startAngle;\n\t\t\t\tlet currentAngle = startAngle;\n\n\t\t\t\tconst radius = chart.radius(this);\n\t\t\t\tthis.setPrivateRaw(\"radius\", radius);\n\t\t\t\tlet innerRadius = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\n\n\t\t\t\tif (innerRadius < 0) {\n\t\t\t\t\tinnerRadius = radius + innerRadius;\n\t\t\t\t}\n\n\t\t\t\t//if (radius > 0) {\n\t\t\t\t$array.each(this._dataItems, (dataItem) => {\n\n\t\t\t\t\tthis.updateLegendValue(dataItem);\n\n\t\t\t\t\tlet currentArc = arc * dataItem.get(\"valuePercentTotal\") / 100;\n\t\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\t\tif (slice) {\n\t\t\t\t\t\tslice.set(\"radius\", radius);\n\t\t\t\t\t\tslice.set(\"innerRadius\", innerRadius);\n\t\t\t\t\t\tslice.set(\"startAngle\", currentAngle);\n\n\t\t\t\t\t\tslice.set(\"arc\", currentArc);\n\n\t\t\t\t\t\tconst color = dataItem.get(\"fill\");\n\t\t\t\t\t\tslice._setDefault(\"fill\", color);\n\t\t\t\t\t\tslice._setDefault(\"stroke\", color);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet middleAngle = $math.normalizeAngle(currentAngle + currentArc / 2);\n\n\t\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\t\tif (label) {\n\t\t\t\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\t\t\t\tlabel.setPrivate(\"innerRadius\", innerRadius);\n\t\t\t\t\t\tlabel.set(\"labelAngle\", middleAngle);\n\n\t\t\t\t\t\tif (label.get(\"textType\") == \"aligned\") {\n\t\t\t\t\t\t\tlet labelRadius = radius + label.get(\"radius\", 0);\n\t\t\t\t\t\t\tlet y = radius * $math.sin(middleAngle);\n\n\t\t\t\t\t\t\tif (middleAngle > 90 && middleAngle <= 270) {\n\t\t\t\t\t\t\t\tif (!label.isHidden() && !label.isHiding()) {\n\t\t\t\t\t\t\t\t\tthis._lLabels.push({ label: label, y: y });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabelRadius *= -1;\n\t\t\t\t\t\t\t\tlabelRadius -= this.labelsContainer.get(\"paddingLeft\", 0);\n\t\t\t\t\t\t\t\tlabel.set(\"centerX\", p100);\n\t\t\t\t\t\t\t\tlabel.setPrivateRaw(\"left\", true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (!label.isHidden() && !label.isHiding()) {\n\t\t\t\t\t\t\t\t\tthis._rLabels.push({ label: label, y: y });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabelRadius += this.labelsContainer.get(\"paddingRight\", 0);\n\t\t\t\t\t\t\t\tlabel.set(\"centerX\", 0);\n\t\t\t\t\t\t\t\tlabel.setPrivateRaw(\"left\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel.set(\"x\", labelRadius);\n\t\t\t\t\t\t\tlabel.set(\"y\", radius * $math.sin(middleAngle));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcurrentAngle += currentArc;\n\t\t\t\t\tthis._updateTick(dataItem);\n\t\t\t\t})\n\t\t\t\t//}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTick(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst location = tick.get(\"location\", 1);\n\t\tif (tick && label && slice) {\n\t\t\tconst radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\n\t\t\tconst labelAngle = label.get(\"labelAngle\", 0);\n\t\t\tconst cos = $math.cos(labelAngle);\n\t\t\tconst sin = $math.sin(labelAngle);\n\n\t\t\tconst labelsContainer = this.labelsContainer;\n\t\t\tconst pl = labelsContainer.get(\"paddingLeft\", 0);\n\t\t\tconst pr = labelsContainer.get(\"paddingRight\", 0);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tx = label.x();\n\t\t\ty = label.y();\n\n\t\t\tif (label.get(\"textType\") == \"circular\") {\n\t\t\t\tconst labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\n\t\t\t\tconst labelAngle = label.get(\"labelAngle\", 0);\n\t\t\t\tx = labelRadius * $math.cos(labelAngle);\n\t\t\t\ty = labelRadius * $math.sin(labelAngle);\n\t\t\t}\n\n\t\t\tlet dx = -pr;\n\t\t\tif (label.getPrivate(\"left\")) {\n\t\t\t\tdx = pl;\n\t\t\t}\n\n\t\t\ttick.set(\"points\", [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }]);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst slice = dataItem.get(\"slice\");\n\n\t\t\tif (slice) {\n\t\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\t\tconst radius = slice.get(\"radius\", 0);\n\t\t\t\tconst startAngle = slice.get(\"startAngle\", 0);\n\t\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\t\tconst angle = startAngle + arc * locationX;\n\t\t\t\tconst r = innerRadius + (radius - innerRadius) * locationY;\n\n\t\t\t\tsprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}