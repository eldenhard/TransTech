{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from 'vuex';\nimport api from '@/api/wagonPark';\nimport MultiSelectUni from '../ui/MultiSelectUni.vue';\nexport default {\n  components: {\n    MultiSelectUni\n  },\n  name: 'FilterReportAbandon',\n\n  data() {\n    return {\n      filter_FilterReportAbandon: {\n        search: '',\n        groups: '' // first_name: '',\n        // last_name: '',\n        // email: '',\n\n      },\n      poligons: [],\n      selectedPolingonIds: []\n    };\n  },\n\n  computed: { ...mapState({\n      user: state => state.auth.user,\n      uid: state => state.auth.uid,\n      groupsFilterStaff: state => state.auth.groups\n    }),\n\n    poligonsObj() {\n      const result = [];\n      this.poligons.forEach((el, idx) => {\n        el && result.push({\n          id: idx,\n          value: el\n        });\n      });\n      return result;\n    },\n\n    selectedPoligons\n  },\n  methods: {\n    updateFilterDataReportAbandon() {\n      const filters = { ...this.filter_FilterReportAbandon\n      };\n\n      if (filters.groups.length == 0) {\n        delete filters.groups;\n      }\n\n      this.$emit('updateFilterDataReportAbandon', filters);\n    },\n\n    getPoligons() {\n      api.getFilters().then(response => {\n        this.poligons = response.data.polygons;\n      });\n    },\n\n    updateSelectedPoligons(selected) {}\n\n  },\n\n  mounted() {\n    this.getPoligons();\n  }\n\n};","map":{"version":3,"mappings":";AA2EA;AACA;AACA;AACA;EACAA;IAAAC;EAAA,CADA;EAEAC,2BAFA;;EAGAC;IACA;MACAC;QACAC,UADA;QAEAC,UAFA,CAGA;QACA;QACA;;MALA,CADA;MAQAC,YARA;MASAC;IATA;EAWA,CAfA;;EAgBAC,YACA;MACAC,8BADA;MAEAC,4BAFA;MAGAC;IAHA,EADA;;IAMAC;MACA;MACA;QACAC;UAAAC;UAAAC;QAAA;MACA,CAFA;MAGA;IACA,CAZA;;IAaAC;EAbA,CAhBA;EAgCAC;IACAC;MACA;MAAA;;MACA;QACA;MACA;;MACA;IACA,CAPA;;IAQAC;MACAC;QACA;MACA,CAFA;IAGA,CAZA;;IAaAC,kCAEA;;EAfA,CAhCA;;EAiDAC;IACA;EACA;;AAnDA","names":["components","MultiSelectUni","name","data","filter_FilterReportAbandon","search","groups","poligons","selectedPolingonIds","computed","user","uid","groupsFilterStaff","poligonsObj","el","id","value","selectedPoligons","methods","updateFilterDataReportAbandon","getPoligons","api","updateSelectedPoligons","mounted"],"sourceRoot":"src/components/filter","sources":["FilterReportAbandon.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"FilterReportAbandon\">\r\n            <div style=\"display:flex; flex-direction:column;\">\r\n                <label for=\"input_FilterReportAbandon\">Тип вагона</label>\r\n                <input type=\"text\" id=\"input-FilterReportAbandon\" class=\"input_FilterReportAbandon\"\r\n                    placeholder=\"введите тип вагона\" v-model=\"filter_FilterReportAbandon.search\"\r\n                    @change=\"updateFilterDataReportAbandon\" style=\"margin-top: -1px\">\r\n            </div>\r\n            <div style=\"display:flex; flex-direction:column;\">\r\n                <label for=\"input_FilterReportAbandon\">Полигон</label>\r\n                <multi-select-uni @change=\"updateSelectedPoligons\" :placeholder=\"'Выберите полигон'\" :variants=\"poligonsObj\" :variant-title=\"'value'\">\r\n                </multi-select-uni>\r\n                <!-- <input type=\"text\" id=\"input-FilterReportAbandon\" class=\"input_FilterReportAbandon\"\r\n                    placeholder=\"введите полигон\" v-model=\"filter_FilterReportAbandon.search\"\r\n                    @change=\"updateFilterDataReportAbandon\" style=\"margin-top: -1px\"> -->\r\n            </div>\r\n            <div style=\"display:flex; flex-direction:column;\">\r\n                <label for=\"input_FilterReportAbandon\">Контрагент</label>\r\n                <input type=\"text\" id=\"input-FilterReportAbandon\" class=\"input_FilterReportAbandon\"\r\n                    placeholder=\"введите контрагента\" v-model=\"filter_FilterReportAbandon.search\"\r\n                    @change=\"updateFilterDataReportAbandon\" style=\"margin-top: -1px\">\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"option_select_block\">\r\n            <span class=\"option_select_block_check\">\r\n                <span style=\"color: black\">&#10003;</span> Цистерна</span>\r\n            <span class=\"option_select_block_check\">\r\n                <span style=\"color: black\">&#10003;</span> Цистерна</span>\r\n            <span class=\"option_select_block_check\">\r\n                <span style=\"color: black\">&#10003;</span> Цистерна</span>\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n    \r\n<style>\r\n.input_FilterReportAbandon {\r\n    width: 100% !important;\r\n    height: 30px;\r\n\r\n}\r\n\r\n.FilterReportAbandon {\r\n    width: 100% !important;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    /* border-radius: 50px; */\r\n    background: #e0e0e0;\r\n    box-shadow: 20px 20px 30px #cecece,\r\n        -20px -20px 30px #f2f2f2;\r\n    position: relative;\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n    margin: 1% 0;\r\n}\r\n\r\n.option_select_block {\r\n    margin-top: 3%;\r\n\r\n}\r\n\r\n.option_select_block_check {\r\n    background: #6b8798;\r\n    color: white;\r\n    font-weight: 400;\r\n    padding: 3px 4px;\r\n    border-radius: 4px;\r\n    margin-right: 0.3%;\r\n}\r\n</style>\r\n    \r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport api from '@/api/wagonPark'\r\nimport MultiSelectUni from '../ui/MultiSelectUni.vue'\r\nexport default {\r\n    components: { MultiSelectUni },\r\n    name: 'FilterReportAbandon',\r\n    data() {\r\n        return {\r\n            filter_FilterReportAbandon: {\r\n                search: '',\r\n                groups: '',\r\n                // first_name: '',\r\n                // last_name: '',\r\n                // email: '',\r\n            },\r\n            poligons: [],\r\n            selectedPolingonIds: [],\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState({\r\n            user: state => state.auth.user,\r\n            uid: state => state.auth.uid,\r\n            groupsFilterStaff: state => state.auth.groups\r\n        }),\r\n        poligonsObj() {\r\n            const result = []\r\n            this.poligons.forEach((el, idx) => {\r\n                el && result.push({ id: idx, value: el })\r\n            })\r\n            return result\r\n        },\r\n        selectedPoligons\r\n\r\n    },\r\n    methods: {\r\n        updateFilterDataReportAbandon() {\r\n            const filters = { ...this.filter_FilterReportAbandon }\r\n            if (filters.groups.length == 0) {\r\n                delete (filters.groups)\r\n            }\r\n            this.$emit('updateFilterDataReportAbandon', filters)\r\n        },\r\n        getPoligons() {\r\n            api.getFilters().then(response => {\r\n                this.poligons = response.data.polygons\r\n            })\r\n        },\r\n        updateSelectedPoligons(selected){\r\n\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getPoligons()\r\n    }\r\n}\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module"}